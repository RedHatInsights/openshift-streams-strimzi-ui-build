{"version":3,"file":"4242.42379273.js","mappings":"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","sources":["webpack://kafka-ui/./src/components/KafkaModal/KafkaModals.tsx","webpack://kafka-ui/./src/components/MASLoading/MASLoading.tsx","webpack://kafka-ui/./src/components/MASPagination/MASPagination.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicDetailHead/TopicDetailHead.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicDetailView/TopicDetailView.tsx","webpack://kafka-ui/./src/modules/Topics/pages/TopicDetail/TopicDetailPage.tsx","webpack://kafka-ui/./src/utils/common.ts"],"sourcesContent":["// A map of modal components to their lazy loaded implementations\nimport React from 'react';\n\nimport { useTranslation } from 'react-i18next';\nimport {\n  ConsumerGroupResetOffsetProps,\n  DeleteConsumerGroupProps,\n  DeleteTopicProps,\n  ManagePermissionsProps,\n  ModalRegistry,\n  ModalType,\n  PartitionsChangeProps,\n  useModal,\n} from '@rhoas/app-services-ui-shared';\n\nexport const useKafkaModals = (): ModalRegistry => {\n  const { t } = useTranslation();\n  return {\n    [ModalType.KafkaDeleteTopic]: {\n      lazyComponent: React.lazy(\n        () =>\n          import(\n            /* webpackPrefetch: true */ '@app/modules/Topics/dialogs/DeleteTopic/DeleteTopic'\n          )\n      ) as React.LazyExoticComponent<React.FunctionComponent<DeleteTopicProps>>,\n      variant: 'small',\n    },\n    [ModalType.KafkaUpdatePartitions]: {\n      lazyComponent: React.lazy(\n        () =>\n          import(\n            /* webpackPrefetch: true */ '@app/modules/Topics/dialogs/PartitionsChange/PartitionsChange'\n          )\n      ) as React.LazyExoticComponent<\n        React.FunctionComponent<PartitionsChangeProps>\n      >,\n      variant: 'small',\n    },\n    [ModalType.KafkaDeleteConsumerGroup]: {\n      lazyComponent: React.lazy(\n        () =>\n          import(\n            /* webpackPrefetch: true */ '@app/modules/ConsumerGroups/dialogs/DeleteConsumerGroup/DeleteConsumerGroup'\n          )\n      ) as React.LazyExoticComponent<\n        React.FunctionComponent<DeleteConsumerGroupProps>\n      >,\n      variant: 'small',\n    },\n    [ModalType.KafkaConsumerGroupResetOffset]: {\n      lazyComponent: React.lazy(\n        () =>\n          import(\n            /* webpackPrefetch: true */ '@app/modules/ConsumerGroups/dialogs/ConsumerGroupResetOffset/ConsumerGroupResetOffset'\n          )\n      ) as React.LazyExoticComponent<\n        React.FunctionComponent<ConsumerGroupResetOffsetProps>\n      >,\n      variant: 'large',\n    },\n    [ModalType.KafkaManagePermissions]: {\n      lazyComponent: React.lazy(\n        () =>\n          import(\n            /* webpackPrefetch: true */ '@app/modules/Permissions/dialogs/ManagePermissions/ManagePermissions'\n          )\n      ) as React.LazyExoticComponent<\n        React.FunctionComponent<ManagePermissionsProps>\n      >,\n      variant: 'large',\n      title: t('permission.manage_permissions_dialog.title'),\n    },\n  };\n};\n\nexport const KafkaModalLoader: React.FunctionComponent = () => {\n  const { registerModals } = useModal();\n  const kafkaModals = useKafkaModals();\n  registerModals(kafkaModals);\n  return <></>;\n};\n","import React from 'react';\nimport {\n  Bullseye,\n  BullseyeProps,\n  Spinner,\n  SpinnerProps,\n} from '@patternfly/react-core';\n\nexport type MASLoadingProps = {\n  bullseyeProps?: Omit<BullseyeProps, 'children'>;\n  spinnerProps?: SpinnerProps;\n};\n\nexport const MASLoading: React.FunctionComponent<MASLoadingProps> = ({\n  bullseyeProps,\n  spinnerProps,\n}: MASLoadingProps) => (\n  <Bullseye {...bullseyeProps}>\n    <Spinner {...spinnerProps} />\n  </Bullseye>\n);\n","import React, {\n  useCallback,\n  FunctionComponent,\n  createContext,\n  useContext,\n  useState,\n} from 'react';\nimport {\n  Pagination as PFPagination,\n  PaginationProps as PFPaginationProps,\n  PaginationVariant,\n} from '@patternfly/react-core';\n\nexport type PaginationProps = Omit<PFPaginationProps, 'children' | 'ref'>;\n\nexport type PaginationContextProps = {\n  page: number | undefined;\n  perPage: number | undefined;\n  setPage: (page: number | undefined) => void;\n  setPerPage: (perPage: number | undefined) => void;\n};\n\nexport const PaginationContext = createContext<\n  PaginationContextProps | undefined\n>(undefined);\nexport const usePaginationParams = (): PaginationContextProps | undefined =>\n  useContext(PaginationContext);\n\nexport const PaginationProvider: React.FC = ({ children }) => {\n  const [page, setPage] = useState<number | undefined>(1);\n  const [perPage, setPerPage] = useState<number | undefined>(10);\n\n  return (\n    <PaginationContext.Provider value={{ page, perPage, setPage, setPerPage }}>\n      {children}\n    </PaginationContext.Provider>\n  );\n};\n\nconst MASPagination: FunctionComponent<PaginationProps> = ({\n  itemCount,\n  variant = PaginationVariant.top,\n  isCompact,\n  titles,\n  ...restProps\n}) => {\n  const { setPage, setPerPage, perPage, page } = usePaginationParams() || {};\n\n  const onSetPage = useCallback((_: unknown, newPage: number) => {\n    setPage && setPage(newPage);\n  }, []);\n\n  const onPerPageSelect = useCallback((_: unknown, newPerPage: number) => {\n    setPage && setPage(1);\n    setPerPage && setPerPage(newPerPage);\n  }, []);\n\n  return (\n    <PFPagination\n      itemCount={itemCount}\n      perPage={perPage}\n      page={page}\n      onSetPage={onSetPage}\n      variant={variant}\n      onPerPageSelect={onPerPageSelect}\n      isCompact={isCompact}\n      {...restProps}\n      titles={titles}\n    />\n  );\n};\n\nexport { MASPagination };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  TextContent,\n  Text,\n  TextVariants,\n  PageSection,\n  PageSectionVariants,\n} from '@patternfly/react-core';\nimport '../TopicDetailView/TopicDetailView.css';\n\nexport type TopicDetailHeadProps = {\n  topicName: string;\n  kafkaName?: string;\n  kafkaInstanceLink?: string;\n  kafkaPageLink?: string;\n};\n\nexport const TopicDetailHead: React.FC<TopicDetailHeadProps> = ({\n  topicName,\n  kafkaName,\n  kafkaInstanceLink,\n  kafkaPageLink,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <section className='pf-c-page__main-breadcrumb'>\n        <Breadcrumb>\n          <BreadcrumbItem to={kafkaPageLink || '#'}>\n            {t('common.kafka_instance')}\n          </BreadcrumbItem>\n          <BreadcrumbItem to={kafkaInstanceLink || '#'}>\n            {kafkaName ? kafkaName : t('common.kafka_instance_name')}\n          </BreadcrumbItem>\n          <BreadcrumbItem>{topicName}</BreadcrumbItem>\n        </Breadcrumb>\n      </section>\n      <PageSection variant={PageSectionVariants.light}>\n        <TextContent>\n          <Text component={TextVariants.h1}>{topicName}</Text>\n        </TextContent>\n      </PageSection>\n    </>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useBasename } from '@rhoas/app-services-ui-shared';\nimport {\n  PageSection,\n  PageGroup,\n  JumpLinks,\n  JumpLinksItem,\n  TextContent,\n  Text,\n  TextVariants,\n  Button,\n  Divider,\n  Sidebar,\n  SidebarContent,\n  SidebarPanel,\n  SplitItem,\n  Split,\n  Form,\n  FormSection,\n} from '@patternfly/react-core';\nimport {\n  DEFAULT_MESSAGE_TIMESTAMP_TYPE,\n  DEFAULT_DELETE_RETENTION_TIME,\n  DEFAULT_FILE_DELETE_DELAY,\n  DEFAULT_INDEX_INTERVAL_SIZE,\n  DEFAULT_LOG_SEGMENT_SIZE,\n  DEFAULT_MAXIMUM_MESSAGE_BYTES,\n  DEFAULT_MINIMUM_COMPACTION_LAG_TIME,\n  DEFAULT_MIN_CLEANBLE_RATIO,\n  DEFAULT_MIN_INSYNC_REPLICAS,\n  DEFAULT_SEGMENT_INDEX_SIZE,\n  DEFAULT_SEGMENT_JITTER_TIME,\n  DEFAULT_SEGMENT_TIME,\n  DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF,\n  DEFAULT_FLUSH_INTERVAL_MESSAGES,\n  DEFAULT_FLUSH_INTERVAL_TIME,\n} from '@app/constant';\nimport './TopicDetailView.css';\nimport { TextWithLabelPopover } from '@app/components/TextWithLabelPopover';\nimport { IAdvancedTopic } from '@app/modules/Topics/components/CreateTopicWizard';\nimport { convertRetentionSize, convertRetentionTime } from '@app/utils';\n\nexport type TopicViewDetailProps = {\n  /** Topic details */\n  topic: IAdvancedTopic;\n  /** Method to delete topic */\n  deleteTopic: () => void;\n};\n\nexport const TopicDetailView: React.FunctionComponent<TopicViewDetailProps> = ({\n  topic,\n  deleteTopic,\n}) => {\n  const history = useHistory();\n  const { topicName } = useParams<{ topicName: string }>();\n  const { getBasename } = useBasename() || { getBasename: () => '' };\n  const basename = getBasename();\n  const { t } = useTranslation();\n\n  const updateTopic = () => {\n    history.push(`${basename}/topic/update/${topicName}`);\n  };\n\n  return (\n    <PageSection padding={{ default: 'noPadding' }}>\n      <Sidebar hasGutter>\n        <SidebarPanel variant='sticky'>\n          <JumpLinks\n            isVertical\n            label={t('topic.jump_to_section')}\n            scrollableSelector='.app-services-ui--u-display-contents > div:nth-child(1) > div:nth-child(1) > div:nth-child(1)'\n            offset={-164} // for header\n            style={{ position: 'sticky' }}\n          >\n            <JumpLinksItem key={0} href='#core-configuration'>\n              {t('topic.core_configuration')}\n            </JumpLinksItem>\n            <JumpLinksItem key={1} href='#messages'>\n              {t('topic.messages')}\n            </JumpLinksItem>\n            <JumpLinksItem key={2} href='#log'>\n              {t('topic.log')}\n            </JumpLinksItem>\n            <JumpLinksItem key={3} href='#replication'>\n              {t('topic.replication')}\n            </JumpLinksItem>\n            <JumpLinksItem key={4} href='#cleanup'>\n              {t('common.cleanup')}\n            </JumpLinksItem>\n            <JumpLinksItem key={5} href='#index'>\n              {t('topic.index')}\n            </JumpLinksItem>\n            <JumpLinksItem key={6} href='#flush'>\n              {t('topic.flush')}\n            </JumpLinksItem>\n            <JumpLinksItem key={7} href='#delete'>\n              {t('common.delete')}\n            </JumpLinksItem>\n          </JumpLinks>\n        </SidebarPanel>\n        <SidebarContent>\n          <PageGroup hasOverflowScroll id='topic-detail-view'>\n            <PageSection padding={{ default: 'noPadding' }}>\n              <Split>\n                <SplitItem isFilled>\n                  <Form id='topic-form'>\n                    <FormSection\n                      title={t('topic.core_configuration')}\n                      id='core-configuration'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className='section-info'\n                        >\n                          {t('topic.core_config_info')}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='topic-name'\n                        btnAriaLabel={t('common.name')}\n                        fieldLabel={t('topic.topic_name')}\n                        fieldValue={topic.name}\n                        popoverBody={t('topic.topic_name_description')}\n                        popoverHeader={t('topic.topic_name')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='partitions'\n                        btnAriaLabel={t('topic.partitions')}\n                        fieldLabel={t('topic.partitions')}\n                        fieldValue={topic.numPartitions}\n                        popoverBody={t('topic.partitions_description')}\n                        popoverHeader={t('topic.partitions')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='replicas'\n                        btnAriaLabel={t('topic.replicas')}\n                        fieldLabel={t('topic.replicas')}\n                        fieldValue={topic.replicationFactor}\n                        popoverBody={t('topic.replicas_description')}\n                        popoverHeader={t('topic.replicas')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='min-insync-replicas'\n                        btnAriaLabel={t('topic.min_insync_replicas')}\n                        fieldLabel={t('topic.min_insync_replicas')}\n                        fieldValue={DEFAULT_MIN_INSYNC_REPLICAS}\n                        popoverBody={t('topic.min_insync_replicas_description')}\n                        popoverHeader={t('topic.min_insync_replicas')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='retention-time'\n                        btnAriaLabel={t('topic.retention_time')}\n                        fieldLabel={t('topic.retention_time')}\n                        fieldValue={convertRetentionTime(\n                          Number(topic['retention.ms'])\n                        )}\n                        popoverBody={t('topic.retention_time_description')}\n                        popoverHeader={t('topic.retention_time')}\n                        showUnlimited={true}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='retention-size'\n                        btnAriaLabel={t('topic.retention_size')}\n                        fieldLabel={t('topic.retention_size')}\n                        fieldValue={convertRetentionSize(\n                          Number(topic['retention.bytes'])\n                        )}\n                        popoverHeader={t('topic.retention_size')}\n                        popoverBody={t('topic.retention_size_description')}\n                        showUnlimited={true}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t('topic.messages')}\n                      id='messages'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className='section-info'\n                        >\n                          {t('topic.message_section_info')}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='max-message-size'\n                        btnAriaLabel={t('topic.max_message_size')}\n                        fieldLabel={t('topic.max_message_size')}\n                        fieldValue={DEFAULT_MAXIMUM_MESSAGE_BYTES}\n                        popoverBody={t('topic.max_message_size_description')}\n                        popoverHeader={t('topic.max_message_size')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='message-timestamp-type'\n                        btnAriaLabel={t('topic.message_timestamp_type')}\n                        fieldLabel={t('topic.message_timestamp_type')}\n                        fieldValue={DEFAULT_MESSAGE_TIMESTAMP_TYPE}\n                        popoverBody={t(\n                          'topic.message_timestamp_type_description'\n                        )}\n                        popoverHeader={t('topic.message_timestamp_type')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='max-message-timestamp-diff'\n                        btnAriaLabel={t('topic.max_message_timestamp_diff')}\n                        fieldLabel={t('topic.max_message_timestamp_diff')}\n                        fieldValue={DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF}\n                        popoverBody={t(\n                          'topic.max_message_timestamp_diff_description'\n                        )}\n                        popoverHeader={t('topic.max_message_timestamp_diff')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='compression-type'\n                        btnAriaLabel={t('topic.compression_type')}\n                        fieldLabel={t('topic.compression_type')}\n                        fieldValue='Producer'\n                        popoverBody={t('topic.compression_type_description')}\n                        popoverHeader={t('topic.compression_type')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='message-format'\n                        btnAriaLabel={t('topic.message_format')}\n                        fieldLabel={t('topic.message_format')}\n                        fieldValue='2.7-IV2'\n                        popoverBody={t('topic.message_format_description')}\n                        popoverHeader={t('topic.message_format')}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t('topic.log')}\n                      id='log'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text component={TextVariants.p}>\n                          {t('topic.log_section_info')}\n                          <Text\n                            component={TextVariants.small}\n                            className='section-info-note'\n                          >\n                            {t('topic.log_section_info_note')}\n                          </Text>\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='cleanup-policy'\n                        btnAriaLabel={t('topic.cleanup_policy')}\n                        fieldLabel={t('topic.cleanup_policy')}\n                        fieldValue={topic['cleanup.policy']}\n                        popoverBody={t('topic.cleanup_policy_description')}\n                        popoverHeader={t('topic.cleanup_policy')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='delete-retention-time'\n                        btnAriaLabel={t('topic.delete_retention_time')}\n                        fieldLabel={t('topic.delete_retention_time')}\n                        fieldValue={DEFAULT_DELETE_RETENTION_TIME}\n                        popoverBody={t(\n                          'topic.delete_retention_time_description'\n                        )}\n                        popoverHeader={t('topic.delete_retention_time')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='min-cleanable-ratio'\n                        btnAriaLabel={t('topic.min_cleanable_ratio')}\n                        fieldLabel={t('topic.min_cleanable_ratio')}\n                        fieldValue={DEFAULT_MIN_CLEANBLE_RATIO}\n                        popoverBody={t('topic.min_cleanable_ratio_description')}\n                        popoverHeader={t('topic.min_cleanable_ratio')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='min-compaction-lag-time'\n                        btnAriaLabel={t('topic.min_compaction_lag_time')}\n                        fieldLabel={t('topic.min_compaction_lag_time')}\n                        fieldValue={DEFAULT_MINIMUM_COMPACTION_LAG_TIME}\n                        popoverBody={t(\n                          'topic.min_compaction_lag_time_description'\n                        )}\n                        popoverHeader={t('topic.min_compaction_lag_time')}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t('topic.replication')}\n                      id='replication'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text component={TextVariants.p}>\n                          {t('topic.replication_section_info')}\n                          <Text component={TextVariants.small}>\n                            {t('topic.replication_section_info_note')}\n                          </Text>\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='unclean-leader-election'\n                        btnAriaLabel={t('topic.unclean_leader_election')}\n                        fieldLabel={t('topic.unclean_leader_election')}\n                        fieldValue={t('common.disabled')}\n                        popoverBody={t(\n                          'topic.unclean_leader_election_description'\n                        )}\n                        popoverHeader={t('topic.unclean_leader_election')}\n                      />\n                    </FormSection>\n\n                    <FormSection\n                      title={t('common.cleanup')}\n                      id='cleanup'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className='section-info'\n                        >\n                          {t('topic.cleanup_section_info')}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='log-segment-size'\n                        btnAriaLabel={t('topic.log_segment_size')}\n                        fieldLabel={t('topic.log_segment_size')}\n                        fieldValue={DEFAULT_LOG_SEGMENT_SIZE}\n                        popoverBody={t('topic.log_segment_size_description')}\n                        popoverHeader={t('topic.log_segment_size')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='segement-time'\n                        btnAriaLabel={t('topic.segement_time')}\n                        fieldLabel={t('topic.segement_time')}\n                        fieldValue={DEFAULT_SEGMENT_TIME}\n                        popoverBody={t('topic.segement_time_description')}\n                        popoverHeader={t('topic.segement_time')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='segment-jitter-time'\n                        btnAriaLabel={t('topic.segment_jitter_time')}\n                        fieldLabel={t('topic.segment_jitter_time')}\n                        fieldValue={DEFAULT_SEGMENT_JITTER_TIME}\n                        popoverBody={t('topic.segment_jitter_time_description')}\n                        popoverHeader={t('topic.segment_jitter_time')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='file-delete-delay'\n                        btnAriaLabel={t('topic.file_delete_delay')}\n                        fieldLabel={t('topic.file_delete_delay')}\n                        fieldValue={DEFAULT_FILE_DELETE_DELAY}\n                        popoverBody={t('topic.file_delete_delay_description')}\n                        popoverHeader={t('topic.file_delete_delay')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='preallocate-log-segment-files'\n                        btnAriaLabel={t('topic.preallocate_log_segment_files')}\n                        fieldLabel={t('topic.preallocate_log_segment_files')}\n                        fieldValue={t('common.disabled')}\n                        popoverBody={t(\n                          'topic.preallocate_log_segment_files_description'\n                        )}\n                        popoverHeader={t('topic.preallocate_log_segment_files')}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t('topic.index')}\n                      id='index'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className='section-info'\n                        >\n                          {t('topic.index_section_info')}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='index-interval-size'\n                        btnAriaLabel={t('topic.index_interval_size')}\n                        fieldLabel={t('topic.index_interval_size')}\n                        fieldValue={DEFAULT_INDEX_INTERVAL_SIZE}\n                        popoverBody={t('topic.index_interval_size_description')}\n                        popoverHeader={t('topic.index_interval_size')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='segment-index-size'\n                        btnAriaLabel={t('topic.segment_index_size')}\n                        fieldLabel={t('topic.segment_index_size')}\n                        fieldValue={DEFAULT_SEGMENT_INDEX_SIZE}\n                        popoverBody={t('topic.segment_index_size_description')}\n                        popoverHeader={t('topic.segment_index_size')}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t('topic.flush')}\n                      id='flush'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className='section-info'\n                        >\n                          {t('topic.flush_section_info')}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='flush-interval-messages'\n                        btnAriaLabel={t('topic.flush_interval_messages')}\n                        fieldLabel={t('topic.flush_interval_messages')}\n                        fieldValue={DEFAULT_FLUSH_INTERVAL_MESSAGES}\n                        popoverBody={t(\n                          'topic.flush_interval_messages_description'\n                        )}\n                        popoverHeader={t('topic.flush_interval_messages')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='flush-interval-time'\n                        btnAriaLabel={t('topic.flush_interval_time')}\n                        fieldLabel={t('topic.flush_interval_time')}\n                        fieldValue={DEFAULT_FLUSH_INTERVAL_TIME}\n                        popoverBody={t('topic.flush_interval_time_description')}\n                        popoverHeader={t('topic.flush_interval_time')}\n                      />\n                    </FormSection>\n                  </Form>\n\n                  <Divider className='kafka-ui-divider__Margin' />\n\n                  <TextContent>\n                    <Text component={TextVariants.h2} id='delete'>\n                      {t('topic.delete_topic')}\n                    </Text>\n                    <Text component={TextVariants.p} className='section-info'>\n                      {t('topic.delete_topic_info')}\n                    </Text>\n                    <Button\n                      variant='danger'\n                      onClick={deleteTopic}\n                      data-testid='tabProperties-actionDelete'\n                    >\n                      {t('common.delete_topic')}\n                    </Button>\n                  </TextContent>\n                </SplitItem>\n                <SplitItem>\n                  <Button\n                    variant='primary'\n                    onClick={updateTopic}\n                    data-testid='tabProperties-actionEdit'\n                  >\n                    {t('common.edit_props')}\n                  </Button>\n                </SplitItem>\n              </Split>\n            </PageSection>\n          </PageGroup>\n        </SidebarContent>\n      </Sidebar>\n    </PageSection>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n  AlertVariant,\n  PageSection,\n  PageSectionVariants,\n  Tab,\n  TabContent,\n  Tabs,\n  TabTitleText,\n} from '@patternfly/react-core';\nimport {\n  IAdvancedTopic,\n  TopicDetailHead,\n  TopicDetailView,\n} from '@app/modules/Topics/components';\nimport { getTopicDetail } from '@app/services';\nimport { ConfigContext, useFederated } from '@app/contexts';\nimport { ConsumerGroups } from '@app/modules/ConsumerGroups';\nimport { isAxiosError } from '@app/utils/axios';\nimport { useAlert, useBasename } from '@rhoas/app-services-ui-shared';\nimport '../style.css';\nimport { ModalType, useModal } from '@rhoas/app-services-ui-shared';\n\nexport const TopicDetailPage: React.FC = () => {\n  const {\n    activeTab = 2,\n    kafkaName,\n    kafkaPageLink,\n    kafkaInstanceLink,\n    onError,\n    showSchemas,\n  } = useFederated() || {};\n\n  const history = useHistory();\n  const { topicName } = useParams<{ topicName: string }>();\n  const { getBasename } = useBasename() || { getBasename: () => '' };\n  const basename = getBasename();\n\n  const [topicDetail, setTopicDetail] = useState<IAdvancedTopic>({\n    name: topicName,\n    numPartitions: '',\n    'retention.ms': '',\n    'retention.ms.unit': 'milliseconds',\n    'retention.bytes': '',\n    'retention.bytes.unit': 'bytes',\n    'cleanup.policy': '',\n  });\n  const [activeTabKey, setActiveTabKey] = useState(activeTab);\n  const config = useContext(ConfigContext);\n  const { addAlert } = useAlert() || {\n    addAlert: () => {\n      // No-op\n    },\n  };\n  const { t } = useTranslation();\n  const contentRefConsumerGroup = React.createRef<HTMLElement>();\n  const contentRefProperties = React.createRef<HTMLElement>();\n  const contentRefSchemas = React.createRef<HTMLElement>();\n  const { showModal } = useModal<ModalType.KafkaDeleteTopic>();\n\n  const onDeleteTopic = () => {\n    //Redirect on topics  viewpage after delete topic successfuly\n    history.push(basename);\n  };\n\n  const fetchTopicDetail = async (topicName: string) => {\n    if (activeTab === 2) {\n      try {\n        await getTopicDetail(topicName, config).then((response) => {\n          setTopicDetail(response);\n        });\n      } catch (err) {\n        if (isAxiosError(err)) {\n          if (onError) {\n            onError(\n              err.response?.data.code || -1,\n              err.response?.data.error_message\n            );\n          }\n          if (err.response?.status === 404) {\n            // then it's a non-existent topic\n            addAlert({\n              title: t('topic.topic_not_found', { name: topicName }),\n              variant: AlertVariant.danger,\n            });\n          }\n        }\n      }\n    }\n  };\n\n  const handleTabClick = (event, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  // Make the get request\n  useEffect(() => {\n    fetchTopicDetail(topicName);\n  }, [topicName]);\n\n  const deleteTopic = () => {\n    showModal(ModalType.KafkaDeleteTopic, {\n      topicName,\n      onDeleteTopic,\n    });\n  };\n\n  return (\n    <>\n      <TopicDetailHead\n        topicName={topicName}\n        kafkaName={kafkaName}\n        kafkaPageLink={kafkaPageLink}\n        kafkaInstanceLink={kafkaInstanceLink}\n      />\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: 'noPadding' }}\n        className='pf-c-page__main-tabs'\n      >\n        <Tabs\n          activeKey={activeTabKey}\n          onSelect={handleTabClick}\n          isBox={false}\n          className='pf-m-page-insets'\n        >\n          <Tab\n            eventKey={1}\n            data-testid='pageTopic-tabConsumers'\n            title={\n              <TabTitleText>{t('consumerGroup.consumer_groups')}</TabTitleText>\n            }\n            tabContentId='kafka-ui-TabcontentConsumerGroupList'\n            tabContentRef={contentRefConsumerGroup}\n          ></Tab>\n          <Tab\n            eventKey={2}\n            title={<TabTitleText>{t('common.properties')}</TabTitleText>}\n            data-testid='pageTopic-tabProperties'\n            tabContentId='kafka-ui-TabcontentProperties'\n            tabContentRef={contentRefProperties}\n          />\n          <Tab\n            eventKey={3}\n            title={<TabTitleText>{t('common.schemas')}</TabTitleText>}\n            data-testid='pageTopic-tabSchemas'\n            tabContentId='kafka-ui-TabSchemas'\n            tabContentRef={contentRefSchemas}\n          />\n        </Tabs>\n      </PageSection>\n      <PageSection\n        variant={\n          activeTabKey === 2\n            ? PageSectionVariants.light\n            : PageSectionVariants.default\n        }\n      >\n        <TabContent\n          eventKey={1}\n          id='kafka-ui-TabcontentConsumerGroupList'\n          ref={contentRefConsumerGroup}\n          className='kafka-ui-m-full-height'\n          aria-label='Consumer groups.'\n          hidden={activeTabKey != 1}\n        >\n          <ConsumerGroups\n            consumerGroupByTopic={true}\n            topic={topicName}\n            rowDataTestId='tableTopicConsumers-row'\n          />\n        </TabContent>\n        <TabContent\n          eventKey={2}\n          id='kafka-ui-TabcontentProperties'\n          ref={contentRefProperties}\n          className='kafka-ui-m-full-height'\n          aria-label='Topic properties.'\n          hidden={activeTabKey != 2}\n        >\n          <TopicDetailView topic={topicDetail} deleteTopic={deleteTopic} />\n        </TabContent>\n        <TabContent\n          eventKey={3}\n          id='kafka-ui-TabSchemas'\n          ref={contentRefSchemas}\n          className='kafka-ui-m-full-height'\n          aria-label='Schemas mapping'\n          hidden={activeTabKey != 3}\n        >\n          {showSchemas}\n        </TabContent>\n      </PageSection>\n    </>\n  );\n};\n","export interface FederatedProps {\n  onError: (errorCode: number, message: string) => void;\n}\n\nexport const convertRetentionTime = (milliseconds: number): string => {\n  let convertedValue;\n  if (milliseconds === -1) {\n    return 'Unlimited';\n  } else if (milliseconds < 60000) {\n    if (milliseconds === 1) return milliseconds + ' ' + 'millisecond';\n    else return milliseconds + ' ' + 'milliseconds';\n  } else if (milliseconds >= 60000 && milliseconds < 3.6e6) {\n    convertedValue = milliseconds / 60000;\n    convertedValue = Math.round(convertedValue * 100) / 100;\n    if (convertedValue === 1) return convertedValue + ' ' + 'minute';\n    else return convertedValue + ' ' + 'minutes';\n  } else if (milliseconds >= 3.6e6 && milliseconds < 1.728e8) {\n    convertedValue = milliseconds / 3.6e6;\n    convertedValue = Math.round(convertedValue * 100) / 100;\n    if (convertedValue === 1) return convertedValue + ' ' + 'hour';\n    else return convertedValue + ' ' + 'hours';\n  } else if (milliseconds >= 1.728e8) {\n    convertedValue = milliseconds / 8.64e7;\n    convertedValue = Math.round(convertedValue * 100) / 100;\n    return convertedValue + ' ' + 'days';\n  }\n  return milliseconds.toString();\n};\n\nexport const convertRetentionSize = (byte: number): string => {\n  let convertedByteValue;\n  if (byte === -1) {\n    return 'Unlimited';\n  } else if (Math.abs(byte) < 1024) {\n    if (byte === 1) return byte + ' ' + 'byte';\n    else return byte + ' ' + 'bytes';\n  } else if (Math.abs(byte) >= 1024 && Math.abs(byte) < 1048576) {\n    convertedByteValue = byte / 1024;\n    if (convertedByteValue === 1) return convertedByteValue + ' ' + 'kibibyte';\n    else return convertedByteValue + ' ' + 'kibibytes';\n  } else if (Math.abs(byte) >= 1048576 && Math.abs(byte) < 1073741824) {\n    convertedByteValue = byte / 1048576;\n    if (convertedByteValue === 1) return convertedByteValue + ' ' + 'mebibyte';\n    else return convertedByteValue + ' ' + 'mebibytes';\n  } else if (Math.abs(byte) >= 1073741824 && Math.abs(byte) < 1.0995116e12) {\n    convertedByteValue = byte / 1073741824;\n    if (convertedByteValue === 1) return convertedByteValue + ' ' + 'gibibyte';\n    else return convertedByteValue + ' ' + 'gibibytes';\n  } else if (Math.abs(byte) >= 1.0995116e12) {\n    convertedByteValue = byte / 1.0995116e12;\n    if (convertedByteValue === 1) return convertedByteValue + ' ' + 'tebibyte';\n    else return convertedByteValue + ' ' + 'tebibytes';\n  }\n  return byte.toString();\n};\n"],"names":["KafkaModalLoader","t","registerModals","useModal","useTranslation","ModalType","lazyComponent","variant","title","MASLoading","bullseyeProps","spinnerProps","Bullseye","Spinner","PaginationContext","createContext","undefined","usePaginationParams","useContext","PaginationProvider","children","useState","page","setPage","perPage","setPerPage","Provider","value","MASPagination","itemCount","PaginationVariant","isCompact","titles","restProps","onSetPage","useCallback","_","newPage","onPerPageSelect","newPerPage","TopicDetailHead","topicName","kafkaName","kafkaInstanceLink","kafkaPageLink","className","Breadcrumb","BreadcrumbItem","to","PageSection","PageSectionVariants","TextContent","Text","component","TextVariants","topic","deleteTopic","history","useHistory","useParams","basename","getBasename","useBasename","padding","default","Sidebar","hasGutter","SidebarPanel","JumpLinks","isVertical","label","scrollableSelector","offset","style","position","JumpLinksItem","key","href","SidebarContent","PageGroup","hasOverflowScroll","id","Split","SplitItem","isFilled","Form","FormSection","titleElement","TextWithLabelPopover","fieldId","btnAriaLabel","fieldLabel","fieldValue","name","popoverBody","popoverHeader","numPartitions","replicationFactor","Number","showUnlimited","Divider","Button","onClick","push","TopicDetailPage","activeTab","onError","showSchemas","topicDetail","setTopicDetail","activeTabKey","setActiveTabKey","config","addAlert","useAlert","contentRefConsumerGroup","contentRefProperties","contentRefSchemas","showModal","onDeleteTopic","useEffect","then","response","data","code","error_message","status","AlertVariant","fetchTopicDetail","Tabs","activeKey","onSelect","event","tabIndex","isBox","Tab","eventKey","TabTitleText","tabContentId","tabContentRef","TabContent","ref","hidden","ConsumerGroups","consumerGroupByTopic","rowDataTestId","convertRetentionTime","milliseconds","convertedValue","Math","round","toString","convertRetentionSize","byte","convertedByteValue","abs"],"sourceRoot":""}