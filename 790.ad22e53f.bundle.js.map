{"version":3,"sources":["webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/check-circle-icon.js","webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-circle-icon.js","webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/search-icon.js","webpack://kafka-ui/./src/Modules/Topics/TopicDetails/Components/ConsumerGroupsByTopic/ConsumerDataByTopics.ts","webpack://kafka-ui/./src/Modules/Topics/TopicDetails/Components/ConsumerGroupsByTopic/ConsumerGroupDetailByTopics.ts","webpack://kafka-ui/./src/Modules/Topics/TopicDetails/Components/ConsumerGroupsByTopic/ConsumerGroupsByTopicsDrawer.patternfly.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicDetails/Components/ConsumerGroupsByTopic/SearchConsumerGroupsByTopics.patternfly.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicDetails/Components/ConsumerGroupsByTopic/ConsumerGroupsListByTopic.patternfly.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicDetails/Components/TopicDetailHead.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/DeleteTopicsModal.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/EmptySearch.tsx","webpack://kafka-ui/./src/Services/TopicServices.tsx"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","ConsumerGroupDataByTopics","id","members","partitions","state","mockConsumerGroupDetailByTopics","partition","currentOffset","logendOffset","offsetLag","ConsumerGroupsByTopicDrawer","isExpanded","consumerGroupDetail","rows","map","consumergroup","title","href","DrawerPanelContent","widths","default","DrawerHead","TextContent","Text","component","TextVariants","DrawerActions","DrawerCloseButton","onClick","DrawerPanelBody","Flex","FlexItem","size","Table","variant","TableVariant","cells","dataLabel","TableHeader","TableBody","SearchConsumerGroupsByTopics","setTableData","useState","searchText","setSearchText","InputGroup","SearchInput","type","placeholder","value","onChange","onClear","Button","ButtonVariant","filter","row","toLowerCase","indexOf","ConsumerGroupByTopicList","page","setPage","perPage","setPerPage","offset","setOffset","setIsExpanded","setConsumerGroupDetail","tableData","onSetPage","_event","pageNumber","onPerPageSelect","panelContent","rowData","ConsumerGroupByTopic","Label","color","icon","Card","Title","headingLevel","Drawer","DrawerContent","Toolbar","ToolbarContent","ToolbarItem","Pagination","itemCount","length","widgetId","Divider","slice","EmptySearch","TopicDetailHead","topicName","getTopicListPath","onClickTopicList","className","Breadcrumb","BreadcrumbItem","e","preventDefault","to","PageSection","PageSectionVariants","DeleteTopics","setDeleteModal","deleteModal","onDeleteTopic","verificationText","setVerificationText","addAlert","useContext","onClose","config","Modal","ModalVariant","isOpen","titleIconVariant","showClose","actions","AlertVariant","response","data","err","key","isDisabled","toUpperCase","htmlFor","TextInput","autoFocus","EmptyState","EmptyStateIcon","EmptyStateBody","getTopics","getToken","accessToken","basePath","getTopicsList","getTopicDetail","getTopic","convertTopicResponse","topic","topicObj","forEach","numPartitions","replicationFactor","p","replicas","reduce","previousValue","currentValue","updateTopicModel","topicSettings","updateTopic","status","answer","push","toString","deleteTopic"],"mappings":"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","file":"790.ad22e53f.bundle.js","sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.CheckCircleIconConfig = {\n  name: 'CheckCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.CheckCircleIcon = require('../createIcon').createIcon(exports.CheckCircleIconConfig);\nexports[\"default\"] = exports.CheckCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.ExclamationCircleIconConfig = {\n  name: 'ExclamationCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExclamationCircleIcon = require('../createIcon').createIcon(exports.ExclamationCircleIconConfig);\nexports[\"default\"] = exports.ExclamationCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.SearchIconConfig = {\n  name: 'SearchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.SearchIcon = require('../createIcon').createIcon(exports.SearchIconConfig);\nexports[\"default\"] = exports.SearchIcon;","export const ConsumerGroupDataByTopics = [\n  {\n    id: 'Custom_0',\n    members: 2,\n    partitions: 2,\n    state: 'Stable',\n  },\n  {\n    id: 'Custom_1',\n    members: 1,\n    partitions: 1,\n    state: 'Empty',\n  },\n  {\n    id: 'Custom_2',\n    members: 0,\n    partitions: 0,\n    state: 'Stable',\n  },\n  {\n    id: 'Custom_3',\n    members: 2,\n    partitions: 2,\n    state: 'Stable',\n  },\n  {\n    id: 'Custom_4',\n    members: 1,\n    partitions: 0,\n    state: 'Stable',\n  },\n];\n","export const mockConsumerGroupDetailByTopics = [\n  {\n    partition: 0,\n    id: 'consumer-1 consumer-1-02207915-3ab4-43cb547-4567c6fe87e1',\n    currentOffset: 2,\n    logendOffset: 0,\n    offsetLag: 1,\n  },\n  {\n    partition: 1,\n    id: 'consumer-1 consumer-1-02207915-3ab4-43cb547-4567c6fe87e1',\n    currentOffset: 0,\n    logendOffset: 0,\n    offsetLag: 0,\n  },\n  {\n    partition: 2,\n    id: 'consumer-1 consumer-1-02207915-3ab4-43cb547-4567c6fe87e1',\n    currentOffset: 0,\n    logendOffset: 0,\n    offsetLag: 0,\n  },\n];\n","import React from 'react';\nimport {\n  DrawerPanelContent,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerActions,\n  DrawerCloseButton,\n  Flex,\n  FlexItem,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableVariant,\n} from '@patternfly/react-table';\nimport { mockConsumerGroupDetailByTopics } from './ConsumerGroupDetailByTopics';\nimport { IConsumerGroupByTopic } from './SearchConsumerGroupsByTopics.patternfly';\n\nexport interface ISearchTopicsConsumerListProps {\n  isExpanded: (value: boolean) => void;\n  consumerGroupDetail: IConsumerGroupByTopic | undefined;\n}\n\nexport const ConsumerGroupsByTopicDrawer: React.FunctionComponent<ISearchTopicsConsumerListProps> = ({\n  isExpanded,\n  consumerGroupDetail,\n}) => {\n  const columns = [\n    'Partition',\n    'Client ID + Customer ID',\n    'Current offset',\n    'Log end offset',\n    'Offset lag',\n    {\n      title: '',\n      dataLabel: 'Action',\n    },\n  ];\n\n  const rows = mockConsumerGroupDetailByTopics.map((consumergroup) => [\n    consumergroup.partition,\n    consumergroup.id,\n    consumergroup.currentOffset,\n    consumergroup.logendOffset,\n    consumergroup.offsetLag,\n    { title: <a href='#'>Reset offset</a> },\n  ]);\n\n  const onCloseClick = () => {\n    isExpanded(false);\n  };\n\n  return (\n    <DrawerPanelContent widths={{ default: 'width_50' }}>\n      <DrawerHead>\n        <span>\n          <TextContent>\n            <Text>Consumer group ID</Text>\n            <Text component={TextVariants.h1}>\n              {consumerGroupDetail && consumerGroupDetail.id}\n            </Text>\n          </TextContent>\n        </span>\n        <DrawerActions>\n          <DrawerCloseButton onClick={onCloseClick} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerPanelBody>\n        <TextContent>\n          <Flex>\n            <FlexItem>\n              <Text component={TextVariants.h4} size={50}>\n                Active members\n              </Text>\n              <Text component={TextVariants.h2}>\n                {consumerGroupDetail && consumerGroupDetail.members}\n              </Text>\n            </FlexItem>\n            <FlexItem>\n              <Text component={TextVariants.h4}>Unconsumed partitions</Text>\n              <Text component={TextVariants.h2}>\n                {consumerGroupDetail && consumerGroupDetail.partitions}\n              </Text>\n            </FlexItem>\n            <FlexItem>\n              <Text component={TextVariants.h4}>State</Text>\n              <Text component={TextVariants.h2}>\n                {consumerGroupDetail && consumerGroupDetail.state}\n              </Text>\n            </FlexItem>\n          </Flex>\n        </TextContent>\n      </DrawerPanelBody>\n\n      <Table\n        aria-label='Compact Table'\n        variant={TableVariant.compact}\n        cells={columns}\n        rows={rows}\n      >\n        <TableHeader />\n        <TableBody />\n      </Table>\n    </DrawerPanelContent>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  InputGroup,\n  SearchInput,\n  Button,\n  ButtonVariant,\n} from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport { ConsumerGroupDataByTopics } from './ConsumerDataByTopics';\n\nexport interface IConsumerGroupByTopic {\n  id: string;\n  members: number;\n  partitions: number;\n  state: string;\n}\nexport interface ISearchConsumerGroupsByTopicsProps {\n  setTableData: (value: IConsumerGroupByTopic[]) => void;\n}\nexport const SearchConsumerGroupsByTopics: React.FunctionComponent<ISearchConsumerGroupsByTopicsProps> = ({\n  setTableData,\n}) => {\n  const [searchText, setSearchText] = useState('');\n\n  const onChangeInput = (value: string) => {\n    setSearchText(value);\n  };\n\n  const onConfirm = () => {\n    setTableData(\n      ConsumerGroupDataByTopics.filter(\n        (row) => row.id.toLowerCase().indexOf(searchText.toLowerCase()) > -1\n      )\n    );\n  };\n  const onClear = () => {\n    setSearchText('');\n    setTableData(ConsumerGroupDataByTopics);\n  };\n  return (\n    <InputGroup>\n      <SearchInput\n        name='searchName'\n        id='searchText-consumer-groups-by-topic-input'\n        type='searchText'\n        aria-label='searchText input'\n        placeholder='Search'\n        value={searchText}\n        onChange={onChangeInput}\n        onClear={onClear}\n      />\n      <Button\n        variant={ButtonVariant.control}\n        aria-label='searchText button for searchText input'\n        onClick={onConfirm}\n        id='searchText-consumer-groups-by-topic-button'\n      >\n        <SearchIcon />\n      </Button>\n    </InputGroup>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  Label,\n  Card,\n  Divider,\n  Pagination,\n  Toolbar,\n  Button,\n  ToolbarContent,\n  Drawer,\n  DrawerContent,\n  ToolbarItem,\n  Title,\n} from '@patternfly/react-core';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n} from '@patternfly/react-table';\nimport { ConsumerGroupDataByTopics } from './ConsumerDataByTopics';\nimport { ConsumerGroupsByTopicDrawer } from './ConsumerGroupsByTopicsDrawer.patternfly';\nimport {\n  SearchConsumerGroupsByTopics,\n  IConsumerGroupByTopic,\n} from './SearchConsumerGroupsByTopics.patternfly';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-circle-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport { EmptySearch } from '../../../TopicList/Components/EmptySearch';\n\nexport const ConsumerGroupByTopicList: React.FunctionComponent = () => {\n  const [page, setPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(10);\n  const [offset, setOffset] = useState(0);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [\n    consumerGroupDetail,\n    setConsumerGroupDetail,\n  ] = useState<IConsumerGroupByTopic>();\n  const [tableData, setTableData] = useState(ConsumerGroupDataByTopics);\n\n  const onSetPage = (_event, pageNumber: number) => {\n    setPage(pageNumber);\n    setOffset(page * perPage);\n  };\n\n  const onPerPageSelect = (_event, perPage: number) => {\n    setPerPage(perPage);\n  };\n\n  const onClickConsumerGroup = (\n    id: string,\n    members: number,\n    partitions: number,\n    state: string\n  ) => {\n    const consumerDetail = { id, members, partitions, state };\n    setConsumerGroupDetail(consumerDetail);\n    setIsExpanded(true);\n  };\n  const panelContent = (\n    <ConsumerGroupsByTopicDrawer\n      consumerGroupDetail={consumerGroupDetail}\n      isExpanded={setIsExpanded}\n    />\n  );\n\n  const tableColumns = [\n    { title: 'Consumer group ID' },\n    { title: 'Active members for this topic' },\n    { title: 'Unconsumed partitions for this topic' },\n    { title: 'State' },\n  ];\n  const rowData = tableData.map((ConsumerGroupByTopic) => [\n    {\n      title: (\n        <Button\n          variant='link'\n          onClick={() =>\n            onClickConsumerGroup(\n              ConsumerGroupByTopic.id,\n              ConsumerGroupByTopic.members,\n              ConsumerGroupByTopic.partitions,\n              ConsumerGroupByTopic.state\n            )\n          }\n        >\n          {ConsumerGroupByTopic.id}\n        </Button>\n      ),\n    },\n    ConsumerGroupByTopic?.members,\n    ConsumerGroupByTopic?.partitions,\n    {\n      title: (\n        <Label\n          color={ConsumerGroupByTopic.state === 'Stable' ? 'green' : 'red'}\n          icon={\n            ConsumerGroupByTopic.state === 'Stable' ? (\n              <CheckCircleIcon />\n            ) : (\n              <ExclamationCircleIcon />\n            )\n          }\n        >\n          {ConsumerGroupByTopic.state}\n        </Label>\n      ),\n    },\n  ]);\n\n  return (\n    <>\n      <Card>\n        <Title headingLevel='h4'> </Title>\n        <Drawer isExpanded={isExpanded}>\n          <DrawerContent panelContent={panelContent}>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>\n                  <SearchConsumerGroupsByTopics setTableData={setTableData} />\n                </ToolbarItem>\n\n                <ToolbarItem variant='pagination'>\n                  <Pagination\n                    itemCount={rowData.length}\n                    perPage={perPage}\n                    page={page}\n                    onSetPage={onSetPage}\n                    widgetId='pagination-options-menu-top'\n                    onPerPageSelect={onPerPageSelect}\n                  />\n                </ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n            <Divider />\n\n            <Table\n              aria-label='Compact Table'\n              variant={TableVariant.compact}\n              cells={tableColumns}\n              rows={\n                page != 1\n                  ? rowData.slice(offset, offset + perPage)\n                  : rowData.slice(0, perPage)\n              }\n            >\n              <TableHeader />\n              <TableBody />\n            </Table>\n\n            {rowData.length > 0 ? (\n              <Pagination\n                itemCount={rowData.length}\n                perPage={perPage}\n                page={page}\n                onSetPage={onSetPage}\n                widgetId='pagination-options-menu-top'\n                onPerPageSelect={onPerPageSelect}\n                offset={0}\n              />\n            ) : (\n              <EmptySearch />\n            )}\n          </DrawerContent>\n        </Drawer>\n      </Card>\n    </>\n  );\n};\n","import {\n  Breadcrumb,\n  BreadcrumbItem,\n  TextContent,\n  Text,\n  TextVariants,\n  PageSection,\n  PageSectionVariants,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport './TopicDetailView.css';\n\nexport type TopicDetailHeadProps = {\n  topicName: string;\n  getTopicListPath: () => string;\n  onClickTopicList: () => void;\n};\n\nexport const TopicDetailHead: React.FC<TopicDetailHeadProps> = ({\n  topicName,\n  getTopicListPath,\n  onClickTopicList,\n}) => {\n  return (\n    <section className='pf-c-page__main-breadcrumb'>\n      <Breadcrumb>\n        <BreadcrumbItem\n          onClick={(e) => {\n            e.preventDefault();\n            onClickTopicList();\n          }}\n          to={getTopicListPath()}\n        >\n          Topics\n        </BreadcrumbItem>\n        <BreadcrumbItem>{topicName}</BreadcrumbItem>\n      </Breadcrumb>\n      <PageSection variant={PageSectionVariants.light}>\n        <TextContent className='header-padding'>\n          <Text component={TextVariants.h1}>{topicName}</Text>\n        </TextContent>\n      </PageSection>\n    </section>\n  );\n};\n","import React, { useContext, useState } from 'react';\nimport {\n  Modal,\n  ModalVariant,\n  Button,\n  Text,\n  AlertVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport { deleteTopic } from '../../../../Services/TopicServices';\nimport { ConfigContext } from '../../../../Contexts';\nimport { AlertContext } from '../../../../Contexts/Alert/Context';\nexport interface IDeleteTopics {\n  setDeleteModal: (value: boolean) => void;\n  deleteModal: boolean;\n  topicName?: string;\n  onDeleteTopic: () => void;\n}\nexport const DeleteTopics: React.FunctionComponent<IDeleteTopics> = ({\n  setDeleteModal,\n  deleteModal,\n  topicName,\n  onDeleteTopic,\n}) => {\n  const [verificationText, setVerificationText] = useState<string>('');\n  const { addAlert } = useContext(AlertContext);\n  const onClose = () => {\n    setDeleteModal(false);\n  };\n\n  const onDelete = async () => {\n    try {\n      topicName && (await deleteTopic(topicName, config));\n      addAlert(`Successfully deleted topic ${topicName}`, AlertVariant.success);\n    } catch (err) {\n      addAlert(err.response.data.err, AlertVariant.danger);\n    }\n    onDeleteTopic();\n    setDeleteModal(false);\n  };\n\n  const config = useContext(ConfigContext);\n\n  const handleVerificationTextChange = (value) => {\n    setVerificationText(value);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.small}\n      isOpen={deleteModal}\n      aria-label='Delete topic?'\n      title='Delete topic?'\n      titleIconVariant='warning'\n      showClose={true}\n      aria-describedby='modal-message'\n      onClose={onClose}\n      actions={[\n        <Button\n          variant='danger'\n          onClick={onDelete}\n          key={1}\n          isDisabled={verificationText.toUpperCase() != 'DELETE'}\n        >\n          Delete\n        </Button>,\n        <Button variant='link' onClick={onClose} key={2}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <Text id='modal-message'>\n        {' '}\n        <b>{topicName}</b> will be deleted.{' '}\n      </Text>\n\n      <br />\n      <label htmlFor='delete-text-input'>Type DELETE to confirm:</label>\n      <TextInput\n        value={verificationText}\n        id='delete-text-input'\n        name='delete-text-input'\n        type='text'\n        onChange={handleVerificationTextChange}\n        autoFocus={true}\n      />\n    </Modal>\n  );\n};\n","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Title,\n} from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\n\nexport const EmptySearch: React.FunctionComponent = () => {\n  return (\n    <EmptyState>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel='h5' size='lg'>\n        No results found\n      </Title>\n      <EmptyStateBody>\n        No result match the filter criteria. Remove filter or clear all filters\n        to show results\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import { AxiosResponse } from 'axios';\nimport { AdvancedTopic } from '../Contexts/Topic';\nimport {\n  ConfigEntry,\n  DefaultApi,\n  Topic,\n  TopicSettings,\n  TopicsList,\n} from '../OpenApi/api';\nimport { Configuration } from '../OpenApi';\nimport { IConfiguration } from '../Contexts';\n\nexport const getTopics = async (\n  config: IConfiguration | undefined\n): Promise<TopicsList> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<TopicsList> = await api.getTopicsList();\n  return response.data;\n};\n\nexport const getTopicDetail = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<AdvancedTopic> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const { data } = await api.getTopic(topicName);\n\n  return convertTopicResponse(data);\n};\n\nconst convertTopicResponse = (topic: Topic): AdvancedTopic => {\n  const topicObj: any = {};\n\n  topicObj.name = topic.name;\n\n  topic.config?.forEach((config) => {\n    if (config.key) {\n      topicObj[config.key] = config.value;\n    }\n  });\n\n  topicObj.numPartitions = topic?.partitions?.length;\n\n  topicObj.replicationFactor = topic?.partitions\n    ?.map((p) => p.replicas?.length)\n    .reduce(\n      (previousValue = 0, currentValue = 0) => previousValue + currentValue\n    );\n\n  return topicObj;\n};\n\nexport const updateTopicModel = async (\n  topicName: string,\n  topicSettings: TopicSettings,\n  config: IConfiguration | undefined\n): Promise<number> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<Topic> = await api.updateTopic(\n    topicName,\n    topicSettings\n  );\n  return response.status;\n};\n\nexport const getTopic = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<Topic> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response = await api.getTopic(topicName);\n\n  const answer = response.data;\n  answer.config = answer.config || ([] as ConfigEntry[]);\n  answer.config.push({\n    key: 'replicationFactor',\n    value: response.data?.partitions\n      ?.map((p) => p.replicas?.length)\n      .reduce(\n        (previousValue = 0, currentValue = 0) => previousValue + currentValue\n      )\n      ?.toString(),\n  });\n  return response.data;\n};\n\nexport const deleteTopic = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<void> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  await api.deleteTopic(topicName);\n  return;\n};\n"],"sourceRoot":""}