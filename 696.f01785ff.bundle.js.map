{"version":3,"sources":["webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/cubes-icon.js","webpack://kafka-ui/./src/Components/Loading/Loading.tsx","webpack://kafka-ui/./src/Hooks/useTimeOut.ts","webpack://kafka-ui/./src/Modules/ConsumerGroups/ConsumerGroupList/Components/EmptyConsumers.tsx","webpack://kafka-ui/./src/Services/ConsumerGroupsServices.tsx","webpack://kafka-ui/./src/Modules/ConsumerGroups/ConsumerGroupList/Components/SearchConsumers.tsx","webpack://kafka-ui/./src/Modules/ConsumerGroups/ConsumerGroupList/Components/DeleteConsumerGroup.tsx","webpack://kafka-ui/./src/Modules/ConsumerGroups/ConsumerGroupList/Components/ConsumerGroupDetail.tsx","webpack://kafka-ui/./src/Modules/ConsumerGroups/ConsumerGroupList/Components/ConsumerGroupList.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/DeleteTopicsModal.tsx"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","Loading","Bullseye","Spinner","useTimeout","callback","delay","savedCallback","useRef","useEffect","current","setTimeout","clearInterval","EmptyConsumers","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","getConsumerGroups","config","limit","offset","topic","getToken","accessToken","basePath","getConsumerGroupList","data","deleteConsumerGroup","consumerGroupId","deleteConsumerGroupById","getConsumerGroupDetail","getConsumerGroupById","getConsumerGroupsByTopic","SearchConsumers","search","setSearch","InputGroup","SearchInput","id","type","placeholder","value","onChange","onClear","DeleteConsumerGroup","setDeleteModal","deleteModal","consumerName","onDeleteConsumer","useState","verificationText","setVerificationText","addAlert","useContext","onClose","Modal","ModalVariant","isOpen","title","titleIconVariant","showClose","actions","Button","onClick","AlertVariant","response","error_message","key","isDisabled","toUpperCase","Text","htmlFor","TextInput","autoFocus","ConsumerGroupDetail","setIsExpanded","consumerDetail","rows","consumers","map","consumergroup","partition","groupId","memberId","logEndOffset","lag","DrawerPanelContent","widths","default","DrawerHead","TextContent","component","TextVariants","DrawerActions","DrawerCloseButton","DrawerPanelBody","Flex","FlexItem","reduce","prev","cur","Table","TableVariant","cells","dataLabel","TableHeader","TableBody","ConsumerGroupsList","onDeleteConsumerGroup","consumerGroupByTopic","rowDataId","detailsDataId","page","setPage","perPage","setPerPage","setOffset","consumerGroups","setConsumerGroups","loading","setLoading","isExpanded","consumerGroupDetail","setConsumerGroupDetail","setConsumerGroupId","filteredConsumerGroups","setFilteredConsumerGroups","fetchConsumerGroups","consumerGroupsData","trim","items","length","filter","consumerGroupsFiltered","includes","prevState","undefined","onSetPage","_event","pageNumber","onPerPageSelect","tableColumns","_","rowId","onDelete","panelContent","rowData","consumer","isInline","consumerData","fetchConsumerGroupDetail","props","Drawer","DrawerContent","Toolbar","ToolbarContent","ToolbarItem","Pagination","itemCount","widgetId","slice","Divider","PaginationVariant","DeleteTopics","topicName","onDeleteTopic"],"mappings":"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","file":"696.f01785ff.bundle.js","sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.CubesIconConfig = {\n  name: 'CubesIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.CubesIcon = require('../createIcon').createIcon(exports.CubesIconConfig);\nexports[\"default\"] = exports.CubesIcon;","import React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nexport const Loading: React.FunctionComponent = () => (\n  <Bullseye>\n    <Spinner />\n  </Bullseye>\n);\n","import { useEffect, useRef } from 'react';\n\nexport const useTimeout: any = (callback: any, delay: number) => {\n  const savedCallback = useRef<any>();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setTimeout(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n    return;\n  }, [callback, delay]);\n};\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport CubesIcon from '@patternfly/react-icons/dist/js/icons/cubes-icon';\n\nexport const EmptyConsumers: React.FunctionComponent = () => {\n  return (\n    <EmptyState variant={EmptyStateVariant.xl}>\n      <EmptyStateIcon icon={CubesIcon} />\n      <Title headingLevel='h5' size='4xl'>\n        No Consumer Groups Found\n      </Title>\n      <EmptyStateBody>You have No Consumer Groups</EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import { AxiosResponse } from 'axios';\n\nimport { DefaultApi, ConsumerGroupList, ConsumerGroup } from '../OpenApi/api';\nimport { Configuration } from '../OpenApi';\nimport { IConfiguration } from '../Contexts';\n\nexport const getConsumerGroups = async (\n  config: IConfiguration | undefined,\n  limit?: number,\n  offset?: number,\n  topic?: string\n): Promise<ConsumerGroupList> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<ConsumerGroupList> = await api.getConsumerGroupList(\n    limit,\n    offset,\n    topic\n  );\n  return response.data;\n};\n\nexport const deleteConsumerGroup = async (\n  consumerGroupId: string,\n  config: IConfiguration | undefined\n): Promise<void> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  await api.deleteConsumerGroupById(consumerGroupId);\n  return;\n};\nexport const getConsumerGroupDetail = async (\n  consumerGroupId: string,\n  config: IConfiguration | undefined\n): Promise<ConsumerGroup> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<ConsumerGroup> = await api.getConsumerGroupById(\n    consumerGroupId\n  );\n  return response.data;\n};\nexport const getConsumerGroupsByTopic = async (\n  config: IConfiguration | undefined,\n  limit: number,\n  offset: number,\n  topic: string\n): Promise<ConsumerGroupList> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<ConsumerGroupList> = await api.getConsumerGroupList(\n    limit,\n    offset,\n    topic\n  );\n  return response.data;\n};\n","import React from 'react';\nimport { InputGroup, SearchInput } from '@patternfly/react-core';\n\nexport interface ISearchConsumerGroupProps {\n  setSearch: (value: string) => void;\n  search: string;\n}\n\nconst SearchConsumers: React.FunctionComponent<ISearchConsumerGroupProps> = ({\n  search,\n  setSearch,\n}) => {\n  const onChangeInput = (value: string) => {\n    setSearch(value);\n  };\n  const onClear = () => {\n    setSearch('');\n  };\n  return (\n    <InputGroup>\n      <SearchInput\n        name='searchName'\n        id='search-consumers-input'\n        type='search'\n        aria-label='search input '\n        placeholder='Search'\n        value={search}\n        onChange={onChangeInput}\n        onClear={onClear}\n      />\n    </InputGroup>\n  );\n};\nexport { SearchConsumers };\n","import React, { useContext, useState } from 'react';\nimport {\n  Modal,\n  ModalVariant,\n  Button,\n  Text,\n  AlertVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport { deleteConsumerGroup } from '../../../../Services/ConsumerGroupsServices';\nimport { ConfigContext } from '../../../../Contexts';\nimport { AlertContext } from '../../../../Contexts/Alert/Context';\nexport interface IDeleteConsumer {\n  setDeleteModal: (value: boolean) => void;\n  deleteModal: boolean;\n  consumerName?: string;\n  onDeleteConsumer: () => void;\n}\nexport const DeleteConsumerGroup: React.FunctionComponent<IDeleteConsumer> = ({\n  setDeleteModal,\n  deleteModal,\n  consumerName,\n  onDeleteConsumer,\n}) => {\n  const [verificationText, setVerificationText] = useState<string>('');\n  const { addAlert } = useContext(AlertContext);\n  const onClose = () => {\n    setDeleteModal(false);\n  };\n\n  const onDelete = async () => {\n    try {\n      consumerName && (await deleteConsumerGroup(consumerName, config));\n      addAlert(\n        `Successfully deleted consumer group ${consumerName}`,\n        AlertVariant.success\n      );\n    } catch (err) {\n      addAlert(err.response.data.error_message, AlertVariant.danger);\n    }\n    onDeleteConsumer();\n    setDeleteModal(false);\n  };\n\n  const config = useContext(ConfigContext);\n\n  const handleVerificationTextChange = (value) => {\n    setVerificationText(value);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.small}\n      isOpen={deleteModal}\n      aria-label='Delete consumer group?'\n      title='Delete Consumer Group?'\n      titleIconVariant='warning'\n      showClose={true}\n      aria-describedby='modal-message'\n      onClose={onClose}\n      actions={[\n        <Button\n          variant='danger'\n          onClick={onDelete}\n          key={1}\n          isDisabled={verificationText.toUpperCase() != 'DELETE'}\n        >\n          Delete\n        </Button>,\n        <Button variant='link' onClick={onClose} key={2}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <Text id='modal-message'>\n        <b>{consumerName}</b> will be deleted.{' '}\n      </Text>\n\n      <br />\n      <label htmlFor='delete-text-input'>Type DELETE to confirm:</label>\n      <TextInput\n        value={verificationText}\n        id='delete-text-input'\n        name='delete-text-input'\n        type='text'\n        onChange={handleVerificationTextChange}\n        autoFocus={true}\n      />\n    </Modal>\n  );\n};\n","import React from 'react';\nimport {\n  DrawerPanelContent,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerActions,\n  DrawerCloseButton,\n  Flex,\n  FlexItem,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableVariant,\n} from '@patternfly/react-table';\nimport { ConsumerGroup } from '../../../../OpenApi';\n\nexport interface IConsumerGroupDetailProps {\n  setIsExpanded: (value: boolean) => void;\n  consumerDetail: ConsumerGroup | undefined;\n}\n\nexport const ConsumerGroupDetail: React.FunctionComponent<IConsumerGroupDetailProps> = ({\n  setIsExpanded,\n  consumerDetail,\n}) => {\n  const columns = [\n    'Partition',\n    'Client ID + Customer ID',\n    'Current offset',\n    'Log end offset',\n    'Offset lag',\n    {\n      title: '',\n      dataLabel: 'Action',\n    },\n  ];\n\n  const rows =\n    consumerDetail &&\n    consumerDetail.consumers.map((consumergroup) => [\n      consumergroup.partition,\n      consumergroup.groupId + consumergroup.memberId,\n      consumergroup.offset,\n      consumergroup.logEndOffset,\n      consumergroup.lag,\n    ]);\n\n  const onCloseClick = () => {\n    setIsExpanded(false);\n  };\n\n  return (\n    <DrawerPanelContent widths={{ default: 'width_66' }}>\n      <DrawerHead>\n        <span>\n          <TextContent>\n            <Text>Consumer group ID</Text>\n            <Text component={TextVariants.h1}>\n              {consumerDetail && consumerDetail.groupId}\n            </Text>\n          </TextContent>\n        </span>\n        <DrawerActions>\n          <DrawerCloseButton onClick={onCloseClick} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerPanelBody>\n        <TextContent>\n          <Flex>\n            <FlexItem>\n              <Text component={TextVariants.h4} size={50}>\n                Active members\n              </Text>\n              <Text component={TextVariants.h2}>\n                {consumerDetail &&\n                  consumerDetail.consumers.reduce(function (prev, cur) {\n                    return prev + cur.partition != -1 ? prev + 1 : 0;\n                  }, 0)}\n              </Text>\n            </FlexItem>\n            <FlexItem>\n              <Text component={TextVariants.h4}>Partitions with lag</Text>\n              <Text component={TextVariants.h2}>\n                {consumerDetail &&\n                  consumerDetail.consumers.reduce(function (prev, cur) {\n                    return prev + cur.lag > 0 ? prev + 1 : 0;\n                  }, 0)}\n              </Text>\n            </FlexItem>\n          </Flex>\n        </TextContent>\n      </DrawerPanelBody>\n\n      <Table\n        aria-label='Compact Table'\n        variant={TableVariant.compact}\n        cells={columns}\n        rows={rows}\n      >\n        <TableHeader />\n        <TableBody />\n      </Table>\n    </DrawerPanelContent>\n  );\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport {\n  Divider,\n  Pagination,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n  AlertVariant,\n  Button,\n  Drawer,\n  DrawerContent,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n} from '@patternfly/react-table';\n\nimport { EmptyConsumers } from './EmptyConsumers';\nimport {\n  getConsumerGroups,\n  getConsumerGroupDetail,\n  getConsumerGroupsByTopic,\n} from '../../../../Services/ConsumerGroupsServices';\nimport { ConfigContext } from '../../../../Contexts';\nimport { ConsumerGroupList, ConsumerGroup } from '../../../../OpenApi';\nimport { Loading } from '../../../../Components/Loading/Loading';\nimport { AlertContext } from '../../../../Contexts/Alert';\nimport { useTimeout } from '../../../../Hooks/useTimeOut';\nimport { SearchConsumers } from './SearchConsumers';\nimport { DeleteConsumerGroup } from './DeleteConsumerGroup';\nimport { ConsumerGroupDetail } from './ConsumerGroupDetail';\nexport interface IConsumerGroupsList {\n  onDeleteConsumerGroup: () => void;\n  consumerGroupByTopic: boolean;\n  topic?: string;\n  rowDataId?: string;\n  detailsDataId?: string;\n}\n\nexport const ConsumerGroupsList: React.FunctionComponent<IConsumerGroupsList> = ({\n  onDeleteConsumerGroup,\n  consumerGroupByTopic,\n  topic,\n  rowDataId,\n  detailsDataId,\n}) => {\n  const [page, setPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(10);\n  const [offset, setOffset] = useState<number>(0);\n  const [consumerGroups, setConsumerGroups] = useState<ConsumerGroupList>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n  const [search, setSearch] = useState<string>('');\n  const [\n    consumerGroupDetail,\n    setConsumerGroupDetail,\n  ] = useState<ConsumerGroup>();\n  const [consumerGroupId, setConsumerGroupId] = useState<string | undefined>();\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [\n    filteredConsumerGroups,\n    setFilteredConsumerGroups,\n  ] = useState<ConsumerGroupList>();\n\n  const config = useContext(ConfigContext);\n  const { addAlert } = useContext(AlertContext);\n\n  const fetchConsumerGroups = async () => {\n    if (consumerGroupByTopic && topic) {\n      try {\n        const consumerGroupsData = await getConsumerGroupsByTopic(\n          config,\n          100,\n          offset,\n          topic\n        );\n        if (consumerGroupsData) {\n          setConsumerGroups(consumerGroupsData);\n          setFilteredConsumerGroups(consumerGroupsData);\n        }\n      } catch (err) {\n        addAlert(err.response.data.error_message, AlertVariant.danger);\n      }\n      setLoading(false);\n    } else {\n      try {\n        const consumerGroupsData = await getConsumerGroups(config);\n        if (consumerGroupsData) {\n          setConsumerGroups(consumerGroupsData);\n          setFilteredConsumerGroups(consumerGroupsData);\n        }\n      } catch (err) {\n        addAlert(err.response.data.error_message, AlertVariant.danger);\n      }\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetchConsumerGroups();\n  }, [deleteModal]);\n\n  useEffect(() => {\n    if (\n      search &&\n      search.trim() != '' &&\n      consumerGroups?.items &&\n      consumerGroups.items.length > 0\n    ) {\n      const filterSearch = consumerGroups?.items.filter(\n        (consumerGroupsFiltered) =>\n          consumerGroupsFiltered?.groupId &&\n          consumerGroupsFiltered.groupId.includes(search)\n      );\n      setFilteredConsumerGroups((prevState) =>\n        prevState\n          ? {\n              ...prevState,\n              items: filterSearch,\n            }\n          : undefined\n      );\n    } else {\n      setFilteredConsumerGroups(consumerGroups);\n    }\n  }, [search]);\n\n  useTimeout(() => fetchConsumerGroups(), 5000);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const onSetPage = (_event, pageNumber: number) => {\n    setPage(pageNumber);\n    setOffset(page * perPage);\n  };\n\n  const onPerPageSelect = (_event, perPage: number) => {\n    setPerPage(perPage);\n  };\n\n  const tableColumns = [\n    { title: 'Consumer Group ID' },\n    { title: 'Active Members' },\n    { title: 'Partitions with lag' },\n  ];\n  const onDelete = (rowId: any) => {\n    if (filteredConsumerGroups?.items) {\n      setConsumerGroupId(filteredConsumerGroups.items[rowId].groupId);\n      setDeleteModal(true);\n    }\n  };\n\n  const actions = [\n    {\n      title: 'Delete',\n      ['data-testid']: 'tableConsumers-actionDelete',\n      onClick: (_, rowId) => onDelete(rowId),\n    },\n  ];\n\n  const fetchConsumerGroupDetail = async (consumerGroupId) => {\n    try {\n      const consumerData = await getConsumerGroupDetail(\n        consumerGroupId,\n        config\n      );\n      if (consumerData) {\n        setConsumerGroupDetail(consumerData);\n      }\n    } catch (err) {\n      addAlert(err.response.data.error_message, AlertVariant.danger);\n    }\n    setIsExpanded(true);\n  };\n\n  const panelContent = (\n    <ConsumerGroupDetail\n      setIsExpanded={setIsExpanded}\n      consumerDetail={consumerGroupDetail}\n    />\n  );\n  const rowData =\n    filteredConsumerGroups?.items.map((consumer) => [\n      {\n        title: (\n          <Button\n            variant='link'\n            isInline\n            onClick={() => fetchConsumerGroupDetail(consumer.groupId)}\n            data-testid={\n              detailsDataId ? detailsDataId : 'tableConsumers-actionDetails'\n            }\n          >\n            {consumer.groupId}\n          </Button>\n        ),\n        props: { 'data-testid': rowDataId ? rowDataId : 'tableConsumers-row' },\n      },\n\n      consumer.consumers.reduce(function (prev, cur) {\n        return prev + cur.partition != -1 ? prev + 1 : 0;\n      }, 0),\n      consumer.consumers.reduce(function (prev, cur) {\n        return prev + cur.lag > 0 ? prev + 1 : 0;\n      }, 0),\n    ]) || [];\n\n  return (\n    <>\n      {deleteModal && (\n        <DeleteConsumerGroup\n          consumerName={consumerGroupId}\n          setDeleteModal={setDeleteModal}\n          deleteModal={deleteModal}\n          onDeleteConsumer={onDeleteConsumerGroup}\n        />\n      )}\n      <Drawer isExpanded={isExpanded}>\n        <DrawerContent panelContent={panelContent}>\n          <Toolbar>\n            <ToolbarContent>\n              <ToolbarItem>\n                <SearchConsumers search={search} setSearch={setSearch} />\n              </ToolbarItem>\n              <ToolbarItem variant='pagination'>\n                <Pagination\n                  itemCount={rowData.length}\n                  perPage={perPage}\n                  page={page}\n                  onSetPage={onSetPage}\n                  widgetId='consumer-group-pagination-top'\n                  onPerPageSelect={onPerPageSelect}\n                />\n              </ToolbarItem>\n            </ToolbarContent>\n          </Toolbar>\n          {consumerGroupByTopic ? (\n            <Table\n              aria-label='Compact Table'\n              variant={TableVariant.compact}\n              cells={tableColumns}\n              rows={\n                page != 1\n                  ? rowData.slice(offset, offset + perPage)\n                  : rowData.slice(0, perPage)\n              }\n            >\n              <TableHeader />\n              <TableBody />\n            </Table>\n          ) : (\n            <Table\n              aria-label='Compact Table'\n              variant={TableVariant.compact}\n              cells={tableColumns}\n              rows={\n                page != 1\n                  ? rowData.slice(offset, offset + perPage)\n                  : rowData.slice(0, perPage)\n              }\n              actions={actions}\n            >\n              <TableHeader />\n              <TableBody />\n            </Table>\n          )}\n          <Divider />\n          {rowData.length < 1 ? (\n            <EmptyConsumers />\n          ) : (\n            <Pagination\n              itemCount={rowData.length}\n              perPage={perPage}\n              page={page}\n              onSetPage={onSetPage}\n              widgetId='consumer-group-pagination-bottom'\n              onPerPageSelect={onPerPageSelect}\n              offset={0}\n              variant={PaginationVariant.bottom}\n            />\n          )}\n        </DrawerContent>\n      </Drawer>\n      <Divider />\n    </>\n  );\n};\n","import React, { useContext, useState } from 'react';\nimport {\n  Modal,\n  ModalVariant,\n  Button,\n  Text,\n  AlertVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport { deleteTopic } from '../../../../Services/TopicServices';\nimport { ConfigContext } from '../../../../Contexts';\nimport { AlertContext } from '../../../../Contexts/Alert/Context';\nexport interface IDeleteTopics {\n  setDeleteModal: (value: boolean) => void;\n  deleteModal: boolean;\n  topicName?: string;\n  onDeleteTopic: () => void;\n}\nexport const DeleteTopics: React.FunctionComponent<IDeleteTopics> = ({\n  setDeleteModal,\n  deleteModal,\n  topicName,\n  onDeleteTopic,\n}) => {\n  const [verificationText, setVerificationText] = useState<string>('');\n  const { addAlert } = useContext(AlertContext);\n  const onClose = () => {\n    setDeleteModal(false);\n  };\n\n  const onDelete = async () => {\n    try {\n      topicName && (await deleteTopic(topicName, config));\n      addAlert(`Successfully deleted topic ${topicName}`, AlertVariant.success);\n    } catch (err) {\n      addAlert(err.response.data.error_message, AlertVariant.danger);\n    }\n    onDeleteTopic();\n    setDeleteModal(false);\n  };\n\n  const config = useContext(ConfigContext);\n\n  const handleVerificationTextChange = (value) => {\n    setVerificationText(value);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.small}\n      isOpen={deleteModal}\n      aria-label='Delete topic?'\n      title='Delete topic?'\n      titleIconVariant='warning'\n      showClose={true}\n      aria-describedby='modal-message'\n      onClose={onClose}\n      actions={[\n        <Button\n          variant='danger'\n          onClick={onDelete}\n          key={1}\n          data-testid='modalDeleteTopic-buttonDelete'\n          isDisabled={verificationText.toUpperCase() != 'DELETE'}\n        >\n          Delete\n        </Button>,\n        <Button variant='link' onClick={onClose} key={2}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <Text id='modal-message'>\n        {' '}\n        <b>{topicName}</b> will be deleted.{' '}\n      </Text>\n\n      <br />\n      <label htmlFor='delete-text-input'>Type DELETE to confirm:</label>\n      <TextInput\n        value={verificationText}\n        id='delete-text-input'\n        name='delete-text-input'\n        type='text'\n        onChange={handleVerificationTextChange}\n        autoFocus={true}\n      />\n    </Modal>\n  );\n};\n"],"sourceRoot":""}