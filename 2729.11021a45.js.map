{"version":3,"file":"2729.11021a45.js","mappings":"yJA4CO,SAASA,EAAUC,GACtB,OAAOA,EAAIC,aACf,CC5CA,IAAIC,EAAuB,CAAC,qBAAsB,wBAE9CC,EAAuB,eAqB3B,SAASC,EAAQC,EAAOC,EAAIC,GACxB,OAAID,aAAcE,OACPH,EAAMD,QAAQE,EAAIC,GACtBD,EAAGG,QAAO,SAAUJ,EAAOC,GAAM,OAAOD,EAAMD,QAAQE,EAAIC,EAAQ,GAAGF,EAChF,CC3BO,SAASK,EAAQL,EAAOM,GAE3B,YADgB,IAAZA,IAAsBA,EAAU,CAAC,GDKlC,SAAgBN,EAAOM,QACV,IAAZA,IAAsBA,EAAU,CAAC,GAMrC,IALA,IAAIC,EAAKD,EAAQE,YAAaA,OAAqB,IAAPD,EAAgBV,EAAuBU,EAAIE,EAAKH,EAAQI,YAAaA,OAAqB,IAAPD,EAAgBX,EAAuBW,EAAIE,EAAKL,EAAQM,UAAWA,OAAmB,IAAPD,EAAgBjB,EAAYiB,EAAIE,EAAKP,EAAQQ,UAAWA,OAAmB,IAAPD,EAAgB,IAAMA,EACpSE,EAAShB,EAAQA,EAAQC,EAAOQ,EAAa,UAAWE,EAAa,MACrEM,EAAQ,EACRC,EAAMF,EAAOG,OAEe,OAAzBH,EAAOI,OAAOH,IACjBA,IACJ,KAAkC,OAA3BD,EAAOI,OAAOF,EAAM,IACvBA,IAEJ,OAAOF,EAAOK,MAAMJ,EAAOC,GAAKI,MAAM,MAAMC,IAAIV,GAAWW,KAAKT,EACpE,CCjBWU,CAAOxB,GAAO,IAAAyB,UAAS,CAAEX,UAAW,KAAOR,GACtD,CCHO,SAASoB,EAAU1B,EAAOM,GAE7B,YADgB,IAAZA,IAAsBA,EAAU,CAAC,GAC9BD,EAAQL,GAAO,IAAAyB,UAAS,CAAEX,UAAW,KAAOR,GACvD,C","sources":["webpack://kafka-ui/./node_modules/dot-case/node_modules/lower-case/dist.es2015/index.js","webpack://kafka-ui/./node_modules/dot-case/node_modules/no-case/dist.es2015/index.js","webpack://kafka-ui/./node_modules/dot-case/dist.es2015/index.js","webpack://kafka-ui/./node_modules/snake-case/dist.es2015/index.js"],"sourcesContent":["/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nvar SUPPORTED_LOCALE = {\n    tr: {\n        regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\",\n        },\n    },\n    az: {\n        regexp: /\\u0130/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\",\n        },\n    },\n    lt: {\n        regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n        map: {\n            I: \"\\u0069\\u0307\",\n            J: \"\\u006A\\u0307\",\n            Į: \"\\u012F\\u0307\",\n            Ì: \"\\u0069\\u0307\\u0300\",\n            Í: \"\\u0069\\u0307\\u0301\",\n            Ĩ: \"\\u0069\\u0307\\u0303\",\n        },\n    },\n};\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str, locale) {\n    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n    if (lang)\n        return lowerCase(str.replace(lang.regexp, function (m) { return lang.map[m]; }));\n    return lowerCase(str);\n}\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str) {\n    return str.toLowerCase();\n}\n//# sourceMappingURL=index.js.map","import { lowerCase } from \"lower-case\";\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nvar DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n// Remove all non-word characters.\nvar DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nexport function noCase(input, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? \" \" : _d;\n    var result = replace(replace(input, splitRegexp, \"$1\\0$2\"), stripRegexp, \"\\0\");\n    var start = 0;\n    var end = result.length;\n    // Trim the delimiter from around the output string.\n    while (result.charAt(start) === \"\\0\")\n        start++;\n    while (result.charAt(end - 1) === \"\\0\")\n        end--;\n    // Transform each token independently.\n    return result.slice(start, end).split(\"\\0\").map(transform).join(delimiter);\n}\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input, re, value) {\n    if (re instanceof RegExp)\n        return input.replace(re, value);\n    return re.reduce(function (input, re) { return input.replace(re, value); }, input);\n}\n//# sourceMappingURL=index.js.map","import { __assign } from \"tslib\";\nimport { noCase } from \"no-case\";\nexport function dotCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return noCase(input, __assign({ delimiter: \".\" }, options));\n}\n//# sourceMappingURL=index.js.map","import { __assign } from \"tslib\";\nimport { dotCase } from \"dot-case\";\nexport function snakeCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return dotCase(input, __assign({ delimiter: \"_\" }, options));\n}\n//# sourceMappingURL=index.js.map"],"names":["lowerCase","str","toLowerCase","DEFAULT_SPLIT_REGEXP","DEFAULT_STRIP_REGEXP","replace","input","re","value","RegExp","reduce","dotCase","options","_a","splitRegexp","_b","stripRegexp","_c","transform","_d","delimiter","result","start","end","length","charAt","slice","split","map","join","noCase","__assign","snakeCase"],"sourceRoot":""}