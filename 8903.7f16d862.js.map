{"version":3,"file":"8903.7f16d862.js","mappings":"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","sources":["webpack://kafka-ui/./src/modules/Topics/components/TopicDetailHead/TopicDetailHead.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicDetailView/TopicDetailView.tsx","webpack://kafka-ui/./src/modules/Topics/pages/TopicDetail/TopicDetailPage.tsx"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  TextContent,\n  Text,\n  TextVariants,\n  PageSection,\n  PageSectionVariants,\n} from '@patternfly/react-core';\nimport '../TopicDetailView/TopicDetailView.css';\nimport { Link } from 'react-router-dom';\n\nexport type TopicDetailHeadProps = {\n  topicName: string;\n  kafkaName?: string;\n  kafkaInstanceLink?: string;\n  kafkaPageLink?: string;\n};\n\nexport const TopicDetailHead: React.FC<TopicDetailHeadProps> = ({\n  topicName,\n  kafkaName,\n  kafkaInstanceLink,\n  kafkaPageLink,\n}) => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n\n  return (\n    <>\n      <section className='pf-c-page__main-breadcrumb'>\n        <Breadcrumb>\n          <BreadcrumbItem\n            render={() => (\n              <Link to={kafkaPageLink || '#'}>\n                {t('common.kafka_instance')}\n              </Link>\n            )}\n          />\n          <BreadcrumbItem\n            render={() => (\n              <Link to={kafkaInstanceLink || '#'}>\n                {kafkaName || t('common.kafka_instance_name')}\n              </Link>\n            )}\n          />\n          <BreadcrumbItem>{topicName}</BreadcrumbItem>\n        </Breadcrumb>\n      </section>\n      <PageSection variant={PageSectionVariants.light}>\n        <TextContent>\n          <Text component={TextVariants.h1}>{topicName}</Text>\n        </TextContent>\n      </PageSection>\n    </>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useBasename } from '@rhoas/app-services-ui-shared';\nimport {\n  PageSection,\n  PageGroup,\n  JumpLinks,\n  JumpLinksItem,\n  TextContent,\n  Text,\n  TextVariants,\n  Button,\n  Divider,\n  Sidebar,\n  SidebarContent,\n  SidebarPanel,\n  SplitItem,\n  Split,\n  Form,\n  FormSection,\n} from '@patternfly/react-core';\nimport {\n  DEFAULT_MESSAGE_TIMESTAMP_TYPE,\n  DEFAULT_DELETE_RETENTION_TIME,\n  DEFAULT_FILE_DELETE_DELAY,\n  DEFAULT_INDEX_INTERVAL_SIZE,\n  DEFAULT_LOG_SEGMENT_SIZE,\n  DEFAULT_MAXIMUM_MESSAGE_BYTES,\n  DEFAULT_MINIMUM_COMPACTION_LAG_TIME,\n  DEFAULT_MIN_CLEANBLE_RATIO,\n  DEFAULT_SEGMENT_INDEX_SIZE,\n  DEFAULT_SEGMENT_JITTER_TIME,\n  DEFAULT_SEGMENT_TIME,\n  DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF,\n  DEFAULT_FLUSH_INTERVAL_MESSAGES,\n  DEFAULT_FLUSH_INTERVAL_TIME,\n  DEFAULT_MIN_INSYNC_REPLICAS,\n} from '@app/constant';\nimport './TopicDetailView.css';\nimport { TextWithLabelPopover } from '@app/components/TextWithLabelPopover';\nimport {\n  formattedRetentionSize,\n  formattedRetentionTime,\n  IAdvancedTopic,\n} from '@app/modules/Topics/utils';\nimport { useFederated } from '@app/contexts';\n\nexport type TopicViewDetailProps = {\n  /** Topic details */\n  topic: IAdvancedTopic;\n  /** Method to delete topic */\n  deleteTopic: () => void;\n};\n\nexport const TopicDetailView: React.FunctionComponent<TopicViewDetailProps> = ({\n  topic,\n  deleteTopic,\n}) => {\n  const history = useHistory();\n  const { topicName } = useParams<{ topicName: string }>();\n  const { getBasename } = useBasename() || { getBasename: () => '' };\n  const basename = getBasename();\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n  const { minInSyncReplicas } = useFederated() || {};\n\n  const updateTopic = () => {\n    history.push(`${basename}/topic/update/${topicName}`);\n  };\n\n  return (\n    <PageSection padding={{ default: 'noPadding' }}>\n      <Sidebar hasGutter>\n        <SidebarPanel variant='sticky'>\n          <JumpLinks\n            isVertical\n            label={t('topic.jump_to_section')}\n            style={{ position: 'sticky' }}\n            scrollableSelector='.pf-c-page__main-section.pf-m-light.pf-m-overflow-scroll'\n          >\n            <JumpLinksItem key={0} href='#core-configuration'>\n              {t('topic.core_configuration')}\n            </JumpLinksItem>\n            <JumpLinksItem key={1} href='#messages'>\n              {t('topic.messages')}\n            </JumpLinksItem>\n            <JumpLinksItem key={2} href='#log'>\n              {t('topic.log')}\n            </JumpLinksItem>\n            <JumpLinksItem key={3} href='#replication'>\n              {t('topic.replication')}\n            </JumpLinksItem>\n            <JumpLinksItem key={4} href='#cleanup'>\n              {t('common.cleanup')}\n            </JumpLinksItem>\n            <JumpLinksItem key={5} href='#index'>\n              {t('topic.index')}\n            </JumpLinksItem>\n            <JumpLinksItem key={6} href='#flush'>\n              {t('topic.flush')}\n            </JumpLinksItem>\n            <JumpLinksItem key={7} href='#delete'>\n              {t('common.delete')}\n            </JumpLinksItem>\n          </JumpLinks>\n        </SidebarPanel>\n        <SidebarContent>\n          <PageGroup\n            hasOverflowScroll\n            id='topic-detail-view'\n            className={'pf-u-mb-4xl'}\n          >\n            <PageSection padding={{ default: 'noPadding' }}>\n              <Split>\n                <SplitItem isFilled>\n                  <Form id='topic-form'>\n                    <FormSection\n                      title={t('topic.core_configuration')}\n                      id='core-configuration'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className='section-info'\n                        >\n                          {t('topic.core_config_info')}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='topic-name'\n                        btnAriaLabel={t('common.name')}\n                        fieldLabel={t('topic.topic_name')}\n                        fieldValue={topic.name}\n                        popoverBody={t('topic.topic_name_description')}\n                        popoverHeader={t('topic.topic_name')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='partitions'\n                        btnAriaLabel={t('topic.partitions')}\n                        fieldLabel={t('topic.partitions')}\n                        fieldValue={topic.numPartitions}\n                        popoverBody={t('topic.partitions_description')}\n                        popoverHeader={t('topic.partitions')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='replicas'\n                        btnAriaLabel={t('topic.replicas')}\n                        fieldLabel={t('topic.replicas')}\n                        fieldValue={topic.replicationFactor}\n                        popoverBody={t('topic.replicas_description')}\n                        popoverHeader={t('topic.replicas')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='min-insync-replicas'\n                        btnAriaLabel={t('topic.min_insync_replicas')}\n                        fieldLabel={t('topic.min_insync_replicas')}\n                        fieldValue={\n                          minInSyncReplicas?.toString() ||\n                          DEFAULT_MIN_INSYNC_REPLICAS\n                        }\n                        popoverBody={t('topic.min_insync_replicas_description')}\n                        popoverHeader={t('topic.min_insync_replicas')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='retention-time'\n                        btnAriaLabel={t('topic.retention_time')}\n                        fieldLabel={t('topic.retention_time')}\n                        fieldValue={formattedRetentionTime(\n                          Number(topic['retention.ms'])\n                        )}\n                        popoverBody={t('topic.retention_time_description')}\n                        popoverHeader={t('topic.retention_time')}\n                        showUnlimited={true}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='retention-size'\n                        btnAriaLabel={t('topic.retention_size')}\n                        fieldLabel={t('topic.retention_size')}\n                        fieldValue={formattedRetentionSize(\n                          Number(topic['retention.bytes'])\n                        )}\n                        popoverHeader={t('topic.retention_size')}\n                        popoverBody={t('topic.retention_size_description')}\n                        showUnlimited={true}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t('topic.messages')}\n                      id='messages'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className='section-info'\n                        >\n                          {t('topic.message_section_info')}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='max-message-size'\n                        btnAriaLabel={t('topic.max_message_size')}\n                        fieldLabel={t('topic.max_message_size')}\n                        fieldValue={DEFAULT_MAXIMUM_MESSAGE_BYTES}\n                        popoverBody={t('topic.max_message_size_description')}\n                        popoverHeader={t('topic.max_message_size')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='message-timestamp-type'\n                        btnAriaLabel={t('topic.message_timestamp_type')}\n                        fieldLabel={t('topic.message_timestamp_type')}\n                        fieldValue={DEFAULT_MESSAGE_TIMESTAMP_TYPE}\n                        popoverBody={t(\n                          'topic.message_timestamp_type_description'\n                        )}\n                        popoverHeader={t('topic.message_timestamp_type')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='max-message-timestamp-diff'\n                        btnAriaLabel={t('topic.max_message_timestamp_diff')}\n                        fieldLabel={t('topic.max_message_timestamp_diff')}\n                        fieldValue={DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF}\n                        popoverBody={t(\n                          'topic.max_message_timestamp_diff_description'\n                        )}\n                        popoverHeader={t('topic.max_message_timestamp_diff')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='compression-type'\n                        btnAriaLabel={t('topic.compression_type')}\n                        fieldLabel={t('topic.compression_type')}\n                        fieldValue='Producer'\n                        popoverBody={t('topic.compression_type_description')}\n                        popoverHeader={t('topic.compression_type')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='message-format'\n                        btnAriaLabel={t('topic.message_format')}\n                        fieldLabel={t('topic.message_format')}\n                        fieldValue='2.7-IV2'\n                        popoverBody={t('topic.message_format_description')}\n                        popoverHeader={t('topic.message_format')}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t('topic.log')}\n                      id='log'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text component={TextVariants.p}>\n                          {t('topic.log_section_info')}\n                          <Text\n                            component={TextVariants.small}\n                            className='section-info-note'\n                          >\n                            {t('topic.log_section_info_note')}\n                          </Text>\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='cleanup-policy'\n                        btnAriaLabel={t('topic.cleanup_policy')}\n                        fieldLabel={t('topic.cleanup_policy')}\n                        fieldValue={topic['cleanup.policy']}\n                        popoverBody={t('topic.cleanup_policy_description')}\n                        popoverHeader={t('topic.cleanup_policy')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='delete-retention-time'\n                        btnAriaLabel={t('topic.delete_retention_time')}\n                        fieldLabel={t('topic.delete_retention_time')}\n                        fieldValue={DEFAULT_DELETE_RETENTION_TIME}\n                        popoverBody={t(\n                          'topic.delete_retention_time_description'\n                        )}\n                        popoverHeader={t('topic.delete_retention_time')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='min-cleanable-ratio'\n                        btnAriaLabel={t('topic.min_cleanable_ratio')}\n                        fieldLabel={t('topic.min_cleanable_ratio')}\n                        fieldValue={DEFAULT_MIN_CLEANBLE_RATIO}\n                        popoverBody={t('topic.min_cleanable_ratio_description')}\n                        popoverHeader={t('topic.min_cleanable_ratio')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='min-compaction-lag-time'\n                        btnAriaLabel={t('topic.min_compaction_lag_time')}\n                        fieldLabel={t('topic.min_compaction_lag_time')}\n                        fieldValue={DEFAULT_MINIMUM_COMPACTION_LAG_TIME}\n                        popoverBody={t(\n                          'topic.min_compaction_lag_time_description'\n                        )}\n                        popoverHeader={t('topic.min_compaction_lag_time')}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t('topic.replication')}\n                      id='replication'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text component={TextVariants.p}>\n                          {t('topic.replication_section_info')}\n                          <Text component={TextVariants.small}>\n                            {t('topic.replication_section_info_note')}\n                          </Text>\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='unclean-leader-election'\n                        btnAriaLabel={t('topic.unclean_leader_election')}\n                        fieldLabel={t('topic.unclean_leader_election')}\n                        fieldValue={t('common.disabled')}\n                        popoverBody={t(\n                          'topic.unclean_leader_election_description'\n                        )}\n                        popoverHeader={t('topic.unclean_leader_election')}\n                      />\n                    </FormSection>\n\n                    <FormSection\n                      title={t('common.cleanup')}\n                      id='cleanup'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className='section-info'\n                        >\n                          {t('topic.cleanup_section_info')}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='log-segment-size'\n                        btnAriaLabel={t('topic.log_segment_size')}\n                        fieldLabel={t('topic.log_segment_size')}\n                        fieldValue={DEFAULT_LOG_SEGMENT_SIZE}\n                        popoverBody={t('topic.log_segment_size_description')}\n                        popoverHeader={t('topic.log_segment_size')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='segement-time'\n                        btnAriaLabel={t('topic.segement_time')}\n                        fieldLabel={t('topic.segement_time')}\n                        fieldValue={DEFAULT_SEGMENT_TIME}\n                        popoverBody={t('topic.segement_time_description')}\n                        popoverHeader={t('topic.segement_time')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='segment-jitter-time'\n                        btnAriaLabel={t('topic.segment_jitter_time')}\n                        fieldLabel={t('topic.segment_jitter_time')}\n                        fieldValue={DEFAULT_SEGMENT_JITTER_TIME}\n                        popoverBody={t('topic.segment_jitter_time_description')}\n                        popoverHeader={t('topic.segment_jitter_time')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='file-delete-delay'\n                        btnAriaLabel={t('topic.file_delete_delay')}\n                        fieldLabel={t('topic.file_delete_delay')}\n                        fieldValue={DEFAULT_FILE_DELETE_DELAY}\n                        popoverBody={t('topic.file_delete_delay_description')}\n                        popoverHeader={t('topic.file_delete_delay')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='preallocate-log-segment-files'\n                        btnAriaLabel={t('topic.preallocate_log_segment_files')}\n                        fieldLabel={t('topic.preallocate_log_segment_files')}\n                        fieldValue={t('common.disabled')}\n                        popoverBody={t(\n                          'topic.preallocate_log_segment_files_description'\n                        )}\n                        popoverHeader={t('topic.preallocate_log_segment_files')}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t('topic.index')}\n                      id='index'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className='section-info'\n                        >\n                          {t('topic.index_section_info')}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='index-interval-size'\n                        btnAriaLabel={t('topic.index_interval_size')}\n                        fieldLabel={t('topic.index_interval_size')}\n                        fieldValue={DEFAULT_INDEX_INTERVAL_SIZE}\n                        popoverBody={t('topic.index_interval_size_description')}\n                        popoverHeader={t('topic.index_interval_size')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='segment-index-size'\n                        btnAriaLabel={t('topic.segment_index_size')}\n                        fieldLabel={t('topic.segment_index_size')}\n                        fieldValue={DEFAULT_SEGMENT_INDEX_SIZE}\n                        popoverBody={t('topic.segment_index_size_description')}\n                        popoverHeader={t('topic.segment_index_size')}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t('topic.flush')}\n                      id='flush'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className='section-info'\n                        >\n                          {t('topic.flush_section_info')}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='flush-interval-messages'\n                        btnAriaLabel={t('topic.flush_interval_messages')}\n                        fieldLabel={t('topic.flush_interval_messages')}\n                        fieldValue={DEFAULT_FLUSH_INTERVAL_MESSAGES}\n                        popoverBody={t(\n                          'topic.flush_interval_messages_description'\n                        )}\n                        popoverHeader={t('topic.flush_interval_messages')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='flush-interval-time'\n                        btnAriaLabel={t('topic.flush_interval_time')}\n                        fieldLabel={t('topic.flush_interval_time')}\n                        fieldValue={DEFAULT_FLUSH_INTERVAL_TIME}\n                        popoverBody={t('topic.flush_interval_time_description')}\n                        popoverHeader={t('topic.flush_interval_time')}\n                      />\n                    </FormSection>\n                  </Form>\n\n                  <Divider className='kafka-ui-divider__Margin' />\n\n                  <TextContent>\n                    <Text component={TextVariants.h2} id='delete'>\n                      {t('topic.delete_topic')}\n                    </Text>\n                    <Text component={TextVariants.p} className='section-info'>\n                      {t('topic.delete_topic_info')}\n                    </Text>\n                    <Button\n                      variant='danger'\n                      onClick={deleteTopic}\n                      data-testid='tabProperties-actionDelete'\n                    >\n                      {t('common.delete_topic')}\n                    </Button>\n                  </TextContent>\n                </SplitItem>\n                <SplitItem>\n                  <Button\n                    variant='primary'\n                    onClick={updateTopic}\n                    data-testid='tabProperties-actionEdit'\n                  >\n                    {t('common.edit_props')}\n                  </Button>\n                </SplitItem>\n              </Split>\n            </PageSection>\n          </PageGroup>\n        </SidebarContent>\n      </Sidebar>\n    </PageSection>\n  );\n};\n","import {\n  createRef,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n  VoidFunctionComponent,\n} from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n  AlertVariant,\n  PageSection,\n  PageSectionVariants,\n  Tab,\n  TabContent,\n  Tabs,\n  TabsProps,\n  TabTitleText,\n} from '@patternfly/react-core';\nimport {\n  TopicDetailHead,\n  TopicDetailView,\n} from '@app/modules/Topics/components';\nimport { getTopicDetail } from '@app/services';\nimport { ConfigContext, useFederated } from '@app/contexts';\nimport { ConsumerGroups } from '@app/modules/ConsumerGroups';\nimport { isAxiosError } from '@app/utils/axios';\nimport { IAdvancedTopic } from '@app/modules/Topics/utils';\nimport {\n  useAlert,\n  useBasename,\n  ModalType,\n  useModal,\n} from '@rhoas/app-services-ui-shared';\nimport '../style.css';\nimport {\n  KafkaMessageBrowser,\n  KafkaMessageBrowserProps,\n} from '@rhoas/app-services-ui-components';\nimport {\n  Configuration,\n  Record,\n  RecordsApi,\n  TopicsApi,\n} from '@rhoas/kafka-instance-sdk';\nimport { Loading } from '@app/components';\n\nexport const TopicDetailPage: VoidFunctionComponent = () => {\n  const { kafkaName, kafkaPageLink, kafkaInstanceLink, showSchemas } =\n    useFederated() || {};\n\n  const { topicName } = useParams<{ topicName: string }>();\n  const [activeTabKey, setActiveTabKey] = useState(1);\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n  const contentRefMessages = createRef<HTMLElement>();\n  const contentRefConsumerGroup = createRef<HTMLElement>();\n  const contentRefProperties = createRef<HTMLElement>();\n  const contentRefSchemas = createRef<HTMLElement>();\n\n  const handleTabClick: TabsProps['onSelect'] = (_, tabIndex) => {\n    setActiveTabKey(tabIndex as number);\n  };\n\n  return (\n    <>\n      <TopicDetailHead\n        topicName={topicName}\n        kafkaName={kafkaName}\n        kafkaPageLink={kafkaPageLink}\n        kafkaInstanceLink={kafkaInstanceLink}\n      />\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: 'noPadding' }}\n        className='pf-c-page__main-tabs'\n      >\n        <Tabs\n          activeKey={activeTabKey}\n          onSelect={handleTabClick}\n          isBox={false}\n          className='pf-m-page-insets'\n        >\n          <Tab\n            eventKey={1}\n            data-testid='pageTopic-tabConsumers'\n            title={\n              <TabTitleText>{t('consumerGroup.consumer_groups')}</TabTitleText>\n            }\n            tabContentId='kafka-ui-TabcontentConsumerGroupList'\n            tabContentRef={contentRefConsumerGroup}\n          />\n          <Tab\n            eventKey={2}\n            data-testid='pageTopic-tabMessages'\n            title={<TabTitleText>{t('topic.messages')}</TabTitleText>}\n            tabContentId='kafka-ui-TabcontentMessages'\n            tabContentRef={contentRefMessages}\n          />\n          <Tab\n            eventKey={3}\n            title={<TabTitleText>{t('common.properties')}</TabTitleText>}\n            data-testid='pageTopic-tabProperties'\n            tabContentId='kafka-ui-TabcontentProperties'\n            tabContentRef={contentRefProperties}\n          />\n          <Tab\n            eventKey={4}\n            title={<TabTitleText>{t('common.schemas')}</TabTitleText>}\n            data-testid='pageTopic-tabSchemas'\n            tabContentId='kafka-ui-TabSchemas'\n            tabContentRef={contentRefSchemas}\n          />\n        </Tabs>\n      </PageSection>\n      <PageSection\n        variant={\n          activeTabKey === 3\n            ? PageSectionVariants.light\n            : PageSectionVariants.default\n        }\n        hasOverflowScroll={true}\n      >\n        <TabContent\n          eventKey={1}\n          id='kafka-ui-TabcontentConsumerGroupList'\n          ref={contentRefConsumerGroup}\n          className='kafka-ui-m-full-height'\n          aria-label='Consumer groups'\n          hidden={activeTabKey != 1}\n        >\n          {activeTabKey === 1 && (\n            <ConsumerGroups\n              consumerGroupByTopic={true}\n              topic={topicName}\n              rowDataTestId='tableTopicConsumers-row'\n            />\n          )}\n        </TabContent>\n        <TabContent\n          eventKey={2}\n          id='kafka-ui-TabcontentMessages'\n          ref={contentRefMessages}\n          className='kafka-ui-m-full-height'\n          aria-label='Messages'\n          hidden={activeTabKey != 2}\n        >\n          {activeTabKey === 2 && <MessagesConnected topicName={topicName} />}\n        </TabContent>\n        <TabContent\n          eventKey={3}\n          id='kafka-ui-TabcontentProperties'\n          ref={contentRefProperties}\n          className='kafka-ui-m-full-height'\n          aria-label='Topic properties'\n          hidden={activeTabKey != 3}\n        >\n          {activeTabKey === 3 && (\n            <TopicDetailsViewConnected topicName={topicName} />\n          )}\n        </TabContent>\n        <TabContent\n          eventKey={4}\n          id='kafka-ui-TabSchemas'\n          ref={contentRefSchemas}\n          className='kafka-ui-m-full-height'\n          aria-label='Schemas mapping'\n          hidden={activeTabKey != 4}\n        >\n          {activeTabKey === 4 && showSchemas}\n        </TabContent>\n      </PageSection>\n    </>\n  );\n};\n\nconst TopicDetailsViewConnected: VoidFunctionComponent<{\n  topicName: string;\n}> = ({ topicName }) => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n  const { showModal } = useModal<ModalType.KafkaDeleteTopic>();\n  const config = useContext(ConfigContext);\n  const { addAlert } = useAlert() || {\n    addAlert: () => {\n      // No-op\n    },\n  };\n  const { getBasename } = useBasename() || { getBasename: () => '' };\n  const history = useHistory();\n  const basename = getBasename();\n  const { onError } = useFederated() || {};\n\n  const [topicDetail, setTopicDetail] = useState<IAdvancedTopic>();\n\n  const onDeleteTopic = () => {\n    //Redirect on topics  viewpage after delete topic successfuly\n    history.push(`${basename}/topics`);\n  };\n\n  const fetchTopicDetail = useCallback(\n    async (topicName: string) => {\n      try {\n        await getTopicDetail(topicName, config).then((response) => {\n          setTopicDetail(response);\n        });\n      } catch (err) {\n        if (isAxiosError(err)) {\n          if (onError) {\n            onError(\n              err.response?.data.code || -1,\n              err.response?.data.error_message\n            );\n          }\n          if (err.response?.status === 404) {\n            // then it's a non-existent topic\n            addAlert({\n              title: t('topic.topic_not_found', { name: topicName }),\n              variant: AlertVariant.danger,\n            });\n          }\n        }\n      }\n    },\n    [addAlert, config, onError, t]\n  );\n\n  // Make the get request\n  useEffect(() => {\n    fetchTopicDetail(topicName);\n  }, [fetchTopicDetail, topicName]);\n\n  const deleteTopic = () => {\n    showModal(ModalType.KafkaDeleteTopic, {\n      topicName,\n      onDeleteTopic,\n    });\n  };\n\n  return topicDetail ? (\n    <TopicDetailView topic={topicDetail} deleteTopic={deleteTopic} />\n  ) : (\n    <Loading />\n  );\n};\n\nexport type Unpromise<T extends Promise<any>> = T extends Promise<infer U>\n  ? U\n  : never;\n\nconst MessagesConnected: VoidFunctionComponent<{\n  topicName: string;\n}> = ({ topicName }) => {\n  const config = useContext(ConfigContext);\n\n  const consumeRecords = useCallback(\n    async ({\n      offset,\n      partition,\n      limit,\n      timestamp,\n    }: Parameters<KafkaMessageBrowserProps['getMessages']>[0]): Promise<\n      Unpromise<ReturnType<KafkaMessageBrowserProps['getMessages']>>['messages']\n    > => {\n      const accessToken = await config?.getToken();\n      const recordsApi = new RecordsApi(\n        new Configuration({\n          accessToken,\n          basePath: config?.basePath,\n        })\n      );\n      const { data } = await recordsApi.consumeRecords(\n        topicName,\n        undefined,\n        limit,\n        undefined,\n        offset,\n        partition,\n        timestamp\n      );\n      return data.items.map((m: Record) => ({\n        partition: m.partition,\n        offset: m.offset,\n        timestamp: m.timestamp,\n        key: m.key,\n        value: m.value,\n        headers: m.headers || {},\n      }));\n    },\n    [config, topicName]\n  );\n\n  const getTopicPartitions = useCallback(async () => {\n    const accessToken = await config?.getToken();\n    const topicsApi = new TopicsApi(\n      new Configuration({\n        accessToken,\n        basePath: config?.basePath,\n      })\n    );\n    const { data } = await topicsApi.getTopic(topicName);\n    return data.partitions?.length || 0;\n  }, [config, topicName]);\n\n  const getMessages: KafkaMessageBrowserProps['getMessages'] = useCallback(\n    async (opts) => {\n      const [messages, partitions] = await Promise.all([\n        consumeRecords(opts),\n        getTopicPartitions(),\n      ]);\n      return {\n        partitions,\n        messages,\n      };\n    },\n    [consumeRecords, getTopicPartitions]\n  );\n\n  return <KafkaMessageBrowser getMessages={getMessages} />;\n};\n"],"names":["TopicDetailHead","topicName","kafkaName","kafkaInstanceLink","kafkaPageLink","t","useTranslation","className","Breadcrumb","BreadcrumbItem","render","Link","to","PageSection","variant","PageSectionVariants","TextContent","Text","component","TextVariants","topic","deleteTopic","history","useHistory","useParams","getBasename","useBasename","basename","minInSyncReplicas","padding","default","Sidebar","hasGutter","SidebarPanel","JumpLinks","isVertical","label","style","position","scrollableSelector","JumpLinksItem","href","SidebarContent","PageGroup","hasOverflowScroll","id","Split","SplitItem","isFilled","Form","FormSection","title","titleElement","TextWithLabelPopover","fieldId","btnAriaLabel","fieldLabel","fieldValue","name","popoverBody","popoverHeader","numPartitions","replicationFactor","toString","Number","showUnlimited","Divider","Button","onClick","push","TopicDetailPage","showSchemas","activeTabKey","setActiveTabKey","useState","contentRefMessages","createRef","contentRefConsumerGroup","contentRefProperties","contentRefSchemas","Tabs","activeKey","onSelect","_","tabIndex","isBox","Tab","eventKey","TabTitleText","tabContentId","tabContentRef","TabContent","ref","hidden","ConsumerGroups","consumerGroupByTopic","rowDataTestId","MessagesConnected","TopicDetailsViewConnected","showModal","useModal","config","useContext","addAlert","useAlert","onError","topicDetail","setTopicDetail","onDeleteTopic","fetchTopicDetail","useCallback","then","response","err","data","code","error_message","status","AlertVariant","useEffect","ModalType","Loading","consumeRecords","offset","partition","limit","timestamp","accessToken","getToken","recordsApi","RecordsApi","Configuration","basePath","undefined","items","map","m","key","value","headers","getTopicPartitions","topicsApi","TopicsApi","getTopic","partitions","length","getMessages","opts","messages","Promise","all","KafkaMessageBrowser"],"sourceRoot":""}