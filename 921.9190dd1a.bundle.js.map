{"version":3,"sources":["webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/caret-down-icon.js","webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/help-icon.js","webpack://kafka-ui/./src/Components/TextWithLabelPopover/TextWithLabelPopover.tsx","webpack://kafka-ui/./src/Constant/constants.ts","webpack://kafka-ui/./src/Modules/Topics/CreateTopic/Components/PartitionsChangeModal.tsx","webpack://kafka-ui/./src/Components/FormGroupWithPopover/FormGroupWithPopover.tsx","webpack://kafka-ui/./src/Components/DropdownWithToggle.tsx","webpack://kafka-ui/./src/Components/SizeTimeFormGroup/SizeTimeFormGroup.tsx","webpack://kafka-ui/./src/Modules/Topics/CreateTopic/Components/TopicAdvanceConfig.tsx"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","TextWithLabelPopover","fieldLabel","btnAriaLabel","fieldValue","popoverBody","popoverHeader","displayText","undefined","parseInt","TextContent","className","Text","style","fontWeight","display","Popover","headerContent","bodyContent","onClick","event","preventDefault","position","left","top","noVerticalAlign","DEFAULT_REPLICAS","DEFAULT_MIN_CLEANBLE_RATIO","DEFAULT_MIN_INSYNC_REPLICAS","DEFAULT_SEGMENT_TIME","DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF","DEFAULT_SEGMENT_INDEX_SIZE","DEFAULT_INDEX_INTERVAL_SIZE","DEFAULT_LOG_SEGMENT_SIZE","DEFAULT_DELETE_RETENTION_TIME","DEFAULT_SEGMENT_JITTER_TIME","DEFAULT_FILE_DELETE_DELAY","DEFAULT_MAXIMUM_MESSAGE_BYTES","DEFAULT_MESSAGE_TIMESTAMP_TYPE","DEFAULT_MINIMUM_COMPACTION_LAG_TIME","DEFAULT_FLUSH_INTERVAL_MESSAGES","DEFAULT_FLUSH_INTERVAL_TIME","PartitionsChangeModal","onSaveClick","isWarningOpen","setIsWarningOpen","Modal","variant","ModalVariant","isOpen","title","titleIconVariant","showClose","onClose","actions","Button","key","FormGroupWithPopover","children","labelHead","fieldId","labelBody","buttonAriaLabel","validated","helperText","helperTextInvalid","FormGroup","label","labelIcon","DropdownWithToggle","options","id","toggleId","items","value","ariaLabel","onSelectOption","useState","setIsOpen","dropdownToggle","DropdownToggle","onToggle","toggleIndicator","Dropdown","onSelect","e","currentTarget","textContent","target","toggle","dropdownItems","map","option","DropdownItem","SizeTimeFormGroup","dropdownValue","inputName","onChange","onPlus","onMinus","plusBtnProps","minusBtnProps","type","min","timeUnits","isDisabled","memoryUnits","Flex","FlexItem","grow","default","NumberInput","getItemsForType","TopicAdvanceConfig","isCreate","saveTopic","handleCancel","topicData","setTopicData","partitionsValidated","setPartitionsValidated","warning","setWarning","initialPartition","setInitialPartition","topicValidated","setTopicValidated","invalidText","setInvalidText","t","useTranslation","isCustomRetentionTimeSelected","setIsCustomRetentionTimeSelected","isCustomRetentionSizeSelected","setIsCustomRetentionSizeSelected","customRetentionTime","setCustomRetentionTime","customRetentionTimeUnit","setCustomRetentionTimeUnit","customRetentionSize","setCustomRetentionSize","customRetentionSizeUnit","setCustomRetentionSizeUnit","actionText","clearOptions","config","useContext","useEffect","topicName","topicRes","configEntries","forEach","configItem","partitions","length","Number","onDropdownChange","handleTouchSpinInputChange","handleTouchSpinPlus","updatedRetentionTime","toString","updatedRetentionSize","handleTouchSpinMinus","handleRadioChange","_","retentionTimeInput","retentionSizeInput","Sidebar","hasGutter","SidebarPanel","JumpLinks","isVertical","scrollableSelector","offset","expandable","md","isExpanded","JumpLinksItem","href","SidebarContent","Stack","StackItem","component","TextVariants","tabIndex","Form","TextInput","isRequired","regexpInvalid","RegExp","test","validationCheck","fieldName","placeholder","partitionValue","numPartitions","Radio","isChecked","ActionGroup"],"mappings":"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","file":"921.9190dd1a.bundle.js","sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.CaretDownIconConfig = {\n  name: 'CaretDownIcon',\n  height: 512,\n  width: 320,\n  svgPath: 'M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.CaretDownIcon = require('../createIcon').createIcon(exports.CaretDownIconConfig);\nexports[\"default\"] = exports.CaretDownIcon;","\"use strict\"\nexports.__esModule = true;\nexports.HelpIconConfig = {\n  name: 'HelpIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M521.3,576 C627.5,576 713.7,502 713.7,413.7 C713.7,325.4 627.6,253.6 521.3,253.6 C366,253.6 334.5,337.7 329.2,407.2 C329.2,414.3 335.2,416 343.5,416 L445,416 C450.5,416 458,415.5 460.8,406.5 C460.8,362.6 582.9,357.1 582.9,413.6 C582.9,441.9 556.2,470.9 521.3,473 C486.4,475.1 447.3,479.8 447.3,521.7 L447.3,553.8 C447.3,570.8 456.1,576 472,576 C487.9,576 521.3,576 521.3,576 M575.3,751.3 L575.3,655.3 C575.313862,651.055109 573.620137,646.982962 570.6,644 C567.638831,640.947672 563.552355,639.247987 559.3,639.29884 L463.3,639.29884 C459.055109,639.286138 454.982962,640.979863 452,644 C448.947672,646.961169 447.247987,651.047645 447.29884,655.3 L447.29884,751.3 C447.286138,755.544891 448.979863,759.617038 452,762.6 C454.961169,765.652328 459.047645,767.352013 463.3,767.30116 L559.3,767.30116 C563.544891,767.313862 567.617038,765.620137 570.6,762.6 C573.659349,759.643612 575.360354,755.553963 575.3,751.3 M512,896 C300.2,896 128,723.9 128,512 C128,300.3 300.2,128 512,128 C723.8,128 896,300.2 896,512 C896,723.8 723.7,896 512,896 M512.1,0 C229.7,0 0,229.8 0,512 C0,794.2 229.8,1024 512.1,1024 C794.4,1024 1024,794.3 1024,512 C1024,229.7 794.4,0 512.1,0',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.HelpIcon = require('../createIcon').createIcon(exports.HelpIconConfig);\nexports[\"default\"] = exports.HelpIcon;","import { Popover, TextContent, Text } from '@patternfly/react-core';\nimport React from 'react';\nimport HelpIcon from '@patternfly/react-icons/dist/js/icons/help-icon';\n\nimport './TextWithLabelPopover.css';\n\nexport interface TextWithLabelPopoverProps {\n  /** Field label */\n  fieldLabel: string;\n  /** Field value */\n  fieldValue?: string;\n  /** Header text for popover label */\n  popoverHeader: string;\n  /** Body text for popover label */\n  popoverBody: string;\n  /** Aria label for popover button */\n  btnAriaLabel: string;\n  /** Indicates if unlimited should be shown for negative numbers */\n  showUnlimited?: boolean;\n}\n\nexport const TextWithLabelPopover: React.FC<TextWithLabelPopoverProps> = ({\n  fieldLabel,\n  btnAriaLabel,\n  fieldValue,\n  popoverBody,\n  popoverHeader,\n  showUnlimited,\n}) => {\n  const preventButtonSubmit = (event) => event.preventDefault();\n\n  let displayText = '-';\n\n  if (\n    showUnlimited === true &&\n    fieldValue !== undefined &&\n    parseInt(fieldValue) < 0\n  ) {\n    displayText = 'Unlimited';\n  } else if (fieldValue) {\n    displayText = fieldValue;\n  }\n\n  return (\n    <TextContent className='text-content-padding'>\n      <Text style={{ fontWeight: 700, display: 'inline' }}>{fieldLabel}</Text>\n      <Popover\n        headerContent={<div>{popoverHeader}</div>}\n        bodyContent={<div>{popoverBody}</div>}\n      >\n        <button\n          aria-label={btnAriaLabel}\n          onClick={preventButtonSubmit}\n          className='pf-c-form__group-label-help'\n          style={{ position: 'relative', left: '5px', top: '2px' }}\n        >\n          <HelpIcon noVerticalAlign />\n        </button>\n      </Popover>\n      <Text>{displayText}</Text>\n    </TextContent>\n  );\n};\n","export const DEFAULT_REPLICAS: string = '3';\nexport const DEFAULT_MIN_CLEANBLE_RATIO: string = '0.5';\nexport const DEFAULT_MIN_INSYNC_REPLICAS: string = '2';\nexport const DEFAULT_SEGMENT_TIME: string = '604800000 milliseconds (7 days)';\nexport const DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF: string = '9223372036854775807 milliseconds';\nexport const DEFAULT_SEGMENT_INDEX_SIZE: string = '10485760 bytes (10 mebibytes)';\nexport const DEFAULT_INDEX_INTERVAL_SIZE: string = '4096 bytes (4 kibibytes)';\nexport const DEFAULT_LOG_SEGMENT_SIZE: string = '1073741824 bytes (1 gibibyte)';\nexport const DEFAULT_DELETE_RETENTION_TIME: string = '86400000 milliseconds (1 day)';\nexport const DEFAULT_SEGMENT_JITTER_TIME: string = '0 milliseconds';\nexport const DEFAULT_FILE_DELETE_DELAY: string = '60000 milliseconds (1 minute)';\nexport const DEFAULT_MAXIMUM_MESSAGE_BYTES: string = '1048588 bytes';\nexport const DEFAULT_MESSAGE_TIMESTAMP_TYPE: string = 'CreateTime';\nexport const DEFAULT_MINIMUM_COMPACTION_LAG_TIME: string = '0 milliseconds';\nexport const DEFAULT_FLUSH_INTERVAL_MESSAGES: string = '9223372036854775807 messages';\nexport const DEFAULT_FLUSH_INTERVAL_TIME: string = '9223372036854775807 milliseconds';","import React from 'react';\nimport { Modal, ModalVariant, Button } from '@patternfly/react-core';\n\nexport interface IPartitionsChangeModal {\n  onSaveClick: () => void;\n  isWarningOpen: boolean;\n  setIsWarningOpen: (value: boolean) => void;\n}\nexport const PartitionsChangeModal: React.FunctionComponent<IPartitionsChangeModal> = ({\n  onSaveClick,\n  isWarningOpen,\n  setIsWarningOpen,\n}) => {\n  return (\n    <Modal\n      variant={ModalVariant.small}\n      isOpen={isWarningOpen}\n      aria-label='Confirm change of partitions'\n      title='Increase the number of partitions?'\n      titleIconVariant='warning'\n      showClose={true}\n      aria-describedby='modal-message'\n      onClose={() => setIsWarningOpen(false)}\n      actions={[\n        <Button variant='primary' onClick={onSaveClick} key={1}>\n          Yes\n        </Button>,\n        <Button variant='link' onClick={() => setIsWarningOpen(false)} key={2}>\n          No, return to form\n        </Button>,\n      ]}\n    >\n      Messages might have the same key from two different partitions, which can\n      potentially break the message ordering guarantees that apply to a single\n      partition.\n    </Modal>\n  );\n};\n","import { FormGroup, Popover } from '@patternfly/react-core';\nimport HelpIcon from '@patternfly/react-icons/dist/js/icons/help-icon';\nimport React from 'react';\n\ninterface IFormGroupWithPopoverProps {\n  children: React.ReactNode;\n  labelHead: string;\n  fieldId: string;\n  fieldLabel: string;\n  labelBody: string;\n  buttonAriaLabel: string;\n  validated?: 'default' | 'error' | 'success' | 'warning' | undefined;\n  helperText?: string;\n  helperTextInvalid?: string;\n}\n\nexport const FormGroupWithPopover: React.FC<IFormGroupWithPopoverProps> = ({\n  children,\n  labelHead,\n  fieldId,\n  fieldLabel,\n  labelBody,\n  buttonAriaLabel,\n  validated,\n  helperText,\n  helperTextInvalid,\n}) => {\n  const preventButtonSubmit = (event) => event.preventDefault();\n\n  return (\n    <FormGroup\n      fieldId={fieldId}\n      label={fieldLabel}\n      validated={validated}\n      helperText={helperText}\n      helperTextInvalid={helperTextInvalid}\n      labelIcon={\n        <Popover\n          headerContent={<div>{labelHead}</div>}\n          bodyContent={<div>{labelBody}</div>}\n        >\n          <button\n            aria-label={buttonAriaLabel}\n            onClick={preventButtonSubmit}\n            className='pf-c-form__group-label-help'\n          >\n            <HelpIcon noVerticalAlign />\n          </button>\n        </Popover>\n      }\n    >\n      {children}\n    </FormGroup>\n  );\n};\n","import React, { useState } from 'react';\nimport { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport CaretDownIcon from '@patternfly/react-icons/dist/js/icons/caret-down-icon';\n\ninterface IDropdownWithToggleProps {\n  id: string;\n  toggleId: string;\n  value: string;\n  name: string;\n  items: IDropdownOption[];\n  onSelectOption?: (value: string, event) => void;\n  ariaLabel?: string;\n}\n\nexport interface IDropdownOption {\n  value?: string;\n  label?: string;\n  key?: string;\n  isDisabled?: boolean;\n}\n\nexport const DropdownWithToggle: React.FC<IDropdownWithToggleProps> = ({\n  id,\n  toggleId,\n  items,\n  value,\n  ariaLabel,\n  onSelectOption,\n  name,\n}) => {\n  const [isOpen, setIsOpen] = useState<boolean>();\n\n  const onToggle = () => {\n    setIsOpen((isOpen) => !isOpen);\n  };\n\n  const onSelect = (e) => {\n    const value = e.currentTarget.textContent;\n    if (onSelectOption) {\n      e.target.name = name;\n      onSelectOption(value, e);\n    }\n    setIsOpen((isOpen) => !isOpen);\n  };\n\n  const getItems = (options: IDropdownOption[]) => {\n    const items = options.map((option) => {\n      const { key, value, label } = option;\n\n      return (\n        <DropdownItem key={key} value={value}>\n          {label || value}\n        </DropdownItem>\n      );\n    });\n\n    return items;\n  };\n\n  const dropdownToggle = (\n    <DropdownToggle\n      id={toggleId}\n      onToggle={onToggle}\n      toggleIndicator={CaretDownIcon}\n    >\n      {value}\n    </DropdownToggle>\n  );\n\n  return (\n    <Dropdown\n      name={name}\n      id={id}\n      onSelect={onSelect}\n      toggle={dropdownToggle}\n      isOpen={isOpen}\n      aria-label={ariaLabel}\n      dropdownItems={getItems(items)}\n    />\n  );\n};\n","import {\n  Flex,\n  FlexItem,\n  NumberInput,\n  NumberInputProps,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { DropdownWithToggle, IDropdownOption } from '../DropdownWithToggle';\n\nexport interface SizeTimeFormGroup extends NumberInputProps {\n  /** id of dropdown element */\n  id: string;\n  /** id of dropdown toggle button */\n  toggleId: string;\n  /** id of dropdown element */\n  dropdownValue?: string;\n  /** name attribute of dropdown element */\n  name: string;\n  /** handler method of dropdown */\n  onSelectOption?: (value: string, event) => void;\n  /** aria label for dropdown element */\n  ariaLabel?: string;\n  /** determines whether to display memory units or time units */\n  type: string;\n}\n\nexport const SizeTimeFormGroup: React.FC<SizeTimeFormGroup> = ({\n  id,\n  toggleId,\n  dropdownValue,\n  ariaLabel,\n  onSelectOption,\n  name,\n  inputName,\n  onChange,\n  onPlus,\n  onMinus,\n  value,\n  plusBtnProps,\n  minusBtnProps,\n  type,\n  min,\n}) => {\n  const timeUnits: IDropdownOption[] = [\n    { key: 'milliseconds', value: 'milliseconds', isDisabled: false },\n    { key: 'seconds', value: 'seconds', isDisabled: false },\n    { key: 'days', value: 'days', isDisabled: false },\n    { key: 'months', value: 'months', isDisabled: false },\n    { key: 'years', value: 'years', isDisabled: false },\n  ];\n\n  const memoryUnits: IDropdownOption[] = [\n    { key: 'bytes', value: 'bytes', isDisabled: false },\n    { key: 'kilobytes', value: 'kilobytes', isDisabled: false },\n    { key: 'megabytes', value: 'megabytes', isDisabled: false },\n    { key: 'gigabytes', value: 'gigabytes', isDisabled: false },\n    { key: 'terabytes', value: 'terabytes', isDisabled: false },\n  ];\n\n  const getItemsForType = (type: string) => {\n    switch (type) {\n      case 'time':\n        return timeUnits;\n      case 'memory':\n        return memoryUnits;\n      default:\n        return [];\n    }\n  };\n\n  return (\n    <Flex>\n      <FlexItem grow={{ default: 'grow' }}>\n        <NumberInput\n          inputName={inputName}\n          onChange={onChange}\n          onPlus={onPlus}\n          onMinus={onMinus}\n          value={value}\n          plusBtnProps={plusBtnProps}\n          minusBtnProps={minusBtnProps}\n          min={min}\n        />\n      </FlexItem>\n      <FlexItem>\n        <DropdownWithToggle\n          id={id}\n          toggleId={toggleId}\n          ariaLabel={ariaLabel}\n          onSelectOption={onSelectOption}\n          items={getItemsForType(type)}\n          name={name}\n          value={dropdownValue || ''}\n        />\n      </FlexItem>\n    </Flex>\n  );\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport {\n  ActionGroup,\n  Button,\n  JumpLinks,\n  JumpLinksItem,\n  Sidebar,\n  SidebarContent,\n  SidebarPanel,\n  Stack,\n  StackItem,\n  TextContent,\n  Text,\n  TextVariants,\n  TextInput,\n  NumberInput,\n  Form,\n  Radio,\n} from '@patternfly/react-core';\nimport {\n  DEFAULT_MESSAGE_TIMESTAMP_TYPE,\n  DEFAULT_DELETE_RETENTION_TIME,\n  DEFAULT_FILE_DELETE_DELAY,\n  DEFAULT_INDEX_INTERVAL_SIZE,\n  DEFAULT_LOG_SEGMENT_SIZE,\n  DEFAULT_MAXIMUM_MESSAGE_BYTES,\n  DEFAULT_MINIMUM_COMPACTION_LAG_TIME,\n  DEFAULT_MIN_CLEANBLE_RATIO,\n  DEFAULT_MIN_INSYNC_REPLICAS,\n  DEFAULT_REPLICAS,\n  DEFAULT_SEGMENT_INDEX_SIZE,\n  DEFAULT_SEGMENT_JITTER_TIME,\n  DEFAULT_SEGMENT_TIME,\n  DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF,\n  DEFAULT_FLUSH_INTERVAL_MESSAGES,\n  DEFAULT_FLUSH_INTERVAL_TIME,\n} from '../../../../Constant/constants';\nimport './CreateTopicWizard.css';\n\nimport { useTranslation } from 'react-i18next';\nimport { PartitionsChangeModal } from './PartitionsChangeModal';\nimport { TextWithLabelPopover } from '../../../../Components/TextWithLabelPopover/TextWithLabelPopover';\nimport { FormGroupWithPopover } from '../../../../Components/FormGroupWithPopover/FormGroupWithPopover';\nimport { SizeTimeFormGroup } from '../../../../Components/SizeTimeFormGroup/SizeTimeFormGroup';\nimport { kebabToCamel, kebabToDotSeparated } from '../utils';\nimport {\n  DropdownWithToggle,\n  IDropdownOption,\n} from '../../../../Components/DropdownWithToggle';\nimport { IAdvancedTopic } from './CreateTopicWizard';\n\nimport { getTopic } from '../../../../Services/index';\nimport { ConfigContext } from '../../../../Contexts';\n\nexport interface ITopicAdvanceConfig {\n  isCreate: boolean;\n  saveTopic: () => void;\n  handleCancel: () => void;\n  topicData: IAdvancedTopic;\n  setTopicData: (val: IAdvancedTopic) => void;\n}\n\nexport const TopicAdvanceConfig: React.FunctionComponent<ITopicAdvanceConfig> = ({\n  isCreate,\n  saveTopic,\n  handleCancel,\n  topicData,\n  setTopicData,\n}) => {\n  const [partitionsValidated, setPartitionsValidated] = useState<\n    'warning' | 'default'\n  >('default');\n  const [warning, setWarning] = useState<boolean>(false);\n  const [initialPartition, setInitialPartition] = useState<number | undefined>(\n    0\n  );\n  const [topicValidated, setTopicValidated] = useState<'error' | 'default'>(\n    'default'\n  );\n  const [invalidText, setInvalidText] = useState('This is a required field');\n  const [isWarningOpen, setIsWarningOpen] = useState<boolean>(false);\n\n  const { t } = useTranslation();\n\n  const [\n    isCustomRetentionTimeSelected,\n    setIsCustomRetentionTimeSelected,\n  ] = useState<boolean>(true);\n  const [\n    isCustomRetentionSizeSelected,\n    setIsCustomRetentionSizeSelected,\n  ] = useState<boolean>(false);\n\n  const [customRetentionTime, setCustomRetentionTime] = useState<number>(7);\n  const [\n    customRetentionTimeUnit,\n    setCustomRetentionTimeUnit,\n  ] = useState<string>('days');\n  const [customRetentionSize, setCustomRetentionSize] = useState<number>(1);\n  const [\n    customRetentionSizeUnit,\n    setCustomRetentionSizeUnit,\n  ] = useState<string>('bytes');\n  const actionText =\n    isCreate === true ? t('topic.create_topic') : t('common.save');\n\n  const clearOptions: IDropdownOption[] = [\n    {\n      key: 'compact',\n      value: 'compact',\n      label: t('common.compact'),\n      isDisabled: false,\n    },\n    {\n      key: 'delete',\n      value: 'delete',\n      label: t('common.delete'),\n      isDisabled: false,\n    },\n    {\n      key: 'compact-delete',\n      value: 'compact, delete',\n      label: `${t('common.compact')}, ${t('common.delete')}`,\n      isDisabled: false,\n    },\n  ];\n\n  const minPartitionValue = 1;\n\n  const config = useContext(ConfigContext);\n  const fetchTopic = async (topicName) => {\n    const topicRes = await getTopic(topicName, config);\n\n    const configEntries: any = {};\n    topicRes.config?.forEach((configItem) => {\n      configEntries[configItem.key || ''] = configItem.value || '';\n    });\n\n    setInitialPartition(topicRes?.partitions?.length);\n  };\n\n  useEffect(() => {\n    (async function () {\n      fetchTopic(topicData.name);\n    })();\n    if (!isCreate) {\n      setCustomRetentionTimeUnit('milliseconds');\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isCreate) {\n      if (topicData['retention.bytes'] === '-1') {\n        setIsCustomRetentionSizeSelected(false);\n      } else {\n        setIsCustomRetentionSizeSelected(true);\n        setCustomRetentionSize(Number(topicData['retention.bytes']));\n      }\n      if (topicData['retention.ms'] === '-1') {\n        setIsCustomRetentionTimeSelected(false);\n      } else {\n        setIsCustomRetentionTimeSelected(true);\n        setCustomRetentionTime(Number(topicData['retention.ms']));\n      }\n    }\n  }, [topicData['retention.bytes'], topicData['retention.ms']]);\n\n  const validationCheck = (value: string) => {\n    const regexpInvalid = new RegExp('^[0-9A-Za-z_-]+$');\n\n    if (value.length && !regexpInvalid.test(value)) {\n      setInvalidText(\n        'Invalid input. Only letters (Aa-Zz) , numbers \" _ \" and \" - \" are accepted'\n      );\n      setTopicValidated('error');\n    } else if (value.length < 1) {\n      setInvalidText('This is a required field');\n      setTopicValidated('error');\n    } else if (value.length > 249) {\n      setTopicValidated('error');\n      setInvalidText('Topic name cannot exceed 249 characters');\n    } else setTopicValidated('default');\n  };\n\n  const handleTextInputChange = (\n    value: string,\n    event: React.FormEvent<HTMLInputElement>\n  ) => {\n    validationCheck(value);\n    const { name: fieldName } = event.currentTarget;\n    setTopicData({ ...topicData, [kebabToCamel(fieldName)]: value });\n  };\n\n  const onDropdownChange = (value: string, event) => {\n    const { name } = event.target;\n\n    if (name === 'custom-retention-time-unit') {\n      setCustomRetentionTimeUnit(value);\n      isCustomRetentionTimeSelected &&\n        setTopicData({\n          ...topicData,\n          'retention.ms.unit': value,\n        });\n    }\n    if (name === 'custom-retention-size-unit') {\n      setCustomRetentionSizeUnit(value);\n      isCustomRetentionSizeSelected &&\n        setTopicData({\n          ...topicData,\n          'retention.bytes.unit': value,\n        });\n    }\n  };\n\n  const onPartitionsChange = (event: React.FormEvent<HTMLInputElement>) => {\n    const { name: fieldName, value } = event.currentTarget;\n    let partitionValue = Number(value);\n    if (partitionValue < minPartitionValue) {\n      partitionValue = minPartitionValue;\n    }\n    setTopicData({ ...topicData, [kebabToCamel(fieldName)]: partitionValue });\n  };\n\n  const partitionsWarnigCheckPlus = () => {\n    if (\n      initialPartition &&\n      Number(topicData.numPartitions + 1) > initialPartition\n    ) {\n      setPartitionsValidated('warning');\n      setWarning(true);\n    } else {\n      setPartitionsValidated('default');\n      setWarning(false);\n    }\n  };\n  const handleTouchSpinPlusCamelCase = (event) => {\n    const { name } = event.currentTarget;\n    const fieldName = kebabToCamel(name);\n    setTopicData({\n      ...topicData,\n      [fieldName]: Number(topicData[fieldName]) + 1,\n    });\n    if (!isCreate) {\n      partitionsWarnigCheckPlus();\n    }\n  };\n  const partitionsWarningCheckMinus = () => {\n    if (\n      initialPartition &&\n      Number(topicData.numPartitions + -1) > initialPartition\n    ) {\n      setPartitionsValidated('warning');\n      setWarning(true);\n    } else {\n      setPartitionsValidated('default');\n      setWarning(false);\n    }\n  };\n\n  const handleTouchSpinMinusCamelCase = (event) => {\n    const { name } = event.currentTarget;\n    const fieldName = kebabToCamel(name);\n    setTopicData({\n      ...topicData,\n      [fieldName]: Number(topicData[fieldName]) - 1,\n    });\n    if (!isCreate) {\n      partitionsWarningCheckMinus();\n    }\n  };\n\n  const handleTouchSpinInputChange = (\n    event: React.FormEvent<HTMLInputElement>\n  ) => {\n    const { name, value } = event.currentTarget;\n\n    if (name === 'custom-retention-time') {\n      setCustomRetentionTime(Number(value));\n      isCustomRetentionTimeSelected &&\n        setTopicData({\n          ...topicData,\n          'retention.ms': value,\n        });\n    } else if (name === 'custom-retention-size') {\n      setCustomRetentionSize(Number(value));\n      isCustomRetentionSizeSelected &&\n        setTopicData({\n          ...topicData,\n          'retention.bytes': value,\n        });\n    }\n  };\n\n  const handleTouchSpinPlus = (event) => {\n    const { name } = event.currentTarget;\n    if (name === 'custom-retention-time') {\n      const updatedRetentionTime = customRetentionTime + 1;\n      setCustomRetentionTime(updatedRetentionTime);\n      isCustomRetentionTimeSelected &&\n        setTopicData({\n          ...topicData,\n          'retention.ms': updatedRetentionTime.toString(),\n        });\n    } else if (name === 'custom-retention-size') {\n      const updatedRetentionSize = customRetentionSize + 1;\n      setCustomRetentionSize(updatedRetentionSize);\n      isCustomRetentionSizeSelected &&\n        setTopicData({\n          ...topicData,\n          'retention.bytes': updatedRetentionSize.toString(),\n        });\n    }\n  };\n\n  const handleTouchSpinMinus = (event) => {\n    const { name } = event.currentTarget;\n    if (name === 'custom-retention-time') {\n      const updatedRetentionTime = customRetentionTime - 1;\n      setCustomRetentionTime(updatedRetentionTime);\n      isCustomRetentionTimeSelected &&\n        setTopicData({\n          ...topicData,\n          'retention.ms': updatedRetentionTime.toString(),\n        });\n    } else if (name === 'custom-retention-size') {\n      const updatedRetentionSize = customRetentionSize - 1;\n      setCustomRetentionSize(updatedRetentionSize);\n      isCustomRetentionSizeSelected &&\n        setTopicData({\n          ...topicData,\n          'retention.bytes': updatedRetentionSize.toString(),\n        });\n    }\n  };\n\n  const onDropdownChangeDotSeparated = (value: string, event) => {\n    const { name: fieldName } = event.target;\n    setTopicData({ ...topicData, [kebabToDotSeparated(fieldName)]: value });\n  };\n  const onConfirm = () => {\n    if (warning) setIsWarningOpen(true);\n    else saveTopic();\n  };\n  const onSaveClick = () => {\n    setIsWarningOpen(false);\n    saveTopic();\n  };\n\n  const handleRadioChange = (_, event) => {\n    const { name } = event.target;\n\n    switch (name) {\n    case 'custom-retention-time':\n      setIsCustomRetentionTimeSelected(true);\n      setTopicData({\n        ...topicData,\n        'retention.ms': customRetentionTime.toString(),\n        'retention.ms.unit': customRetentionTimeUnit,\n      });\n      break;\n    case 'unlimited-retention-time':\n      setIsCustomRetentionTimeSelected(false);\n      setTopicData({\n        ...topicData,\n        'retention.ms': '-1',\n        'retention.ms.unit': 'milliseconds',\n      });\n      break;\n    case 'custom-retention-size':\n      setIsCustomRetentionSizeSelected(true);\n      setTopicData({\n        ...topicData,\n        'retention.bytes': customRetentionSize.toString(),\n        'retention.bytes.unit': customRetentionSizeUnit,\n      });\n      break;\n    case 'unlimited-retention-size':\n      setIsCustomRetentionSizeSelected(false);\n      setTopicData({\n        ...topicData,\n        'retention.bytes': '-1',\n        'retention.bytes.unit': 'bytes',\n      });\n      break;\n    }\n  };\n\n  const retentionTimeInput = (\n    <SizeTimeFormGroup\n      inputName='custom-retention-time'\n      onChange={handleTouchSpinInputChange}\n      onPlus={handleTouchSpinPlus}\n      onMinus={handleTouchSpinMinus}\n      value={customRetentionTime}\n      plusBtnProps={{ name: 'custom-retention-time' }}\n      minusBtnProps={{ name: 'custom-retention-time' }}\n      id='core-config-retention-time-unit'\n      toggleId='core-config-retention-dropdowntoggle'\n      name='custom-retention-time-unit'\n      dropdownValue={customRetentionTimeUnit}\n      ariaLabel={t('common.select_unit')}\n      onSelectOption={onDropdownChange}\n      min={0}\n      type='time'\n    />\n  );\n\n  const retentionSizeInput = (\n    <SizeTimeFormGroup\n      inputName='custom-retention-size'\n      onChange={handleTouchSpinInputChange}\n      onPlus={handleTouchSpinPlus}\n      onMinus={handleTouchSpinMinus}\n      value={customRetentionSize}\n      plusBtnProps={{ name: 'custom-retention-size' }}\n      minusBtnProps={{ name: 'custom-retention-size' }}\n      id='core-config-retention-size-unit'\n      toggleId='core-config-retention-size-dropdowntoggle'\n      name='custom-retention-size-unit'\n      dropdownValue={customRetentionSizeUnit}\n      ariaLabel={t('common.select_unit')}\n      onSelectOption={onDropdownChange}\n      min={0}\n      type='memory'\n    />\n  );\n\n  return (\n    <>\n      <Sidebar hasGutter>\n        <SidebarPanel variant='sticky'>\n          <JumpLinks\n            isVertical\n            label={t('topic.jump_to_section')}\n            scrollableSelector='#scrollablePageMain'\n            style={{ position: 'sticky' }}\n            offset={-164} // for header\n            expandable={{ default: 'expandable', md: 'nonExpandable' }}\n            isExpanded={false}\n          >\n            <JumpLinksItem key={0} href='#core-configuration'>\n              {t('topic.core_configuration')}\n            </JumpLinksItem>\n            <JumpLinksItem key={1} href='#messages'>\n              {t('topic.messages')}\n            </JumpLinksItem>\n            <JumpLinksItem key={2} href='#log'>\n              {t('topic.log')}\n            </JumpLinksItem>\n            <JumpLinksItem key={3} href='#replication'>\n              {t('topic.replication')}\n            </JumpLinksItem>\n            <JumpLinksItem key={4} href='#cleanup'>\n              {t('common.cleanup')}\n            </JumpLinksItem>\n            <JumpLinksItem key={5} href='#index'>\n              {t('topic.index')}\n            </JumpLinksItem>\n            <JumpLinksItem key={6} href='#flush'>\n              {t('topic.flush')}\n            </JumpLinksItem>\n          </JumpLinks>\n        </SidebarPanel>\n        <SidebarContent>\n          <Stack hasGutter>\n            <StackItem>\n              <TextContent>\n                <Text\n                  component={TextVariants.h2}\n                  tabIndex={-1}\n                  id='core-configuration'\n                >\n                  {t('topic.core_configuration')}\n                </Text>\n                <Text component={TextVariants.p} className='section-info'>\n                  {t('topic.core_config_info')}\n                </Text>\n              </TextContent>\n              <Form>\n                {isCreate ? (\n                  <FormGroupWithPopover\n                    labelHead={t('topic.topic_name')}\n                    fieldId='create-topic-name'\n                    fieldLabel={t('topic.topic_name')}\n                    labelBody={t('topic.topic_name_description')}\n                    buttonAriaLabel='More info for topic name field'\n                    helperTextInvalid={invalidText}\n                    validated={topicValidated}\n                  >\n                    <TextInput\n                      isRequired\n                      type='text'\n                      id='create-topic-name'\n                      name='name'\n                      value={topicData.name}\n                      onChange={handleTextInputChange}\n                      label={t('topic.topic_name')}\n                      placeholder={t('topic.enter_name')}\n                      validated={topicValidated}\n                    />\n                  </FormGroupWithPopover>\n                ) : (\n                  <TextWithLabelPopover\n                    btnAriaLabel='topic detail name'\n                    fieldLabel='Name'\n                    fieldValue={topicData.name}\n                    popoverBody={t('topic.topic_name_description')}\n                    popoverHeader={t('topic.topic_name')}\n                  />\n                )}\n                {isCreate ? (\n                  <FormGroupWithPopover\n                    fieldId='create-topic-partitions'\n                    fieldLabel='Partitions'\n                    labelHead={t('topic.partitions')}\n                    labelBody={t('topic.partitions_description')}\n                    buttonAriaLabel='More info for partitions field'\n                    validated={partitionsValidated}\n                    helperText={\n                      warning\n                        ? `Increasing a topic's partitions might result in messages having the same key from two different partitions, which can potentially break the message ordering guarantees that apply to a single partition`\n                        : undefined\n                    }\n                  >\n                    <NumberInput\n                      id='create-topic-partitions'\n                      inputName='num-partitions'\n                      onChange={onPartitionsChange}\n                      onPlus={handleTouchSpinPlusCamelCase}\n                      onMinus={handleTouchSpinMinusCamelCase}\n                      value={Number(topicData.numPartitions)}\n                      plusBtnProps={{ name: 'num-partitions' }}\n                      minusBtnProps={{ name: 'num-partitions' }}\n                      min={1}\n                    />\n                  </FormGroupWithPopover>\n                ) : (\n                  <TextWithLabelPopover\n                    btnAriaLabel='More info for partitions field'\n                    fieldLabel='Partitions'\n                    fieldValue={topicData.numPartitions}\n                    popoverBody={t('topic.partitions_description')}\n                    popoverHeader={t('topic.partitions')}\n                  />\n                )}\n                <TextWithLabelPopover\n                  btnAriaLabel={t('topic.replicas')}\n                  fieldLabel={t('topic.replicas')}\n                  fieldValue={DEFAULT_REPLICAS}\n                  popoverBody={t('topic.replicas_description')}\n                  popoverHeader={t('topic.replicas')}\n                />\n                <TextWithLabelPopover\n                  btnAriaLabel='topic detail min-in-sync replica'\n                  fieldLabel='Minimum in-sync replicas'\n                  fieldValue={DEFAULT_MIN_INSYNC_REPLICAS}\n                  popoverBody={t('topic.min_insync_replicas_description')}\n                  popoverHeader={t('topic.min_insync_replicas')}\n                />\n                <FormGroupWithPopover\n                  fieldId='retention'\n                  fieldLabel='Retention time'\n                  labelHead={t('topic.retention_time')}\n                  labelBody={t('topic.retention_time_description')}\n                  buttonAriaLabel='More info for retention time field'\n                >\n                  <Stack hasGutter>\n                    <Radio\n                      isChecked={isCustomRetentionTimeSelected}\n                      name='custom-retention-time'\n                      onChange={handleRadioChange}\n                      label={retentionTimeInput}\n                      className='kafka-ui--radio-label__number-input'\n                      aria-label='custom duration'\n                      id='custom-retention-time'\n                      value='custom'\n                    />\n                    <Radio\n                      isChecked={!isCustomRetentionTimeSelected}\n                      name='unlimited-retention-time'\n                      onChange={handleRadioChange}\n                      label='Unlimited'\n                      aria-label='Unlimited'\n                      id='unlimited-retention-time'\n                      value='unlimited'\n                    />\n                  </Stack>\n                </FormGroupWithPopover>\n                <FormGroupWithPopover\n                  fieldId='retention-size'\n                  fieldLabel='Retention size'\n                  labelHead={t('topic.retention_size')}\n                  labelBody={t('topic.retention_size_description')}\n                  buttonAriaLabel='More info for retention size field'\n                >\n                  <Stack hasGutter>\n                    <Radio\n                      isChecked={isCustomRetentionSizeSelected}\n                      name='custom-retention-size'\n                      onChange={handleRadioChange}\n                      label={retentionSizeInput}\n                      className='kafka-ui--radio-label__number-input'\n                      aria-label='custom size'\n                      id='custom-retention-size'\n                      value='custom'\n                    />\n                    <Radio\n                      isChecked={!isCustomRetentionSizeSelected}\n                      name='unlimited-retention-size'\n                      onChange={handleRadioChange}\n                      label='Unlimited'\n                      aria-label='Unlimited'\n                      id='unlimited-retention-size'\n                      value='unlimited'\n                    />\n                  </Stack>\n                </FormGroupWithPopover>\n              </Form>\n            </StackItem>\n            <StackItem>\n              <TextContent className='section-margin'>\n                <Text component={TextVariants.h2} tabIndex={-1} id='messages'>\n                  {t('topic.messages')}\n                </Text>\n                <Text component={TextVariants.p} className='section-info'>\n                  {t('topic.message_section_info')}\n                </Text>\n              </TextContent>\n\n              <TextWithLabelPopover\n                btnAriaLabel={t('topic.max_message_size')}\n                fieldLabel={t('topic.max_message_size')}\n                fieldValue={DEFAULT_MAXIMUM_MESSAGE_BYTES}\n                popoverBody={t('topic.max_message_size_description')}\n                popoverHeader={t('topic.max_message_size')}\n              />\n\n              <TextWithLabelPopover\n                btnAriaLabel={t('topic.message_timestamp_type')}\n                fieldLabel={t('topic.message_timestamp_type')}\n                fieldValue={DEFAULT_MESSAGE_TIMESTAMP_TYPE}\n                popoverBody={t('topic.message_timestamp_type_description')}\n                popoverHeader={t('topic.message_timestamp_type')}\n              />\n\n              <TextWithLabelPopover\n                btnAriaLabel={t('topic.max_message_timestamp_diff')}\n                fieldLabel={t('topic.max_message_timestamp_diff')}\n                fieldValue={DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF}\n                popoverBody={t('topic.max_message_timestamp_diff_description')}\n                popoverHeader={t('topic.max_message_timestamp_diff')}\n              />\n\n              <TextWithLabelPopover\n                btnAriaLabel={t('topic.compression_type')}\n                fieldLabel={t('topic.compression_type')}\n                fieldValue={'Producer'}\n                popoverBody={t('topic.compression_type_description')}\n                popoverHeader={t('topic.compression_type')}\n              />\n\n              <TextWithLabelPopover\n                btnAriaLabel={t('topic.message_format')}\n                fieldLabel={t('topic.message_format')}\n                fieldValue={'2.7-IV2'}\n                popoverBody={t('topic.message_format_description')}\n                popoverHeader={t('topic.message_format')}\n              />\n            </StackItem>\n\n            <StackItem>\n              <TextContent className='section-margin'>\n                <Text component={TextVariants.h2} tabIndex={-1} id='log'>\n                  {t('topic.log')}\n                </Text>\n                <Text component={TextVariants.p} className='section-info-head'>\n                  {t('topic.log_section_info')}\n                </Text>\n                <Text\n                  component={TextVariants.small}\n                  className='section-info-note'\n                >\n                  {t('topic.log_section_info_note')}\n                </Text>\n              </TextContent>\n\n              <FormGroupWithPopover\n                fieldId='cleanup-policy'\n                fieldLabel={t('topic.cleanup_policy')}\n                labelHead={t('topic.cleanup_policy')}\n                labelBody={t('topic.cleanup_policy_description')}\n                buttonAriaLabel={t('topic.cleanup_policy')}\n              >\n                <DropdownWithToggle\n                  id='log-section-policy-type-dropdown'\n                  toggleId='log-section-policy-type-dropdowntoggle'\n                  ariaLabel={t('common.select_policy')}\n                  onSelectOption={onDropdownChangeDotSeparated}\n                  items={clearOptions}\n                  name='cleanup-policy'\n                  value={topicData['cleanup.policy'] || ''}\n                />\n              </FormGroupWithPopover>\n\n              <TextWithLabelPopover\n                btnAriaLabel={t('topic.delete_retention_time')}\n                fieldLabel={t('topic.delete_retention_time')}\n                fieldValue={DEFAULT_DELETE_RETENTION_TIME}\n                popoverBody={t('topic.delete_retention_time_description')}\n                popoverHeader={t('topic.delete_retention_time')}\n              />\n\n              <TextWithLabelPopover\n                btnAriaLabel={t('topic.min_cleanable_ratio')}\n                fieldLabel={t('topic.min_cleanable_ratio')}\n                fieldValue={DEFAULT_MIN_CLEANBLE_RATIO}\n                popoverBody={t('topic.min_cleanable_ratio_description')}\n                popoverHeader={t('topic.min_cleanable_ratio')}\n              />\n\n              <TextWithLabelPopover\n                btnAriaLabel={t('topic.min_compaction_lag_time')}\n                fieldLabel={t('topic.min_compaction_lag_time')}\n                fieldValue={DEFAULT_MINIMUM_COMPACTION_LAG_TIME}\n                popoverBody={t('topic.min_compaction_lag_time_description')}\n                popoverHeader={t('topic.min_compaction_lag_time')}\n              />\n            </StackItem>\n\n            <StackItem>\n              <TextContent className='section-margin'>\n                <Text\n                  component={TextVariants.h2}\n                  tabIndex={-1}\n                  id='replication'\n                >\n                  {t('topic.replication')}\n                </Text>\n                <Text component={TextVariants.p} className='section-info-head'>\n                  {t('topic.replication_section_info')}\n                </Text>\n                <Text\n                  component={TextVariants.small}\n                  className='section-info-note'\n                >\n                  {t('topic.replication_section_info_note')}\n                </Text>\n              </TextContent>\n\n              <TextWithLabelPopover\n                btnAriaLabel={t('topic.unclean_leader_election')}\n                fieldLabel={t('topic.unclean_leader_election')}\n                fieldValue={t('common.disabled')}\n                popoverBody={t('topic.unclean_leader_election_description')}\n                popoverHeader={t('topic.unclean_leader_election')}\n              />\n            </StackItem>\n\n            <StackItem>\n              <TextContent className='section-margin'>\n                <Text component={TextVariants.h2} tabIndex={-1} id='cleanup'>\n                  {t('common.cleanup')}\n                </Text>\n                <Text component={TextVariants.p} className='section-info'>\n                  {t('topic.cleanup_section_info')}\n                </Text>\n              </TextContent>\n\n              <TextWithLabelPopover\n                btnAriaLabel={t('topic.log_segment_size')}\n                fieldLabel={t('topic.log_segment_size')}\n                fieldValue={DEFAULT_LOG_SEGMENT_SIZE}\n                popoverBody={t('topic.log_segment_size')}\n                popoverHeader={t('topic.log_segment_size_description')}\n              />\n\n              <TextWithLabelPopover\n                btnAriaLabel={t('topic.segement_time')}\n                fieldLabel={t('topic.segement_time')}\n                fieldValue={DEFAULT_SEGMENT_TIME}\n                popoverBody={t('topic.segement_time_description')}\n                popoverHeader={t('topic.segement_time')}\n              />\n\n              <TextWithLabelPopover\n                btnAriaLabel={t('topic.segment_jitter_time')}\n                fieldLabel={t('topic.segment_jitter_time')}\n                fieldValue={DEFAULT_SEGMENT_JITTER_TIME}\n                popoverBody={t('topic.segment_jitter_time_description')}\n                popoverHeader={t('topic.segment_jitter_time')}\n              />\n\n              <TextWithLabelPopover\n                btnAriaLabel={t('topic.file_delete_delay')}\n                fieldLabel={t('topic.file_delete_delay')}\n                fieldValue={DEFAULT_FILE_DELETE_DELAY}\n                popoverBody={t('topic.file_delete_delay_description')}\n                popoverHeader={t('topic.file_delete_delay')}\n              />\n\n              <TextWithLabelPopover\n                btnAriaLabel={t('topic.preallocate_log_segment_files')}\n                fieldLabel={t('topic.preallocate_log_segment_files')}\n                fieldValue={t('common.disabled')}\n                popoverBody={t(\n                  'topic.preallocate_log_segment_files_description'\n                )}\n                popoverHeader={t('topic.preallocate_log_segment_files')}\n              />\n            </StackItem>\n\n            <StackItem>\n              <TextContent className='section-margin'>\n                <Text component={TextVariants.h2} tabIndex={-1} id='index'>\n                  {t('topic.index')}\n                </Text>\n                <Text component={TextVariants.p} className='section-info'>\n                  {t('topic.index_section_info')}\n                </Text>\n              </TextContent>\n\n              <TextWithLabelPopover\n                btnAriaLabel={t('topic.index_interval_size')}\n                fieldLabel={t('topic.index_interval_size')}\n                fieldValue={DEFAULT_INDEX_INTERVAL_SIZE}\n                popoverBody={t('topic.index_interval_size_description')}\n                popoverHeader={t('topic.index_interval_size')}\n              />\n\n              <TextWithLabelPopover\n                btnAriaLabel={t('topic.segment_index_size')}\n                fieldLabel={t('topic.segment_index_size')}\n                fieldValue={DEFAULT_SEGMENT_INDEX_SIZE}\n                popoverBody={t('topic.segment_index_size_description')}\n                popoverHeader={t('topic.segment_index_size')}\n              />\n            </StackItem>\n\n            <StackItem>\n              <TextContent className='section-margin'>\n                <Text component={TextVariants.h2} tabIndex={-1} id='flush'>\n                  {t('topic.flush')}\n                </Text>\n                <Text component={TextVariants.p} className='section-info'>\n                  {t('topic.flush_section_info')}\n                </Text>\n              </TextContent>\n\n              <TextWithLabelPopover\n                btnAriaLabel={t('topic.flush_interval_messages')}\n                fieldLabel={t('topic.flush_interval_messages')}\n                fieldValue={DEFAULT_FLUSH_INTERVAL_MESSAGES}\n                popoverBody={t('topic.flush_interval_messages_description')}\n                popoverHeader={t('topic.flush_interval_messages')}\n              />\n\n              <TextWithLabelPopover\n                btnAriaLabel={t('topic.flush_interval_time')}\n                fieldLabel={t('topic.flush_interval_time')}\n                fieldValue={DEFAULT_FLUSH_INTERVAL_TIME}\n                popoverBody={t('topic.flush_interval_time_description')}\n                popoverHeader={t('topic.flush_interval_time')}\n              />\n            </StackItem>\n          </Stack>\n          <ActionGroup className='kafka-ui--sticky-footer'>\n            <Button\n              onClick={onConfirm}\n              variant='primary'\n              data-testid={\n                isCreate\n                  ? 'topicAdvanceCreate-actionCreate'\n                  : 'tabProperties-actionSave'\n              }\n              isDisabled={\n                topicData.name.length > 0 && topicValidated == 'default'\n                  ? false\n                  : true\n              }\n            >\n              {actionText}\n            </Button>\n            <Button\n              onClick={handleCancel}\n              variant='link'\n              data-testid={\n                isCreate\n                  ? 'topicAdvanceCreate-actionCancel'\n                  : 'tabProperties-actionCancel'\n              }\n            >\n              {t('common.cancel')}\n            </Button>\n          </ActionGroup>\n          {isWarningOpen && (\n            <PartitionsChangeModal\n              isWarningOpen={isWarningOpen}\n              onSaveClick={onSaveClick}\n              setIsWarningOpen={setIsWarningOpen}\n            />\n          )}\n        </SidebarContent>\n      </Sidebar>\n    </>\n  );\n};\n"],"sourceRoot":""}