{"version":3,"file":"1087.7cd85afa.js","mappings":"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","sources":["webpack://kafka-ui/./node_modules/@patternfly/react-styles/dist/esm/index.js","webpack://kafka-ui/./src/components/MASLoading/MASLoading.tsx","webpack://kafka-ui/./src/components/MASTable/CustomRowWrapper.tsx","webpack://kafka-ui/./src/components/MASTable/MASTable.tsx","webpack://kafka-ui/./src/components/MASToolbar/MASToolbar.tsx","webpack://kafka-ui/./src/components/MainViewHeader/MainViewHeader.tsx","webpack://kafka-ui/./src/contexts/federated.ts","webpack://kafka-ui/./src/modules/Topics/components/TopicsTable/TopicsToolbar.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicsTable/TopicsTable.tsx","webpack://kafka-ui/./src/modules/Topics/Topics.tsx","webpack://kafka-ui/./src/modules/Topics/TopicsFederated.tsx","webpack://kafka-ui/./src/modules/Topics/utils/utils.ts","webpack://kafka-ui/./src/services/topics.ts","webpack://kafka-ui/./src/utils/axios.ts"],"sourcesContent":["/** Joins args into a className string\n *\n * @param {any} args list of objects, string, or arrays to reduce\n */\nexport function css(...args) {\n    // Adapted from https://github.com/JedWatson/classnames/blob/master/index.js\n    const classes = [];\n    const hasOwn = {}.hasOwnProperty;\n    args.filter(Boolean).forEach((arg) => {\n        const argType = typeof arg;\n        if (argType === 'string' || argType === 'number') {\n            classes.push(arg);\n        }\n        else if (Array.isArray(arg) && arg.length) {\n            const inner = css(...arg);\n            if (inner) {\n                classes.push(inner);\n            }\n        }\n        else if (argType === 'object') {\n            for (const key in arg) {\n                if (hasOwn.call(arg, key) && arg[key]) {\n                    classes.push(key);\n                }\n            }\n        }\n    });\n    return classes.join(' ');\n}\n//# sourceMappingURL=index.js.map","import React from 'react';\nimport {\n  Bullseye,\n  BullseyeProps,\n  Spinner,\n  SpinnerProps,\n} from '@patternfly/react-core';\n\nexport type MASLoadingProps = {\n  bullseyeProps?: Omit<BullseyeProps, 'children'>;\n  spinnerProps?: SpinnerProps;\n};\n\nexport const MASLoading: React.FunctionComponent<MASLoadingProps> = ({\n  bullseyeProps,\n  spinnerProps,\n}: MASLoadingProps) => (\n  <Bullseye {...bullseyeProps}>\n    <Spinner {...spinnerProps} />\n  </Bullseye>\n);\n","import React, { createContext, useContext } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport './CustomRowWrapper.css';\nimport { IRowData, RowWrapperProps } from '@patternfly/react-table';\n\nexport type CustomRowWrapperContextProps = {\n  activeRow?: string;\n  onRowClick?: (\n    event: React.MouseEvent<HTMLTableRowElement, MouseEvent>,\n    rowIndex?: number,\n    row?: IRowData\n  ) => void;\n  rowDataTestId?: string;\n  loggedInUser?: string;\n};\n\nconst CustomRowWrapperContext = createContext<CustomRowWrapperContextProps>({\n  activeRow: '',\n  onRowClick: () => '',\n  loggedInUser: '',\n});\n\nexport const CustomRowWrapperProvider = CustomRowWrapperContext.Provider;\n\nexport const CustomRowWrapper = (\n  rowWrapperProps: RowWrapperProps\n): JSX.Element => {\n  const { activeRow, onRowClick, rowDataTestId } = useContext(\n    CustomRowWrapperContext\n  );\n  const { trRef, className, rowProps, row, ...props } = rowWrapperProps || {};\n  const { rowIndex } = rowProps || {};\n  const { isExpanded, originalData } = row || {};\n\n  return (\n    <tr\n      data-testid={rowDataTestId}\n      tabIndex={0}\n      ref={typeof trRef === 'function' ? undefined : trRef}\n      className={css(\n        className,\n        'pf-c-table-row__item',\n        activeRow &&\n          activeRow === originalData?.rowId &&\n          'pf-m-selected pf-m-selectable'\n      )}\n      hidden={isExpanded !== undefined && !isExpanded}\n      onClick={(event) => onRowClick && onRowClick(event, rowIndex, row)}\n      {...props}\n    />\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport {\n  TableHeader,\n  Table as PFTable,\n  TableBody,\n  TableProps as PFTableProps,\n  HeaderProps,\n  TableBodyProps,\n} from '@patternfly/react-table';\nimport { css } from '@patternfly/react-styles';\nimport {\n  CustomRowWrapper,\n  CustomRowWrapperProvider,\n  CustomRowWrapperContextProps,\n} from './CustomRowWrapper';\n\nexport type MASTableProps = CustomRowWrapperContextProps & {\n  tableProps: Omit<PFTableProps, 'children'> & {\n    shouldDefaultCustomRowWrapper?: boolean;\n  };\n  tableHeaderProps?: Omit<HeaderProps, 'children'>;\n  tableBodyProps?: Omit<TableBodyProps, 'children'>;\n  children?: React.ReactNode;\n};\n\nconst MASTable: FunctionComponent<MASTableProps> = ({\n  tableProps,\n  tableHeaderProps,\n  tableBodyProps,\n  children,\n  activeRow,\n  onRowClick,\n  rowDataTestId,\n  loggedInUser,\n}) => {\n  const {\n    cells,\n    rows,\n    actionResolver,\n    onSort,\n    sortBy,\n    'aria-label': ariaLabel,\n    variant,\n    className,\n    shouldDefaultCustomRowWrapper = false,\n    ...restProps\n  } = tableProps;\n\n  /**\n   * Handle CustomRowWrapper\n   */\n  if (shouldDefaultCustomRowWrapper) {\n    restProps['rowWrapper'] = CustomRowWrapper;\n  }\n\n  return (\n    <CustomRowWrapperProvider\n      value={{\n        activeRow,\n        onRowClick,\n        rowDataTestId,\n        loggedInUser,\n      }}\n    >\n      <PFTable\n        className={css(\n          shouldDefaultCustomRowWrapper && 'mas--table-view__table',\n          className\n        )}\n        cells={cells}\n        variant={variant}\n        rows={rows}\n        aria-label={ariaLabel}\n        actionResolver={actionResolver}\n        onSort={onSort}\n        sortBy={sortBy}\n        {...restProps}\n      >\n        <TableHeader {...tableHeaderProps} />\n        <TableBody {...tableBodyProps} />\n        {children}\n      </PFTable>\n    </CustomRowWrapperProvider>\n  );\n};\n\nexport { MASTable };\n","import React from 'react';\nimport {\n  ToolbarContent,\n  Toolbar,\n  ToolbarProps,\n  ToolbarItemProps as PFToolbarItemProps,\n  ToolbarToggleGroup,\n  ToolbarItem,\n  ToolbarToggleGroupProps,\n} from '@patternfly/react-core';\n\nexport type ToolbarItemProps = Omit<PFToolbarItemProps, 'children'> & {\n  item: React.ReactElement;\n};\nexport type MASToolbarProps = {\n  toolbarProps: Omit<ToolbarProps, 'children' | 'ref'>;\n  toggleGroupProps?: Omit<ToolbarToggleGroupProps, 'children'>;\n  toggleGroupItems?: React.ReactNode;\n  toolbarItems?: ToolbarItemProps[];\n};\n\nconst MASToolbar: React.FunctionComponent<MASToolbarProps> = ({\n  toolbarProps,\n  toggleGroupProps,\n  toolbarItems,\n  toggleGroupItems,\n}) => {\n  const {\n    id,\n    clearAllFilters,\n    collapseListedFiltersBreakpoint = 'md',\n    inset,\n    ...restToolbarProps\n  } = toolbarProps;\n\n  return (\n    <>\n      <Toolbar\n        id={id}\n        clearAllFilters={clearAllFilters}\n        inset={inset}\n        collapseListedFiltersBreakpoint={collapseListedFiltersBreakpoint}\n        {...restToolbarProps}\n      >\n        <ToolbarContent>\n          {toggleGroupProps && (\n            <ToolbarToggleGroup\n              {...toggleGroupProps}\n              toggleIcon={toggleGroupProps.toggleIcon}\n            >\n              {toggleGroupItems}\n            </ToolbarToggleGroup>\n          )}\n          {toolbarItems?.map((toolbarItem, index) => {\n            const {\n              key = 'mas',\n              variant,\n              className,\n              id,\n              alignment,\n              item,\n              ...restItemProps\n            } = toolbarItem;\n            return (\n              <ToolbarItem\n                key={`${key}-${index}`}\n                variant={variant}\n                className={className}\n                id={id}\n                alignment={alignment}\n                {...restItemProps}\n              >\n                {item}\n              </ToolbarItem>\n            );\n          })}\n        </ToolbarContent>\n      </Toolbar>\n    </>\n  );\n};\n\nexport { MASToolbar };\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  Level,\n  PageSection,\n  PageSectionVariants,\n  Tab,\n  Tabs,\n  TabTitleText,\n  Title,\n} from '@patternfly/react-core';\nimport { useFederated } from '@app/contexts';\n\nexport type MainViewHeaderProps = {\n  activeTabKey: number;\n};\n\nconst MainViewHeader: React.FC<MainViewHeaderProps> = ({ activeTabKey }) => {\n  const { t } = useTranslation();\n  const history = useHistory();\n\n  const { kafkaPageLink, kafkaName, handleInstanceDrawer, onDeleteInstance } =\n    useFederated() || {};\n\n  const [isOpen, setIsOpen] = useState<boolean>();\n\n  const onSelect = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const onSelectKebabOption = (activeTab: string) => {\n    handleInstanceDrawer && handleInstanceDrawer(true, activeTab);\n  };\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelectTab = (_, tabKey: string | number) => {\n    let redirectPath;\n    switch (tabKey) {\n      case 1:\n        redirectPath = 'dashboard';\n        break;\n      case 2:\n        redirectPath = 'topics';\n        break;\n      case 3:\n        redirectPath = 'consumer-groups';\n        break;\n      case 4:\n        redirectPath = 'acls';\n        break;\n      default:\n        redirectPath = 'dashboard';\n        break;\n    }\n\n    history.push(redirectPath);\n  };\n\n  const mainBreadcrumbs = (\n    <Breadcrumb>\n      <BreadcrumbItem to={kafkaPageLink || '#'}>\n        {t('common.kafka_instance')}\n      </BreadcrumbItem>\n      <BreadcrumbItem to='#' isActive>\n        {kafkaName || t('common.kafka_instance_name')}\n      </BreadcrumbItem>\n    </Breadcrumb>\n  );\n\n  const dropdownItems = [\n    <DropdownItem\n      key='view-kafka'\n      onClick={() => onSelectKebabOption('details')}\n    >\n      {t('common.view_instance')}\n    </DropdownItem>,\n    <DropdownItem\n      key='connect-kafka'\n      onClick={() => onSelectKebabOption('connection')}\n    >\n      {t('common.view_connection')}\n    </DropdownItem>,\n    <DropdownItem key='delete-kafka' onClick={onDeleteInstance}>\n      {t('common.delete_instance')}\n    </DropdownItem>,\n  ];\n\n  return (\n    <>\n      <section className='pf-c-page__main-breadcrumb'>\n        {mainBreadcrumbs}\n      </section>\n      <PageSection variant={PageSectionVariants.light}>\n        <Level>\n          <Title headingLevel='h1'>\n            {kafkaName ? kafkaName : t('common.kafka_instance_name')}\n          </Title>\n          <Dropdown\n            onSelect={onSelect}\n            toggle={<KebabToggle onToggle={onToggle} id='toggle-data-plane' />}\n            isOpen={isOpen}\n            isPlain\n            dropdownItems={dropdownItems}\n            position={DropdownPosition.right}\n          />\n        </Level>\n      </PageSection>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: 'noPadding' }}\n        className='pf-c-page__main-tabs'\n      >\n        <Tabs\n          activeKey={activeTabKey}\n          onSelect={onSelectTab}\n          data-testid='pageKafka-tabProperties'\n          className='pf-m-page-insets'\n        >\n          <Tab\n            title={<TabTitleText>{t('dashboard.dashboard')}</TabTitleText>}\n            eventKey={1}\n            data-testid='pageKafka-tabDashboard'\n            id='dashboard-tab-section'\n            aria-label={t('dashboard.dashboard')}\n            tabContentId='kafka-ui-TabcontentDashboard'\n          />\n          <Tab\n            title={<TabTitleText>{t('topic.topics')}</TabTitleText>}\n            eventKey={2}\n            data-testid='pageKafka-tabTopics'\n            id='topics-tab-section'\n            aria-label={t('topic.topics')}\n            tabContentId='kafka-ui-TabcontentTopicsList'\n          />\n          <Tab\n            title={\n              <TabTitleText>{t('consumerGroup.consumer_groups')}</TabTitleText>\n            }\n            eventKey={3}\n            data-testid='pageKafka-tabConsumers'\n            id='consumer-groups-tab-section'\n            aria-label={t('consumerGroup.consumer_groups')}\n            tabContentId='kafka-ui-TabcontentConsumersList'\n          />\n          <Tab\n            title={<TabTitleText>{t('permission.tab.label')}</TabTitleText>}\n            eventKey={4}\n            data-testid='pageKafka-tabPermissions'\n            id='permissions-tab-section'\n            aria-label={t('permission.tab.label')}\n            tabContentId='kafka-ui-TabcontentPermissions'\n          />\n        </Tabs>\n      </PageSection>\n    </>\n  );\n};\n\nexport { MainViewHeader };\n","import React, { useContext } from 'react';\nimport { DeleteInstanceProps } from '@rhoas/app-services-ui-shared';\n\nexport type FederatedProps = Pick<DeleteInstanceProps, 'kafka'> & {\n  activeTab?: number;\n  kafkaName?: string;\n  kafkaPageLink?: string;\n  kafkaInstanceLink?: string;\n  topicName?: string;\n  onError?: (errorCode: number, message?: string) => void;\n  handleInstanceDrawer?: (isOpen: boolean, activeTab?: string) => void;\n  setIsOpenDeleteInstanceModal?: (isOpenModal: boolean) => void;\n  showMetrics?: JSX.Element | undefined;\n  onClickCreateTopic?: () => void;\n  onEditTopic?: (topicName: string | undefined) => void;\n  onCancelUpdateTopic?: () => void;\n  updateTopic?: (topicName?: string | undefined) => void;\n  showSchemas?: JSX.Element | undefined;\n  redirectAfterDeleteInstance?: () => void;\n  onDeleteInstance?: () => void;\n};\n\nexport const FederatedContext = React.createContext<FederatedProps | undefined>(\n  undefined\n);\nexport const useFederated = (): FederatedProps | undefined =>\n  useContext(FederatedContext);\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button,\n  ButtonVariant,\n  InputGroup,\n  TextInput,\n  ToolbarFilter,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { MASToolbar, ToolbarItemProps, MASPagination } from '@app/components';\n\nexport type TopicsToolbarProps = {\n  total: number;\n  page: number;\n  perPage: number;\n  setFilteredValue: (value: string) => void;\n  filteredValue: string;\n  onCreateTopic?: () => void;\n};\n\nconst TopicsToolbar: React.FC<TopicsToolbarProps> = ({\n  total = 0,\n  page,\n  perPage,\n  setFilteredValue,\n  filteredValue = '',\n  onCreateTopic,\n}) => {\n  const { t } = useTranslation();\n  const [topicInputValue, setTopicInputValue] = useState<string>('');\n\n  const onClear = () => {\n    setFilteredValue('');\n  };\n\n  const onChangeInput = (value: string) => {\n    setTopicInputValue(value);\n  };\n\n  const onSearch = () => {\n    setFilteredValue(topicInputValue);\n    setTopicInputValue('');\n  };\n\n  const onDeleteChip = () => {\n    setFilteredValue('');\n  };\n\n  const toggleGroupItems = (\n    <>\n      <ToolbarFilter\n        chips={filteredValue ? [filteredValue] : []}\n        deleteChip={onDeleteChip}\n        categoryName={''}\n      >\n        <InputGroup>\n          <TextInput\n            name='searchName'\n            id='search-topics-input'\n            type='search'\n            aria-label={t('topic.topic_search_input')}\n            placeholder={t('common.search')}\n            value={topicInputValue}\n            onChange={onChangeInput}\n          />\n          <Button\n            variant={ButtonVariant.control}\n            isDisabled={topicInputValue.length ? false : true}\n            onClick={onSearch}\n            aria-label={t('topic.topic_search')}\n          >\n            <SearchIcon />\n          </Button>\n        </InputGroup>\n      </ToolbarFilter>\n    </>\n  );\n  const toolbarItems: ToolbarItemProps[] = [\n    {\n      item: (\n        <Button\n          id='topic-list-create-topic-button'\n          className='topics-per-page'\n          data-testid='actionCreateTopic'\n          onClick={onCreateTopic}\n        >\n          {t('topic.create_topic')}\n        </Button>\n      ),\n    },\n  ];\n\n  if (total > 0) {\n    toolbarItems.push({\n      item: (\n        <MASPagination\n          widgetId='consumer-group-pagination-options-menu-top'\n          itemCount={total}\n          page={page}\n          perPage={perPage}\n          titles={{\n            paginationTitle: t('common.minimal_pagination'),\n            perPageSuffix: t('common.per_page_suffix'),\n            toFirstPage: t('common.to_first_page'),\n            toPreviousPage: t('common.to_previous_page'),\n            toLastPage: t('common.to_last_page'),\n            toNextPage: t('common.to_next_page'),\n            optionsToggle: t('common.options_toggle'),\n            currPage: t('common.curr_page'),\n          }}\n        />\n      ),\n      variant: 'pagination',\n      alignment: { default: 'alignRight' },\n    });\n  }\n\n  return (\n    <MASToolbar\n      toolbarProps={{\n        id: 'instance-toolbar',\n        clearAllFilters: onClear,\n        collapseListedFiltersBreakpoint: 'md',\n        inset: { xl: 'insetLg' },\n      }}\n      toggleGroupProps={{ toggleIcon: '', breakpoint: 'md' }}\n      toggleGroupItems={toggleGroupItems}\n      toolbarItems={toolbarItems}\n    />\n  );\n};\n\nexport { TopicsToolbar };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { PaginationVariant } from '@patternfly/react-core';\nimport {\n  TableVariant,\n  sortable,\n  IRowData,\n  OnSort,\n  ISortBy,\n} from '@patternfly/react-table';\nimport { useBasename } from '@rhoas/app-services-ui-shared';\nimport {\n  MASTable,\n  MASPagination,\n  EmptyState,\n  MASEmptyStateVariant,\n} from '@app/components';\nimport { Topic } from '@rhoas/kafka-instance-sdk';\nimport { TopicsToolbar, TopicsToolbarProps } from './TopicsToolbar';\nimport { ModalType, useModal } from '@rhoas/app-services-ui-shared';\nimport {\n  formattedRetentionTime,\n  formattedRetentionSize,\n} from '@app/modules/Topics/utils';\n\nexport type TopicsTableProps = TopicsToolbarProps & {\n  topicItems: Topic[];\n  rowDataTestId?: string;\n  filteredValue: string;\n  onEdit?: (topicName?: string | undefined) => void;\n  onDeleteTopic?: () => void;\n  refreshTopics: () => void;\n  onSort: OnSort;\n  sortBy: ISortBy;\n};\n\nconst TopicsTable: React.FC<TopicsTableProps> = ({\n  total,\n  page,\n  perPage,\n  setFilteredValue,\n  filteredValue,\n  onCreateTopic,\n  topicItems,\n  rowDataTestId,\n  onEdit,\n  onDeleteTopic,\n  refreshTopics,\n  onSort,\n  sortBy,\n}) => {\n  const { t } = useTranslation();\n  const { showModal } = useModal<ModalType.KafkaDeleteTopic>();\n  const { getBasename } = useBasename() || { getBasename: () => '' };\n  const basename = getBasename();\n\n  const tableColumns = [\n    { title: t('common.name') },\n    { title: t('common.partitions'), transforms: [sortable] },\n    { title: t('topic.retention_time'), transforms: [sortable] },\n    { title: t('topic.retention_size'), transforms: [sortable] },\n  ];\n\n  const onDelete = (topicName: string) => {\n    showModal(ModalType.KafkaDeleteTopic, {\n      topicName,\n      onDeleteTopic,\n      refreshTopics,\n    });\n  };\n\n  const onSelectKebabDropdownOption = (\n    //event: React.MouseEvent<HTMLElement>,\n    originalData: Topic,\n    action: string\n  ) => {\n    const { name = '' } = originalData;\n    if (action === 'delete') {\n      onDelete(name);\n    } else if (action === 'edit') {\n      onEdit && onEdit(name);\n    }\n    // Set focus back on previous selected element i.e. kebab button\n    //event?.target?.parentElement?.parentElement?.previousSibling?.focus();\n  };\n\n  const actionResolver = (rowData: IRowData) => {\n    const originalData: Topic = rowData.originalData;\n    const resolver = [\n      {\n        title: t('common.delete'),\n        ['data-testid']: 'tableTopics-actionDelete',\n        onClick: () => onSelectKebabDropdownOption(originalData, 'delete'),\n      },\n      {\n        title: t('common.edit'),\n        ['data-testid']: 'tableTopics-actionEdit',\n        onClick: () => onSelectKebabDropdownOption(originalData, 'edit'),\n      },\n    ];\n    return resolver;\n  };\n\n  const preparedTableCells = () => {\n    const tableRow: (IRowData | string[])[] | undefined = [];\n    topicItems?.map((row: IRowData) => {\n      const { name, partitions, config } = row;\n      const retentionTimeValue =\n        config?.filter((element) => element.key === 'retention.ms')[0]?.value ||\n        0;\n\n      const retentionSizeValue =\n        config?.filter((element) => element.key === 'retention.bytes')[0]\n          ?.value || 0;\n\n      tableRow.push({\n        cells: [\n          {\n            title: (\n              <Link\n                data-testid='tableTopics-linkTopic'\n                to={`${basename}/topics/${name}`}\n              >\n                {name}\n              </Link>\n            ),\n          },\n          partitions?.length,\n          formattedRetentionTime(retentionTimeValue),\n          formattedRetentionSize(retentionSizeValue),\n        ],\n        originalData: row,\n      });\n    });\n    return tableRow;\n  };\n\n  const rows = preparedTableCells();\n\n  return (\n    <>\n      <TopicsToolbar\n        total={total}\n        page={page}\n        perPage={perPage}\n        onCreateTopic={onCreateTopic}\n        setFilteredValue={setFilteredValue}\n        filteredValue={filteredValue}\n      />\n      <MASTable\n        tableProps={{\n          cells: tableColumns,\n          rows,\n          'aria-label': t('topic.topic_list_table'),\n          actionResolver: actionResolver,\n          shouldDefaultCustomRowWrapper: true,\n          variant: TableVariant.compact,\n          onSort,\n          sortBy,\n        }}\n        rowDataTestId={rowDataTestId || 'tableTopics-row'}\n      />\n      {topicItems?.length < 1 && filteredValue.length > 0 && (\n        <EmptyState\n          emptyStateProps={{\n            variant: MASEmptyStateVariant.NoResult,\n          }}\n          titleProps={{\n            title: t('common.no_results_title'),\n          }}\n          emptyStateBodyProps={{\n            body: t('common.no_results_body'),\n          }}\n        />\n      )}\n      {total > 0 && (\n        <MASPagination\n          widgetId='consumer-group-pagination-options-menu-bottom'\n          itemCount={total}\n          variant={PaginationVariant.bottom}\n          page={page}\n          perPage={perPage}\n          titles={{\n            paginationTitle: t('common.full_pagination'),\n            perPageSuffix: t('common.per_page_suffix'),\n            toFirstPage: t('common.to_first_page'),\n            toPreviousPage: t('common.to_previous_page'),\n            toLastPage: t('common.to_last_page'),\n            toNextPage: t('common.to_next_page'),\n            optionsToggle: t('common.options_toggle'),\n            currPage: t('common.curr_page'),\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport { TopicsTable };\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n  AlertVariant,\n  Card,\n  PageSection,\n  PageSectionVariants,\n} from '@patternfly/react-core';\nimport { useTimeout } from '@app/hooks/useTimeOut';\nimport { TopicsTable } from './components';\nimport {\n  EmptyState,\n  MASEmptyStateVariant,\n  MASLoading,\n  usePaginationParams,\n} from '@app/components';\nimport { getTopics, OrderKey } from '@app/services';\nimport { ConfigContext, useFederated } from '@app/contexts';\nimport { Topic } from '@rhoas/kafka-instance-sdk';\nimport { useAlert, useBasename } from '@rhoas/app-services-ui-shared';\nimport './Topics.css';\nimport { ISortBy, OnSort, SortByDirection } from '@patternfly/react-table';\nimport { isAxiosError } from '@app/utils/axios';\n\nexport type ITopic = {\n  name: string;\n  replicas: number;\n  partitions: number;\n};\n\nexport type ITopicProps = {\n  rows: ITopic[];\n};\n\nconst Topics: React.FC = () => {\n  const { onError } = useFederated() || {};\n  const { t } = useTranslation();\n  const { addAlert } = useAlert() || {\n    addAlert: () => {\n      // No-op\n    },\n  };\n  const config = useContext(ConfigContext);\n  const { page = 1, perPage = 10 } = usePaginationParams() || {};\n  const history = useHistory();\n  const { getBasename } = useBasename() || { getBasename: () => '' };\n  const basename = getBasename();\n\n  const [topicItems, setTopicItems] = useState<Topic[]>();\n  const [searchTopicName, setSearchTopicName] = useState<string>('');\n  const [offset, setOffset] = useState<number>(0);\n  const [order, setOrder] = useState<SortByDirection>();\n  const [orderKey, setOrderKey] = useState<OrderKey>();\n  const [sortBy, setSortBy] = useState<ISortBy>({ index: 0, direction: 'asc' });\n\n  useEffect(() => {\n    fetchTopic();\n  }, [searchTopicName, order, orderKey]);\n\n  useTimeout(() => fetchTopic(), 5000);\n\n  useEffect(() => {\n    const offset = perPage * (page - 1);\n    setOffset(offset);\n  }, [page, perPage]);\n\n  const onClickCreateTopic = () => {\n    history.push(`${basename}/topic/create`);\n  };\n\n  const onEditTopic = (topicName: string | undefined) => {\n    history.push(`${basename}/topic/update/${topicName}`);\n  };\n\n  const onEdit = (topicName: string | undefined) => {\n    onEditTopic && onEditTopic(topicName);\n  };\n\n  const onSort: OnSort = (_event, index, direction) => {\n    const sortableCols = {\n      '0': 'name',\n      '1': 'partitions',\n      '2': 'retention.ms',\n      '3': 'retention.bytes',\n    };\n\n    setOrderKey(sortableCols[index]);\n    setOrder(direction);\n    setSortBy({ index, direction });\n  };\n\n  const fetchTopic = async () => {\n    try {\n      await getTopics(\n        config,\n        100,\n        perPage,\n        searchTopicName,\n        offset,\n        order,\n        orderKey\n      ).then((response) => {\n        setTopicItems(response?.items);\n      });\n    } catch (err) {\n      //TODO: Update the api to allow suppress alerts if the application does not want to show them as well.\n      let message: string | undefined;\n      let code: number | undefined;\n      if (err && isAxiosError(err)) {\n        code = err.response?.data.code;\n        message = err.response?.data.error_message;\n      }\n      if (onError && code === 401) {\n        onError(code, message);\n      } else {\n        addAlert({\n          title: message || '',\n          variant: AlertVariant.danger,\n        });\n      }\n    }\n  };\n\n  const renderTopicsTable = () => {\n    if (topicItems === undefined) {\n      return (\n        <PageSection\n          className='kafka-ui-m-full-height'\n          variant={PageSectionVariants.light}\n          padding={{ default: 'noPadding' }}\n        >\n          <MASLoading />\n        </PageSection>\n      );\n    } else if (topicItems.length < 1 && searchTopicName.length < 1) {\n      return (\n        <EmptyState\n          emptyStateProps={{\n            variant: MASEmptyStateVariant.NoItems,\n            'data-ouia-page-id': 'emptyStateTopics',\n          }}\n          titleProps={{\n            title: t('topic.empty_topics_title'),\n          }}\n          emptyStateBodyProps={{\n            body: t('topic.empty_topics_body'),\n          }}\n          buttonProps={{\n            title: t('topic.create_topic'),\n            onClick: onClickCreateTopic,\n            'data-testid': 'actionCreateTopic',\n          }}\n        />\n      );\n    } else if (topicItems) {\n      return (\n        <TopicsTable\n          total={topicItems.length || 0}\n          page={page}\n          perPage={perPage}\n          onCreateTopic={onClickCreateTopic}\n          topicItems={\n            searchTopicName\n              ? topicItems?.slice(0, perPage)\n              : topicItems?.slice(\n                  topicItems.length > 1 ? offset : 0,\n                  offset + perPage\n                )\n          }\n          filteredValue={searchTopicName}\n          setFilteredValue={setSearchTopicName}\n          refreshTopics={fetchTopic}\n          onEdit={onEdit}\n          onSort={onSort}\n          sortBy={sortBy}\n        />\n      );\n    }\n    return <></>;\n  };\n\n  return (\n    <>\n      <Card className='kafka-ui-m-full-height' data-ouia-page-id='tableTopics'>\n        {renderTopicsTable()}\n      </Card>\n    </>\n  );\n};\n\nexport { Topics };\nexport default Topics;\n","import React from 'react';\nimport { PageSection } from '@patternfly/react-core';\nimport { Topics } from './Topics';\nimport { ModalProvider } from '@rhoas/app-services-ui-components';\nimport { I18nextProvider } from 'react-i18next';\nimport kafkai18n from '@app/i18n';\nimport {\n  MainViewHeader,\n  KafkaModalLoader,\n  PaginationProvider,\n} from '@app/components';\nimport {\n  FederatedProps,\n  FederatedContext,\n  ConfigContext,\n  IConfiguration,\n} from '@app/contexts';\nimport { useModal, ModalType } from '@rhoas/app-services-ui-shared';\nimport './pages/style.css';\n\ntype TopicsFederatedProps = FederatedProps &\n  IConfiguration & {\n    apiBasePath: string;\n  };\n\nconst TopicsFederated: React.FC<TopicsFederatedProps> = ({\n  kafkaName,\n  kafkaPageLink,\n  handleInstanceDrawer,\n  redirectAfterDeleteInstance,\n  kafka,\n  onError,\n  apiBasePath,\n  getToken,\n}) => {\n  const { showModal } = useModal<ModalType.KasDeleteInstance>();\n\n  const onDeleteInstance = () => {\n    showModal &&\n      showModal(ModalType.KasDeleteInstance, {\n        kafka,\n        onDelete: redirectAfterDeleteInstance,\n      });\n  };\n\n  return (\n    <I18nextProvider i18n={kafkai18n}>\n      <ConfigContext.Provider value={{ basePath: apiBasePath, getToken }}>\n        <FederatedContext.Provider\n          value={{\n            kafkaName,\n            kafkaPageLink,\n            handleInstanceDrawer,\n            kafka,\n            redirectAfterDeleteInstance,\n            onError,\n            onDeleteInstance,\n          }}\n        >\n          <ModalProvider>\n            <PaginationProvider>\n              <MainViewHeader activeTabKey={2} />\n              <PageSection isFilled>\n                <Topics />\n                <KafkaModalLoader />\n              </PageSection>\n            </PaginationProvider>\n          </ModalProvider>\n        </FederatedContext.Provider>\n      </ConfigContext.Provider>\n    </I18nextProvider>\n  );\n};\n\nexport default TopicsFederated;\n","import { ConfigEntry, NewTopicInput, Topic } from '@rhoas/kafka-instance-sdk';\nimport { IAdvancedTopic } from '@app/modules/Topics/utils';\n\nconst capitalizeText = (text: string) => {\n  return text.charAt(0).toUpperCase() + text.slice(1);\n};\n\nexport const kebabToCamel = function (kebabCase: string): string {\n  const words: string[] = kebabCase.split('-');\n\n  const camelCased: string[] = words.map((word: string, index: number) => {\n    return index > 0 ? capitalizeText(word) : word;\n  });\n\n  return camelCased.join('');\n};\n\nexport const kebabToDotSeparated = (val: string): string => {\n  if (typeof val === 'string') {\n    return val.replace(/-/g, '.');\n  }\n  return val;\n};\n\nexport enum RetentionTimeUnits {\n  MILLISECOND = 'milliseconds',\n  SECOND = 'seconds',\n  MINUTE = 'minutes',\n  HOUR = 'hours',\n  DAY = 'day',\n  WEEK = 'weeks',\n  CUSTOM = 'custom',\n  UNLIMITED = 'unlimited',\n}\n\nexport enum RetentionSizeUnits {\n  BYTE = 'bytes',\n  KIBIBYTE = 'kibibytes',\n  MEBIBYTE = 'mebibytes',\n  GIBIBYTE = 'gibibytes',\n  TEBIBYTE = 'tebibytes',\n  CUSTOM = 'custom',\n  UNLIMITED = 'unlimited',\n}\n\nexport const unitsToBytes = {\n  bytes: 1,\n  kibibytes: 1024,\n  mebibytes: 1048576,\n  gibibytes: 1073741824,\n  tebibytes: 1.0995116e12,\n};\n\nexport const unitsToMilliSecond = {\n  milliseconds: 1,\n  seconds: 1000,\n  minutes: 60000,\n  hours: 3600000,\n  days: 86400000,\n};\n\nexport const RetentionTimeUnitToValue = {\n  ...unitsToMilliSecond,\n  day: 1,\n  weeks: 7,\n};\n\ntype ConversionUnit = {\n  value: number;\n  unit: string;\n};\n\nexport const millisecondsToTime = (value: number): ConversionUnit => {\n  if (value) {\n    if (value % unitsToMilliSecond.days == 0)\n      return { value: value / unitsToMilliSecond.days, unit: 'days' };\n    if (value % unitsToMilliSecond.hours == 0)\n      return { value: value / unitsToMilliSecond.hours, unit: 'hours' };\n    if (value % unitsToMilliSecond.minutes == 0)\n      return { value: value / unitsToMilliSecond.minutes, unit: 'minutes' };\n    if (value % unitsToMilliSecond.seconds == 0)\n      return { value: value / unitsToMilliSecond.seconds, unit: 'seconds' };\n  }\n\n  return { value, unit: 'milliseconds' };\n};\n\nexport const formattedRetentionTime = (time: number): string => {\n  const { unit, value } = millisecondsToTime(time);\n  return Number(value) === -1 ? 'Unlimited' : `${time} ms (${value} ${unit})`;\n};\n\nexport const formattedRetentionSize = (size: number): string => {\n  const { unit, value } = bytesToMemorySize(size);\n  return Number(value) === -1\n    ? 'Unlimited'\n    : `${size} bytes (${value} ${unit})`;\n};\n\nexport const bytesToMemorySize = (value: number): ConversionUnit => {\n  if (value) {\n    if (value % unitsToBytes.tebibytes == 0)\n      return { value: value / unitsToBytes.tebibytes, unit: 'tebibytes' };\n    if (value % unitsToBytes.gibibytes == 0)\n      return { value: value / unitsToBytes.gibibytes, unit: 'gibibytes' };\n    if (value % unitsToBytes.mebibytes == 0)\n      return { value: value / unitsToBytes.mebibytes, unit: 'mebibytes' };\n    if (value % unitsToBytes.kibibytes == 0)\n      return { value: value / unitsToBytes.kibibytes, unit: 'kibibytes' };\n  }\n\n  return { value, unit: 'bytes' };\n};\n\nexport type KeyValue = {\n  key: string;\n  value: number;\n};\n\nexport const deserializeTopic = (topic: Topic): ConfigEntry => {\n  const newTopic = { ...topic };\n  const configEntries: ConfigEntry = {};\n\n  newTopic?.config?.forEach((e: ConfigEntry) => {\n    const { key = '', value } = e;\n\n    if (key === 'retention.ms' && Number(value) >= 0) {\n      const { value: newValue, unit } = millisecondsToTime(Number(value));\n      configEntries[key] = newValue;\n      configEntries[`${key}.unit`] = unit;\n      configEntries['selectedRetentionTimeOption'] = RetentionTimeUnits.CUSTOM;\n    } else if (key === 'retention.ms' && Number(value) === -1) {\n      configEntries['selectedRetentionTimeOption'] =\n        RetentionTimeUnits.UNLIMITED;\n    }\n\n    if (key === 'retention.bytes' && Number(value) >= 0) {\n      const { value: newValue, unit } = bytesToMemorySize(Number(value));\n      configEntries[key] = newValue;\n      configEntries[`${key}.unit`] = unit;\n      configEntries['selectedRetentionSizeOption'] = RetentionSizeUnits.CUSTOM;\n    } else if (key === 'retention.bytes' && Number(value) === -1) {\n      configEntries['selectedRetentionSizeOption'] =\n        RetentionSizeUnits.UNLIMITED;\n    }\n\n    if (key === 'cleanup.policy') {\n      configEntries[key] = value || 'delete';\n    }\n  });\n\n  return configEntries;\n};\n\nexport const serializeTopic = (\n  topicData: IAdvancedTopic,\n  addionalProperties: string[] = []\n): NewTopicInput => {\n  const configProperties = [\n    'retention.ms',\n    'retention.bytes',\n    'flush.messages',\n    ...addionalProperties,\n  ];\n  const tempProperties = [\n    'retention.ms.unit',\n    'retention.bytes.unit',\n    'selectedRetentionTimeOption',\n    'selectedRetentionSizeOption',\n  ];\n  const topic = { ...topicData };\n  const config: ConfigEntry[] = [];\n\n  for (const key in topic) {\n    let value;\n    //check key exist in include config proerties and add properties in config object\n    if (configProperties.includes(key)) {\n      //check unlimited retention time and size and set -1 value\n      if (\n        (topic.selectedRetentionTimeOption === RetentionTimeUnits.UNLIMITED &&\n          key === 'retention.ms') ||\n        (topic.selectedRetentionSizeOption === RetentionSizeUnits.UNLIMITED &&\n          key === 'retention.bytes')\n      ) {\n        value = '-1';\n      } else if (key === 'retention.ms' || key === 'retention.bytes') {\n        //calculate value based on entered value * selected unit\n        const unit =\n          key === 'retention.ms'\n            ? unitsToMilliSecond[topic[`${key}.unit`] || 'milliseconds']\n            : unitsToBytes[topic[`${key}.unit`] || 'bytes'];\n        value = Number(topic[key]) * unit;\n      } else {\n        value = topic[key];\n      }\n    }\n\n    //delete properties which are not required\n    if (key.split('.').pop() === 'unit' || tempProperties.includes(key)) {\n      delete topic[key];\n    }\n\n    //prepare config object with key/value\n    if (value && key) {\n      config.push({\n        key,\n        value: value.toString(),\n      });\n    }\n  }\n\n  return {\n    name: topic.name,\n    settings: {\n      numPartitions: Number(topic.numPartitions),\n      config,\n    },\n  };\n};\n","import { AxiosResponse } from 'axios';\nimport {\n  ConfigEntry,\n  TopicsApi,\n  Topic,\n  TopicSettings,\n  TopicsList,\n} from '@rhoas/kafka-instance-sdk';\nimport { Configuration } from '@rhoas/kafka-instance-sdk';\nimport { IConfiguration } from '@app/contexts';\nimport { IAdvancedTopic } from '@app/modules/Topics/utils';\nimport { SortByDirection } from '@patternfly/react-table';\n\nexport enum OrderKey {\n  name = 'name',\n  partitions = 'partitions',\n  retentionMs = 'retention.ms',\n  retentionSize = 'retention.bytes',\n}\n\nexport const getTopics = async (\n  config: IConfiguration | undefined,\n  limit?: number,\n  size?: number,\n  filter?: string,\n  offset?: number | undefined,\n  order: SortByDirection = SortByDirection.asc,\n  orderKey?: OrderKey\n): Promise<TopicsList> => {\n  const accessToken = await config?.getToken();\n\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<TopicsList> = await api.getTopics(\n    offset,\n    limit,\n    size,\n    filter,\n    undefined,\n    order,\n    orderKey\n  );\n  return response.data;\n};\n\nexport const getTopicDetail = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<IAdvancedTopic> => {\n  const accessToken = await config?.getToken();\n\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const { data } = await api.getTopic(topicName);\n\n  return convertTopicResponse(data);\n};\n\nconst convertTopicResponse = (topic: Topic): IAdvancedTopic => {\n  const topicObj: IAdvancedTopic = { name: '', numPartitions: '0' };\n  if (topic && topic.name) topicObj.name = topic.name;\n\n  topic.config?.forEach((config) => {\n    if (config.key) {\n      topicObj[config.key] = config.value;\n    }\n  });\n\n  topicObj.numPartitions = topic?.partitions?.length.toString() || '0';\n\n  topicObj.replicationFactor =\n    (topic?.partitions && topic?.partitions[0].replicas?.length.toString()) ||\n    '0';\n\n  return topicObj;\n};\n\nexport const updateTopicModel = async (\n  topicName: string,\n  topicSettings: TopicSettings,\n  config: IConfiguration | undefined\n): Promise<number> => {\n  const accessToken = await config?.getToken();\n\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<Topic> = await api.updateTopic(\n    topicName,\n    topicSettings\n  );\n  return response.status;\n};\n\nexport const getTopic = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<Topic> => {\n  const accessToken = await config?.getToken();\n\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response = await api.getTopic(topicName);\n\n  const answer = response.data;\n  answer.config = answer.config || ([] as ConfigEntry[]);\n  answer.config.push({\n    key: 'replicationFactor',\n    value: response.data?.partitions\n      ?.map((p) => p.replicas?.length)\n      .reduce(\n        (previousValue = 0, currentValue = 0) => previousValue + currentValue\n      )\n      ?.toString(),\n  });\n  return response.data;\n};\n\nexport const deleteTopic = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<void> => {\n  const accessToken = await config?.getToken();\n\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  await api.deleteTopic(topicName);\n  return;\n};\n","import { AxiosError } from 'axios';\n\nexport type ErrorData = {\n  code: number;\n  error_message: string;\n};\n\nexport const isAxiosError = (\n  error: unknown\n): error is AxiosError<ErrorData> => {\n  return (error as AxiosError<ErrorData>) !== undefined;\n};\n"],"names":["css","args","classes","hasOwn","hasOwnProperty","filter","Boolean","forEach","arg","argType","push","Array","isArray","length","inner","key","call","join","MASLoading","bullseyeProps","spinnerProps","Bullseye","Spinner","CustomRowWrapperContext","createContext","activeRow","onRowClick","loggedInUser","CustomRowWrapperProvider","Provider","CustomRowWrapper","rowWrapperProps","useContext","rowDataTestId","trRef","className","rowProps","row","props","rowIndex","isExpanded","originalData","tabIndex","ref","undefined","rowId","hidden","onClick","event","MASTable","tableProps","tableHeaderProps","tableBodyProps","children","cells","rows","actionResolver","onSort","sortBy","ariaLabel","variant","shouldDefaultCustomRowWrapper","restProps","value","TableHeader","TableBody","MASToolbar","toolbarProps","toggleGroupProps","toolbarItems","toggleGroupItems","id","clearAllFilters","collapseListedFiltersBreakpoint","inset","restToolbarProps","Toolbar","ToolbarContent","ToolbarToggleGroup","toggleIcon","map","toolbarItem","index","alignment","item","restItemProps","ToolbarItem","MainViewHeader","activeTabKey","t","useTranslation","history","useHistory","kafkaPageLink","kafkaName","handleInstanceDrawer","onDeleteInstance","useState","isOpen","setIsOpen","onSelectKebabOption","activeTab","mainBreadcrumbs","Breadcrumb","BreadcrumbItem","to","isActive","dropdownItems","DropdownItem","PageSection","PageSectionVariants","Level","Title","headingLevel","Dropdown","onSelect","toggle","KebabToggle","onToggle","isPlain","position","DropdownPosition","padding","default","Tabs","activeKey","_","tabKey","redirectPath","Tab","title","TabTitleText","eventKey","tabContentId","FederatedContext","useFederated","TopicsToolbar","total","page","perPage","setFilteredValue","filteredValue","onCreateTopic","topicInputValue","setTopicInputValue","ToolbarFilter","chips","deleteChip","categoryName","InputGroup","TextInput","name","type","placeholder","onChange","Button","ButtonVariant","isDisabled","SearchIcon","MASPagination","widgetId","itemCount","titles","paginationTitle","perPageSuffix","toFirstPage","toPreviousPage","toLastPage","toNextPage","optionsToggle","currPage","xl","breakpoint","TopicsTable","tableRow","topicItems","onEdit","onDeleteTopic","refreshTopics","showModal","useModal","basename","getBasename","useBasename","tableColumns","transforms","sortable","onSelectKebabDropdownOption","action","topicName","ModalType","partitions","config","retentionTimeValue","element","retentionSizeValue","Link","rowData","TableVariant","EmptyState","emptyStateProps","titleProps","emptyStateBodyProps","body","PaginationVariant","Topics","onError","addAlert","useAlert","setTopicItems","searchTopicName","setSearchTopicName","offset","setOffset","order","setOrder","orderKey","setOrderKey","direction","setSortBy","useEffect","fetchTopic","onClickCreateTopic","onEditTopic","_event","then","response","items","message","code","data","error_message","AlertVariant","Card","buttonProps","slice","redirectAfterDeleteInstance","kafka","apiBasePath","getToken","I18nextProvider","i18n","basePath","onDelete","ModalProvider","isFilled","RetentionTimeUnits","RetentionSizeUnits","kebabToCamel","kebabCase","split","word","text","charAt","toUpperCase","kebabToDotSeparated","val","replace","unitsToBytes","bytes","kibibytes","mebibytes","gibibytes","tebibytes","unitsToMilliSecond","milliseconds","seconds","minutes","hours","days","RetentionTimeUnitToValue","day","weeks","millisecondsToTime","unit","formattedRetentionTime","time","Number","formattedRetentionSize","size","bytesToMemorySize","deserializeTopic","topic","newTopic","configEntries","e","newValue","CUSTOM","UNLIMITED","serializeTopic","topicData","addionalProperties","configProperties","tempProperties","includes","selectedRetentionTimeOption","selectedRetentionSizeOption","pop","toString","settings","numPartitions","OrderKey","getTopics","limit","SortByDirection","Promise","accessToken","TopicsApi","Configuration","getTopicDetail","getTopic","convertTopicResponse","topicObj","replicationFactor","replicas","updateTopicModel","topicSettings","updateTopic","status","answer","p","reduce","previousValue","currentValue","deleteTopic","isAxiosError","error"],"sourceRoot":""}