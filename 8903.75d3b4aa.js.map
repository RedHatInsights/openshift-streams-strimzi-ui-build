{"version":3,"file":"8903.75d3b4aa.js","mappings":"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","sources":["webpack://kafka-ui/./src/modules/Topics/components/TopicDetailHead/TopicDetailHead.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicDetailView/TopicDetailView.tsx","webpack://kafka-ui/./src/modules/Topics/pages/TopicDetail/TopicDetailPage.tsx"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  TextContent,\n  Text,\n  TextVariants,\n  PageSection,\n  PageSectionVariants,\n} from '@patternfly/react-core';\nimport '../TopicDetailView/TopicDetailView.css';\n\nexport type TopicDetailHeadProps = {\n  topicName: string;\n  kafkaName?: string;\n  kafkaInstanceLink?: string;\n  kafkaPageLink?: string;\n};\n\nexport const TopicDetailHead: React.FC<TopicDetailHeadProps> = ({\n  topicName,\n  kafkaName,\n  kafkaInstanceLink,\n  kafkaPageLink,\n}) => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n\n  return (\n    <>\n      <section className='pf-c-page__main-breadcrumb'>\n        <Breadcrumb>\n          <BreadcrumbItem to={kafkaPageLink || '#'}>\n            {t('common.kafka_instance')}\n          </BreadcrumbItem>\n          <BreadcrumbItem to={kafkaInstanceLink || '#'}>\n            {kafkaName || t('common.kafka_instance_name')}\n          </BreadcrumbItem>\n          <BreadcrumbItem>{topicName}</BreadcrumbItem>\n        </Breadcrumb>\n      </section>\n      <PageSection variant={PageSectionVariants.light}>\n        <TextContent>\n          <Text component={TextVariants.h1}>{topicName}</Text>\n        </TextContent>\n      </PageSection>\n    </>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useBasename } from '@rhoas/app-services-ui-shared';\nimport {\n  PageSection,\n  PageGroup,\n  JumpLinks,\n  JumpLinksItem,\n  TextContent,\n  Text,\n  TextVariants,\n  Button,\n  Divider,\n  Sidebar,\n  SidebarContent,\n  SidebarPanel,\n  SplitItem,\n  Split,\n  Form,\n  FormSection,\n} from '@patternfly/react-core';\nimport {\n  DEFAULT_MESSAGE_TIMESTAMP_TYPE,\n  DEFAULT_DELETE_RETENTION_TIME,\n  DEFAULT_FILE_DELETE_DELAY,\n  DEFAULT_INDEX_INTERVAL_SIZE,\n  DEFAULT_LOG_SEGMENT_SIZE,\n  DEFAULT_MAXIMUM_MESSAGE_BYTES,\n  DEFAULT_MINIMUM_COMPACTION_LAG_TIME,\n  DEFAULT_MIN_CLEANBLE_RATIO,\n  DEFAULT_MIN_INSYNC_REPLICAS,\n  DEFAULT_SEGMENT_INDEX_SIZE,\n  DEFAULT_SEGMENT_JITTER_TIME,\n  DEFAULT_SEGMENT_TIME,\n  DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF,\n  DEFAULT_FLUSH_INTERVAL_MESSAGES,\n  DEFAULT_FLUSH_INTERVAL_TIME,\n} from '@app/constant';\nimport './TopicDetailView.css';\nimport { TextWithLabelPopover } from '@app/components/TextWithLabelPopover';\nimport { IAdvancedTopic } from '@app/modules/Topics/utils';\nimport {\n  formattedRetentionSize,\n  formattedRetentionTime,\n} from '@app/modules/Topics/utils';\n\nexport type TopicViewDetailProps = {\n  /** Topic details */\n  topic: IAdvancedTopic;\n  /** Method to delete topic */\n  deleteTopic: () => void;\n};\n\nexport const TopicDetailView: React.FunctionComponent<TopicViewDetailProps> = ({\n  topic,\n  deleteTopic,\n}) => {\n  const history = useHistory();\n  const { topicName } = useParams<{ topicName: string }>();\n  const { getBasename } = useBasename() || { getBasename: () => '' };\n  const basename = getBasename();\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n\n  const updateTopic = () => {\n    history.push(`${basename}/topic/update/${topicName}`);\n  };\n\n  return (\n    <PageSection padding={{ default: 'noPadding' }}>\n      <Sidebar hasGutter>\n        <SidebarPanel variant='sticky'>\n          <JumpLinks\n            isVertical\n            label={t('topic.jump_to_section')}\n            offset={-164} // for header\n            style={{ position: 'sticky' }}\n            scrollableSelector='.pf-c-page__main[tabindex=\"-1\"]'\n          >\n            <JumpLinksItem key={0} href='#core-configuration'>\n              {t('topic.core_configuration')}\n            </JumpLinksItem>\n            <JumpLinksItem key={1} href='#messages'>\n              {t('topic.messages')}\n            </JumpLinksItem>\n            <JumpLinksItem key={2} href='#log'>\n              {t('topic.log')}\n            </JumpLinksItem>\n            <JumpLinksItem key={3} href='#replication'>\n              {t('topic.replication')}\n            </JumpLinksItem>\n            <JumpLinksItem key={4} href='#cleanup'>\n              {t('common.cleanup')}\n            </JumpLinksItem>\n            <JumpLinksItem key={5} href='#index'>\n              {t('topic.index')}\n            </JumpLinksItem>\n            <JumpLinksItem key={6} href='#flush'>\n              {t('topic.flush')}\n            </JumpLinksItem>\n            <JumpLinksItem key={7} href='#delete'>\n              {t('common.delete')}\n            </JumpLinksItem>\n          </JumpLinks>\n        </SidebarPanel>\n        <SidebarContent>\n          <PageGroup hasOverflowScroll id='topic-detail-view'>\n            <PageSection padding={{ default: 'noPadding' }}>\n              <Split>\n                <SplitItem isFilled>\n                  <Form id='topic-form'>\n                    <FormSection\n                      title={t('topic.core_configuration')}\n                      id='core-configuration'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className='section-info'\n                        >\n                          {t('topic.core_config_info')}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='topic-name'\n                        btnAriaLabel={t('common.name')}\n                        fieldLabel={t('topic.topic_name')}\n                        fieldValue={topic.name}\n                        popoverBody={t('topic.topic_name_description')}\n                        popoverHeader={t('topic.topic_name')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='partitions'\n                        btnAriaLabel={t('topic.partitions')}\n                        fieldLabel={t('topic.partitions')}\n                        fieldValue={topic.numPartitions}\n                        popoverBody={t('topic.partitions_description')}\n                        popoverHeader={t('topic.partitions')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='replicas'\n                        btnAriaLabel={t('topic.replicas')}\n                        fieldLabel={t('topic.replicas')}\n                        fieldValue={topic.replicationFactor}\n                        popoverBody={t('topic.replicas_description')}\n                        popoverHeader={t('topic.replicas')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='min-insync-replicas'\n                        btnAriaLabel={t('topic.min_insync_replicas')}\n                        fieldLabel={t('topic.min_insync_replicas')}\n                        fieldValue={DEFAULT_MIN_INSYNC_REPLICAS}\n                        popoverBody={t('topic.min_insync_replicas_description')}\n                        popoverHeader={t('topic.min_insync_replicas')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='retention-time'\n                        btnAriaLabel={t('topic.retention_time')}\n                        fieldLabel={t('topic.retention_time')}\n                        fieldValue={formattedRetentionTime(\n                          Number(topic['retention.ms'])\n                        )}\n                        popoverBody={t('topic.retention_time_description')}\n                        popoverHeader={t('topic.retention_time')}\n                        showUnlimited={true}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='retention-size'\n                        btnAriaLabel={t('topic.retention_size')}\n                        fieldLabel={t('topic.retention_size')}\n                        fieldValue={formattedRetentionSize(\n                          Number(topic['retention.bytes'])\n                        )}\n                        popoverHeader={t('topic.retention_size')}\n                        popoverBody={t('topic.retention_size_description')}\n                        showUnlimited={true}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t('topic.messages')}\n                      id='messages'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className='section-info'\n                        >\n                          {t('topic.message_section_info')}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='max-message-size'\n                        btnAriaLabel={t('topic.max_message_size')}\n                        fieldLabel={t('topic.max_message_size')}\n                        fieldValue={DEFAULT_MAXIMUM_MESSAGE_BYTES}\n                        popoverBody={t('topic.max_message_size_description')}\n                        popoverHeader={t('topic.max_message_size')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='message-timestamp-type'\n                        btnAriaLabel={t('topic.message_timestamp_type')}\n                        fieldLabel={t('topic.message_timestamp_type')}\n                        fieldValue={DEFAULT_MESSAGE_TIMESTAMP_TYPE}\n                        popoverBody={t(\n                          'topic.message_timestamp_type_description'\n                        )}\n                        popoverHeader={t('topic.message_timestamp_type')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='max-message-timestamp-diff'\n                        btnAriaLabel={t('topic.max_message_timestamp_diff')}\n                        fieldLabel={t('topic.max_message_timestamp_diff')}\n                        fieldValue={DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF}\n                        popoverBody={t(\n                          'topic.max_message_timestamp_diff_description'\n                        )}\n                        popoverHeader={t('topic.max_message_timestamp_diff')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='compression-type'\n                        btnAriaLabel={t('topic.compression_type')}\n                        fieldLabel={t('topic.compression_type')}\n                        fieldValue='Producer'\n                        popoverBody={t('topic.compression_type_description')}\n                        popoverHeader={t('topic.compression_type')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='message-format'\n                        btnAriaLabel={t('topic.message_format')}\n                        fieldLabel={t('topic.message_format')}\n                        fieldValue='2.7-IV2'\n                        popoverBody={t('topic.message_format_description')}\n                        popoverHeader={t('topic.message_format')}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t('topic.log')}\n                      id='log'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text component={TextVariants.p}>\n                          {t('topic.log_section_info')}\n                          <Text\n                            component={TextVariants.small}\n                            className='section-info-note'\n                          >\n                            {t('topic.log_section_info_note')}\n                          </Text>\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='cleanup-policy'\n                        btnAriaLabel={t('topic.cleanup_policy')}\n                        fieldLabel={t('topic.cleanup_policy')}\n                        fieldValue={topic['cleanup.policy']}\n                        popoverBody={t('topic.cleanup_policy_description')}\n                        popoverHeader={t('topic.cleanup_policy')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='delete-retention-time'\n                        btnAriaLabel={t('topic.delete_retention_time')}\n                        fieldLabel={t('topic.delete_retention_time')}\n                        fieldValue={DEFAULT_DELETE_RETENTION_TIME}\n                        popoverBody={t(\n                          'topic.delete_retention_time_description'\n                        )}\n                        popoverHeader={t('topic.delete_retention_time')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='min-cleanable-ratio'\n                        btnAriaLabel={t('topic.min_cleanable_ratio')}\n                        fieldLabel={t('topic.min_cleanable_ratio')}\n                        fieldValue={DEFAULT_MIN_CLEANBLE_RATIO}\n                        popoverBody={t('topic.min_cleanable_ratio_description')}\n                        popoverHeader={t('topic.min_cleanable_ratio')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='min-compaction-lag-time'\n                        btnAriaLabel={t('topic.min_compaction_lag_time')}\n                        fieldLabel={t('topic.min_compaction_lag_time')}\n                        fieldValue={DEFAULT_MINIMUM_COMPACTION_LAG_TIME}\n                        popoverBody={t(\n                          'topic.min_compaction_lag_time_description'\n                        )}\n                        popoverHeader={t('topic.min_compaction_lag_time')}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t('topic.replication')}\n                      id='replication'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text component={TextVariants.p}>\n                          {t('topic.replication_section_info')}\n                          <Text component={TextVariants.small}>\n                            {t('topic.replication_section_info_note')}\n                          </Text>\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='unclean-leader-election'\n                        btnAriaLabel={t('topic.unclean_leader_election')}\n                        fieldLabel={t('topic.unclean_leader_election')}\n                        fieldValue={t('common.disabled')}\n                        popoverBody={t(\n                          'topic.unclean_leader_election_description'\n                        )}\n                        popoverHeader={t('topic.unclean_leader_election')}\n                      />\n                    </FormSection>\n\n                    <FormSection\n                      title={t('common.cleanup')}\n                      id='cleanup'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className='section-info'\n                        >\n                          {t('topic.cleanup_section_info')}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='log-segment-size'\n                        btnAriaLabel={t('topic.log_segment_size')}\n                        fieldLabel={t('topic.log_segment_size')}\n                        fieldValue={DEFAULT_LOG_SEGMENT_SIZE}\n                        popoverBody={t('topic.log_segment_size_description')}\n                        popoverHeader={t('topic.log_segment_size')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='segement-time'\n                        btnAriaLabel={t('topic.segement_time')}\n                        fieldLabel={t('topic.segement_time')}\n                        fieldValue={DEFAULT_SEGMENT_TIME}\n                        popoverBody={t('topic.segement_time_description')}\n                        popoverHeader={t('topic.segement_time')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='segment-jitter-time'\n                        btnAriaLabel={t('topic.segment_jitter_time')}\n                        fieldLabel={t('topic.segment_jitter_time')}\n                        fieldValue={DEFAULT_SEGMENT_JITTER_TIME}\n                        popoverBody={t('topic.segment_jitter_time_description')}\n                        popoverHeader={t('topic.segment_jitter_time')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='file-delete-delay'\n                        btnAriaLabel={t('topic.file_delete_delay')}\n                        fieldLabel={t('topic.file_delete_delay')}\n                        fieldValue={DEFAULT_FILE_DELETE_DELAY}\n                        popoverBody={t('topic.file_delete_delay_description')}\n                        popoverHeader={t('topic.file_delete_delay')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='preallocate-log-segment-files'\n                        btnAriaLabel={t('topic.preallocate_log_segment_files')}\n                        fieldLabel={t('topic.preallocate_log_segment_files')}\n                        fieldValue={t('common.disabled')}\n                        popoverBody={t(\n                          'topic.preallocate_log_segment_files_description'\n                        )}\n                        popoverHeader={t('topic.preallocate_log_segment_files')}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t('topic.index')}\n                      id='index'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className='section-info'\n                        >\n                          {t('topic.index_section_info')}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='index-interval-size'\n                        btnAriaLabel={t('topic.index_interval_size')}\n                        fieldLabel={t('topic.index_interval_size')}\n                        fieldValue={DEFAULT_INDEX_INTERVAL_SIZE}\n                        popoverBody={t('topic.index_interval_size_description')}\n                        popoverHeader={t('topic.index_interval_size')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='segment-index-size'\n                        btnAriaLabel={t('topic.segment_index_size')}\n                        fieldLabel={t('topic.segment_index_size')}\n                        fieldValue={DEFAULT_SEGMENT_INDEX_SIZE}\n                        popoverBody={t('topic.segment_index_size_description')}\n                        popoverHeader={t('topic.segment_index_size')}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t('topic.flush')}\n                      id='flush'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className='section-info'\n                        >\n                          {t('topic.flush_section_info')}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='flush-interval-messages'\n                        btnAriaLabel={t('topic.flush_interval_messages')}\n                        fieldLabel={t('topic.flush_interval_messages')}\n                        fieldValue={DEFAULT_FLUSH_INTERVAL_MESSAGES}\n                        popoverBody={t(\n                          'topic.flush_interval_messages_description'\n                        )}\n                        popoverHeader={t('topic.flush_interval_messages')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='flush-interval-time'\n                        btnAriaLabel={t('topic.flush_interval_time')}\n                        fieldLabel={t('topic.flush_interval_time')}\n                        fieldValue={DEFAULT_FLUSH_INTERVAL_TIME}\n                        popoverBody={t('topic.flush_interval_time_description')}\n                        popoverHeader={t('topic.flush_interval_time')}\n                      />\n                    </FormSection>\n                  </Form>\n\n                  <Divider className='kafka-ui-divider__Margin' />\n\n                  <TextContent>\n                    <Text component={TextVariants.h2} id='delete'>\n                      {t('topic.delete_topic')}\n                    </Text>\n                    <Text component={TextVariants.p} className='section-info'>\n                      {t('topic.delete_topic_info')}\n                    </Text>\n                    <Button\n                      variant='danger'\n                      onClick={deleteTopic}\n                      data-testid='tabProperties-actionDelete'\n                    >\n                      {t('common.delete_topic')}\n                    </Button>\n                  </TextContent>\n                </SplitItem>\n                <SplitItem>\n                  <Button\n                    variant='primary'\n                    onClick={updateTopic}\n                    data-testid='tabProperties-actionEdit'\n                  >\n                    {t('common.edit_props')}\n                  </Button>\n                </SplitItem>\n              </Split>\n            </PageSection>\n          </PageGroup>\n        </SidebarContent>\n      </Sidebar>\n    </PageSection>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n  AlertVariant,\n  PageSection,\n  PageSectionVariants,\n  Tab,\n  TabContent,\n  Tabs,\n  TabTitleText,\n} from '@patternfly/react-core';\nimport {\n  TopicDetailHead,\n  TopicDetailView,\n} from '@app/modules/Topics/components';\nimport { getTopicDetail } from '@app/services';\nimport { ConfigContext, useFederated } from '@app/contexts';\nimport { ConsumerGroups } from '@app/modules/ConsumerGroups';\nimport { isAxiosError } from '@app/utils/axios';\nimport { IAdvancedTopic } from '@app/modules/Topics/utils';\nimport {\n  useAlert,\n  useBasename,\n  ModalType,\n  useModal,\n} from '@rhoas/app-services-ui-shared';\nimport '../style.css';\n\nexport const TopicDetailPage: React.FC = () => {\n  const {\n    activeTab = 2,\n    kafkaName,\n    kafkaPageLink,\n    kafkaInstanceLink,\n    onError,\n    showSchemas,\n  } = useFederated() || {};\n\n  const history = useHistory();\n  const { topicName } = useParams<{ topicName: string }>();\n  const { getBasename } = useBasename() || { getBasename: () => '' };\n  const basename = getBasename();\n\n  const [topicDetail, setTopicDetail] = useState<IAdvancedTopic>({\n    name: topicName,\n    numPartitions: '',\n    'retention.ms': '',\n    'retention.ms.unit': 'milliseconds',\n    'retention.bytes': '',\n    'retention.bytes.unit': 'bytes',\n    'cleanup.policy': '',\n  });\n  const [activeTabKey, setActiveTabKey] = useState(activeTab);\n  const config = useContext(ConfigContext);\n  const { addAlert } = useAlert() || {\n    addAlert: () => {\n      // No-op\n    },\n  };\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n  const contentRefConsumerGroup = React.createRef<HTMLElement>();\n  const contentRefProperties = React.createRef<HTMLElement>();\n  const contentRefSchemas = React.createRef<HTMLElement>();\n  const { showModal } = useModal<ModalType.KafkaDeleteTopic>();\n\n  const onDeleteTopic = () => {\n    //Redirect on topics  viewpage after delete topic successfuly\n    history.push(`${basename}/topics`);\n  };\n\n  const fetchTopicDetail = async (topicName: string) => {\n    if (activeTab === 2) {\n      try {\n        await getTopicDetail(topicName, config).then((response) => {\n          setTopicDetail(response);\n        });\n      } catch (err) {\n        if (isAxiosError(err)) {\n          if (onError) {\n            onError(\n              err.response?.data.code || -1,\n              err.response?.data.error_message\n            );\n          }\n          if (err.response?.status === 404) {\n            // then it's a non-existent topic\n            addAlert({\n              title: t('topic.topic_not_found', { name: topicName }),\n              variant: AlertVariant.danger,\n            });\n          }\n        }\n      }\n    }\n  };\n\n  const handleTabClick = (event, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  // Make the get request\n  useEffect(() => {\n    fetchTopicDetail(topicName);\n  }, [topicName]);\n\n  const deleteTopic = () => {\n    showModal(ModalType.KafkaDeleteTopic, {\n      topicName,\n      onDeleteTopic,\n    });\n  };\n\n  return (\n    <>\n      <TopicDetailHead\n        topicName={topicName}\n        kafkaName={kafkaName}\n        kafkaPageLink={kafkaPageLink}\n        kafkaInstanceLink={kafkaInstanceLink}\n      />\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: 'noPadding' }}\n        className='pf-c-page__main-tabs'\n      >\n        <Tabs\n          activeKey={activeTabKey}\n          onSelect={handleTabClick}\n          isBox={false}\n          className='pf-m-page-insets'\n        >\n          <Tab\n            eventKey={1}\n            data-testid='pageTopic-tabConsumers'\n            title={\n              <TabTitleText>{t('consumerGroup.consumer_groups')}</TabTitleText>\n            }\n            tabContentId='kafka-ui-TabcontentConsumerGroupList'\n            tabContentRef={contentRefConsumerGroup}\n          ></Tab>\n          <Tab\n            eventKey={2}\n            title={<TabTitleText>{t('common.properties')}</TabTitleText>}\n            data-testid='pageTopic-tabProperties'\n            tabContentId='kafka-ui-TabcontentProperties'\n            tabContentRef={contentRefProperties}\n          />\n          <Tab\n            eventKey={3}\n            title={<TabTitleText>{t('common.schemas')}</TabTitleText>}\n            data-testid='pageTopic-tabSchemas'\n            tabContentId='kafka-ui-TabSchemas'\n            tabContentRef={contentRefSchemas}\n          />\n        </Tabs>\n      </PageSection>\n      <PageSection\n        variant={\n          activeTabKey === 2\n            ? PageSectionVariants.light\n            : PageSectionVariants.default\n        }\n      >\n        <TabContent\n          eventKey={1}\n          id='kafka-ui-TabcontentConsumerGroupList'\n          ref={contentRefConsumerGroup}\n          className='kafka-ui-m-full-height'\n          aria-label='Consumer groups.'\n          hidden={activeTabKey != 1}\n        >\n          <ConsumerGroups\n            consumerGroupByTopic={true}\n            topic={topicName}\n            rowDataTestId='tableTopicConsumers-row'\n          />\n        </TabContent>\n        <TabContent\n          eventKey={2}\n          id='kafka-ui-TabcontentProperties'\n          ref={contentRefProperties}\n          className='kafka-ui-m-full-height'\n          aria-label='Topic properties.'\n          hidden={activeTabKey != 2}\n        >\n          <TopicDetailView topic={topicDetail} deleteTopic={deleteTopic} />\n        </TabContent>\n        <TabContent\n          eventKey={3}\n          id='kafka-ui-TabSchemas'\n          ref={contentRefSchemas}\n          className='kafka-ui-m-full-height'\n          aria-label='Schemas mapping'\n          hidden={activeTabKey != 3}\n        >\n          {showSchemas}\n        </TabContent>\n      </PageSection>\n    </>\n  );\n};\n"],"names":["TopicDetailHead","topicName","kafkaName","kafkaInstanceLink","kafkaPageLink","t","useTranslation","className","Breadcrumb","BreadcrumbItem","to","PageSection","variant","PageSectionVariants","TextContent","Text","component","TextVariants","topic","deleteTopic","history","useHistory","useParams","basename","getBasename","useBasename","padding","default","Sidebar","hasGutter","SidebarPanel","JumpLinks","isVertical","label","offset","style","position","scrollableSelector","JumpLinksItem","key","href","SidebarContent","PageGroup","hasOverflowScroll","id","Split","SplitItem","isFilled","Form","FormSection","title","titleElement","TextWithLabelPopover","fieldId","btnAriaLabel","fieldLabel","fieldValue","name","popoverBody","popoverHeader","numPartitions","replicationFactor","Number","showUnlimited","Divider","Button","onClick","push","TopicDetailPage","activeTab","onError","showSchemas","useState","topicDetail","setTopicDetail","activeTabKey","setActiveTabKey","config","useContext","addAlert","useAlert","contentRefConsumerGroup","contentRefProperties","contentRefSchemas","showModal","useModal","onDeleteTopic","useEffect","then","response","data","code","error_message","status","AlertVariant","fetchTopicDetail","Tabs","activeKey","onSelect","event","tabIndex","isBox","Tab","eventKey","TabTitleText","tabContentId","tabContentRef","TabContent","ref","hidden","ConsumerGroups","consumerGroupByTopic","rowDataTestId","ModalType"],"sourceRoot":""}