{"version":3,"file":"9317.3e565123.js","mappings":"kJAoBaA,E,MAAmB,sBAC9BC,GAEWC,EAAe,WAC1B,WAAAC,YAAWH,K,iJC2Bb,QAjC2E,SAAC,G,IAC1EI,EAAQ,WACRC,EAAW,cACXC,EAAS,YACTC,EAAO,UACPC,EAAa,gBACbC,EAAiB,oBACjBC,EAAW,cAEX,OACE,kBAAC,EAAAC,gBAAe,CAACC,KAAM,KACrB,kBAAC,aAAsB,CAACC,MAAO,CAAEC,SAAUT,EAAaD,SAAQ,IAC9D,kBAAC,aAAyB,CACxBS,MAAO,CACLE,MAAO,GACPC,UAAW,EACXT,QAAO,EACPD,UAAS,EACTE,cAAa,EACbC,kBAAiB,EACjBC,YAAW,IAGb,kBAAC,EAAAO,cAAa,KACZ,kBAAC,IAAe,MAChB,kBAAC,IAAgB","sources":["webpack://kafka-ui/./src/contexts/federated.ts","webpack://kafka-ui/./src/modules/Topics/pages/TopicDetail/TopicDetailFederated.tsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { DeleteInstanceProps } from '@rhoas/app-services-ui-shared';\n\nexport type FederatedProps = Pick<DeleteInstanceProps, 'kafka'> & {\n  activeTab?: number;\n  kafkaName?: string;\n  kafkaPageLink?: string;\n  kafkaInstanceLink?: string;\n  topicName?: string;\n  onError?: (errorCode: number, message?: string) => void;\n  handleInstanceDrawer?: (isOpen: boolean, activeTab?: string) => void;\n  setIsOpenDeleteInstanceModal?: (isOpenModal: boolean) => void;\n  showMetrics?: JSX.Element | undefined;\n  onClickCreateTopic?: () => void;\n  onEditTopic?: (topicName: string | undefined) => void;\n  onCancelUpdateTopic?: () => void;\n  updateTopic?: (topicName?: string | undefined) => void;\n  showSchemas?: JSX.Element | undefined;\n};\n\nexport const FederatedContext = React.createContext<FederatedProps | undefined>(\n  undefined\n);\nexport const useFederated = (): FederatedProps | undefined =>\n  useContext(FederatedContext);\n","import React, { FunctionComponent } from 'react';\nimport { I18nextProvider } from 'react-i18next';\nimport { TopicDetailPage } from '@app/modules/Topics/pages/TopicDetail';\nimport {\n  ConfigContext,\n  FederatedContext,\n  FederatedProps,\n  IConfiguration,\n} from '@app/contexts';\nimport kafkai18n from '@app/i18n';\nimport { KafkaModalLoader } from '@app/components/KafkaModal';\nimport { ModalProvider } from '@rhoas/app-services-ui-components';\n\nexport type TopicDetailFederatedProps = FederatedProps &\n  IConfiguration & {\n    apiBasePath: string;\n  };\n\nconst TopicDetailFederated: FunctionComponent<TopicDetailFederatedProps> = ({\n  getToken,\n  apiBasePath,\n  kafkaName,\n  onError,\n  kafkaPageLink,\n  kafkaInstanceLink,\n  showSchemas,\n}) => {\n  return (\n    <I18nextProvider i18n={kafkai18n}>\n      <ConfigContext.Provider value={{ basePath: apiBasePath, getToken }}>\n        <FederatedContext.Provider\n          value={{\n            kafka: {},\n            activeTab: 2,\n            onError,\n            kafkaName,\n            kafkaPageLink,\n            kafkaInstanceLink,\n            showSchemas,\n          }}\n        >\n          <ModalProvider>\n            <TopicDetailPage />\n            <KafkaModalLoader />\n          </ModalProvider>\n        </FederatedContext.Provider>\n      </ConfigContext.Provider>\n    </I18nextProvider>\n  );\n};\n\nexport default TopicDetailFederated;\n"],"names":["FederatedContext","undefined","useFederated","useContext","getToken","apiBasePath","kafkaName","onError","kafkaPageLink","kafkaInstanceLink","showSchemas","I18nextProvider","i18n","value","basePath","kafka","activeTab","ModalProvider"],"sourceRoot":""}