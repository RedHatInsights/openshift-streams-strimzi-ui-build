{"version":3,"file":"4043.af2b7b06.js","mappings":"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","sources":["webpack://kafka-ui/./src/components/MainViewHeader/MainViewHeader.tsx","webpack://kafka-ui/./src/contexts/federated.ts","webpack://kafka-ui/./src/modules/ConsumerGroups/ConsumerGroupsFederated.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  Level,\n  PageSection,\n  PageSectionVariants,\n  Tab,\n  Tabs,\n  TabTitleText,\n  Title,\n} from '@patternfly/react-core';\nimport { useFederated } from '@app/contexts';\n\nexport type MainViewHeaderProps = {\n  activeTabKey: number;\n};\n\nconst MainViewHeader: React.FC<MainViewHeaderProps> = ({ activeTabKey }) => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n  const history = useHistory();\n\n  const { kafkaPageLink, kafkaName, handleInstanceDrawer, onDeleteInstance } =\n    useFederated() || {};\n\n  const [isOpen, setIsOpen] = useState<boolean>();\n\n  const onSelect = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const onSelectKebabOption = (activeTab: string) => {\n    handleInstanceDrawer && handleInstanceDrawer(true, activeTab);\n  };\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelectTab = (_, tabKey: string | number) => {\n    let redirectPath;\n    switch (tabKey) {\n      case 1:\n        redirectPath = 'dashboard';\n        break;\n      case 2:\n        redirectPath = 'topics';\n        break;\n      case 3:\n        redirectPath = 'consumer-groups';\n        break;\n      case 4:\n        redirectPath = 'acls';\n        break;\n      default:\n        redirectPath = 'dashboard';\n        break;\n    }\n\n    history.push(redirectPath);\n  };\n\n  const mainBreadcrumbs = (\n    <Breadcrumb>\n      <BreadcrumbItem to={kafkaPageLink || '#'}>\n        {t('common.kafka_instance')}\n      </BreadcrumbItem>\n      <BreadcrumbItem to='#' isActive>\n        {kafkaName || t('common.kafka_instance_name')}\n      </BreadcrumbItem>\n    </Breadcrumb>\n  );\n\n  const dropdownItems = [\n    <DropdownItem\n      key='view-kafka'\n      onClick={() => onSelectKebabOption('details')}\n    >\n      {t('common.view_instance')}\n    </DropdownItem>,\n    <DropdownItem\n      key='connect-kafka'\n      onClick={() => onSelectKebabOption('connection')}\n    >\n      {t('common.view_connection')}\n    </DropdownItem>,\n    <DropdownItem key='delete-kafka' onClick={onDeleteInstance}>\n      {t('common.delete_instance')}\n    </DropdownItem>,\n  ];\n\n  return (\n    <>\n      <section className='pf-c-page__main-breadcrumb'>\n        {mainBreadcrumbs}\n      </section>\n      <PageSection variant={PageSectionVariants.light}>\n        <Level>\n          <Title headingLevel='h1'>\n            {kafkaName ? kafkaName : t('common.kafka_instance_name')}\n          </Title>\n          <Dropdown\n            onSelect={onSelect}\n            toggle={<KebabToggle onToggle={onToggle} id='toggle-data-plane' />}\n            isOpen={isOpen}\n            isPlain\n            dropdownItems={dropdownItems}\n            position={DropdownPosition.right}\n          />\n        </Level>\n      </PageSection>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: 'noPadding' }}\n        className='pf-c-page__main-tabs'\n      >\n        <Tabs\n          activeKey={activeTabKey}\n          onSelect={onSelectTab}\n          data-testid='pageKafka-tabProperties'\n          className='pf-m-page-insets'\n        >\n          <Tab\n            title={<TabTitleText>{t('dashboard.dashboard')}</TabTitleText>}\n            eventKey={1}\n            data-testid='pageKafka-tabDashboard'\n            id='dashboard-tab-section'\n            aria-label={t('dashboard.dashboard')}\n            tabContentId='kafka-ui-TabcontentDashboard'\n          />\n          <Tab\n            title={<TabTitleText>{t('topic.topics')}</TabTitleText>}\n            eventKey={2}\n            data-testid='pageKafka-tabTopics'\n            id='topics-tab-section'\n            aria-label={t('topic.topics')}\n            tabContentId='kafka-ui-TabcontentTopicsList'\n          />\n          <Tab\n            title={\n              <TabTitleText>{t('consumerGroup.consumer_groups')}</TabTitleText>\n            }\n            eventKey={3}\n            data-testid='pageKafka-tabConsumers'\n            id='consumer-groups-tab-section'\n            aria-label={t('consumerGroup.consumer_groups')}\n            tabContentId='kafka-ui-TabcontentConsumersList'\n          />\n          <Tab\n            title={<TabTitleText>{t('permission.tab.label')}</TabTitleText>}\n            eventKey={4}\n            data-testid='pageKafka-tabPermissions'\n            id='permissions-tab-section'\n            aria-label={t('permission.tab.label')}\n            tabContentId='kafka-ui-TabcontentPermissions'\n          />\n        </Tabs>\n      </PageSection>\n    </>\n  );\n};\n\nexport { MainViewHeader };\n","import React, { useContext } from 'react';\nimport { DeleteInstanceProps } from '@rhoas/app-services-ui-shared';\n\nexport type FederatedProps = Pick<DeleteInstanceProps, 'kafka'> & {\n  activeTab?: number;\n  kafkaName?: string;\n  kafkaPageLink?: string;\n  kafkaInstanceLink?: string;\n  topicName?: string;\n  onError?: (errorCode: number, message?: string) => void;\n  handleInstanceDrawer?: (isOpen: boolean, activeTab?: string) => void;\n  setIsOpenDeleteInstanceModal?: (isOpenModal: boolean) => void;\n  showMetrics?: JSX.Element | undefined;\n  onClickCreateTopic?: () => void;\n  onEditTopic?: (topicName: string | undefined) => void;\n  onCancelUpdateTopic?: () => void;\n  updateTopic?: (topicName?: string | undefined) => void;\n  showSchemas?: JSX.Element | undefined;\n  redirectAfterDeleteInstance?: () => void;\n  onDeleteInstance?: () => void;\n};\n\nexport const FederatedContext = React.createContext<FederatedProps | undefined>(\n  undefined\n);\nexport const useFederated = (): FederatedProps | undefined =>\n  useContext(FederatedContext);\n","import React from 'react';\nimport { PageSection } from '@patternfly/react-core';\nimport { ConsumerGroups } from './ConsumerGroups';\nimport { ModalProvider } from '@rhoas/app-services-ui-components';\nimport {\n  MainViewHeader,\n  KafkaModalLoader,\n  PaginationProvider,\n} from '@app/components';\nimport {\n  FederatedProps,\n  FederatedContext,\n  ConfigContext,\n  IConfiguration,\n} from '@app/contexts';\nimport { useModal, ModalType } from '@rhoas/app-services-ui-shared';\n\ntype ConsumerGroupsFederatedProps = FederatedProps &\n  IConfiguration & {\n    apiBasePath: string;\n  };\n\nconst ConsumerGroupsFederated: React.FC<ConsumerGroupsFederatedProps> = ({\n  kafkaName,\n  kafkaPageLink,\n  handleInstanceDrawer,\n  redirectAfterDeleteInstance,\n  kafka,\n  onError,\n  apiBasePath,\n  getToken,\n}) => {\n  const { showModal } = useModal<ModalType.KasDeleteInstance>();\n\n  const onDeleteInstance = () => {\n    showModal &&\n      showModal(ModalType.KasDeleteInstance, {\n        kafka,\n        onDelete: redirectAfterDeleteInstance,\n      });\n  };\n\n  return (\n    <ConfigContext.Provider value={{ basePath: apiBasePath, getToken }}>\n      <FederatedContext.Provider\n        value={{\n          kafkaName,\n          kafkaPageLink,\n          handleInstanceDrawer,\n          kafka,\n          redirectAfterDeleteInstance,\n          onError,\n          onDeleteInstance,\n        }}\n      >\n        <ModalProvider>\n          <PaginationProvider>\n            <MainViewHeader activeTabKey={3} />\n            <PageSection isFilled>\n              <ConsumerGroups consumerGroupByTopic={false} />\n              <KafkaModalLoader />\n            </PageSection>\n          </PaginationProvider>\n        </ModalProvider>\n      </FederatedContext.Provider>\n    </ConfigContext.Provider>\n  );\n};\n\nexport default ConsumerGroupsFederated;\n"],"names":["MainViewHeader","activeTabKey","t","useTranslation","history","useHistory","kafkaPageLink","kafkaName","handleInstanceDrawer","onDeleteInstance","useState","isOpen","setIsOpen","onSelectKebabOption","activeTab","mainBreadcrumbs","Breadcrumb","BreadcrumbItem","to","isActive","dropdownItems","DropdownItem","key","onClick","className","PageSection","variant","PageSectionVariants","Level","Title","headingLevel","Dropdown","onSelect","toggle","KebabToggle","onToggle","id","isPlain","position","DropdownPosition","padding","default","Tabs","activeKey","_","tabKey","redirectPath","push","Tab","title","TabTitleText","eventKey","tabContentId","FederatedContext","undefined","useFederated","useContext","redirectAfterDeleteInstance","kafka","onError","apiBasePath","getToken","showModal","useModal","value","basePath","ModalType","onDelete","ModalProvider","isFilled","consumerGroupByTopic"],"sourceRoot":""}