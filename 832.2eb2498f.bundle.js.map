{"version":3,"sources":["webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/cubes-icon.js","webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js","webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/search-icon.js","webpack://kafka-ui/./src/Components/EmptyState/EmptyState.tsx","webpack://kafka-ui/./src/Components/Loading/Loading.tsx","webpack://kafka-ui/./src/Hooks/useTimeOut.ts","webpack://kafka-ui/./src/Services/ConsumerGroupsServices.ts","webpack://kafka-ui/./src/Modules/ConsumerGroups/ConsumerGroupList/Components/SearchConsumers.tsx","webpack://kafka-ui/./src/Modules/ConsumerGroups/ConsumerGroupList/Components/DeleteConsumerGroup.tsx","webpack://kafka-ui/./src/Modules/ConsumerGroups/ConsumerGroupList/Components/ConsumerGroupDetail.tsx","webpack://kafka-ui/./src/Modules/ConsumerGroups/ConsumerGroupList/Components/ConsumerGroupList.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/DeleteTopicsModal.tsx"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","MASEmptyStateVariant","EmptyState","titleProps","buttonProps","emptyStateIconProps","emptyStateProps","emptyStateBodyProps","children","variant","buttonVariant","ButtonVariant","onClick","restButtonProps","title","restTitleProps","body","restEmptyStateBodyProps","masEmptyStateVariant","NoItems","restEmptyStateProps","varaintConfig","NoConsumerGroups","EmptyStateVariant","icon","titleSize","TitleSizes","headingLevel","NoResult","size","getVariantConfig","EmptyStateIcon","Title","EmptyStateBody","Button","Loading","Bullseye","Spinner","useTimeout","callback","delay","savedCallback","useRef","useEffect","current","setTimeout","clearInterval","getConsumerGroups","config","limit","offset","topic","getToken","accessToken","basePath","getConsumerGroupList","data","deleteConsumerGroup","consumerGroupId","deleteConsumerGroupById","getConsumerGroupDetail","getConsumerGroupById","getConsumerGroupsByTopic","SearchConsumers","search","setSearch","t","useTranslation","InputGroup","SearchInput","id","type","placeholder","value","onChange","onClear","DeleteConsumerGroup","setDeleteModal","deleteModal","consumerName","onDeleteConsumer","useState","verificationText","setVerificationText","addAlert","useContext","onClose","Modal","ModalVariant","isOpen","titleIconVariant","showClose","actions","AlertVariant","response","error_message","key","isDisabled","toUpperCase","Text","htmlFor","dangerouslySetInnerHTML","__html","TextInput","autoFocus","ConsumerGroupDetail","setIsExpanded","consumerDetail","columns","dataLabel","rows","consumers","map","consumergroup","partition","groupId","memberId","logEndOffset","lag","DrawerPanelContent","widths","default","DrawerHead","TextContent","component","TextVariants","DrawerActions","DrawerCloseButton","DrawerPanelBody","Flex","FlexItem","reduce","prev","cur","Table","TableVariant","cells","TableHeader","TableBody","ConsumerGroupsList","onDeleteConsumerGroup","consumerGroupByTopic","rowDataId","detailsDataId","page","setPage","perPage","setPerPage","setOffset","consumerGroups","setConsumerGroups","loading","setLoading","isExpanded","consumerGroupDetail","setConsumerGroupDetail","setConsumerGroupId","filteredConsumerGroups","setFilteredConsumerGroups","fetchConsumerGroups","consumerGroupsData","trim","items","length","filter","consumerGroupsFiltered","includes","prevState","undefined","onSetPage","_event","pageNumber","onPerPageSelect","tableColumns","_","rowId","onDelete","panelContent","rowData","consumer","isInline","consumerData","fetchConsumerGroupDetail","props","Drawer","DrawerContent","Toolbar","ToolbarContent","ToolbarItem","Pagination","itemCount","widgetId","Divider","slice","PaginationVariant","DeleteTopics","topicName","onDeleteTopic"],"mappings":"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","file":"832.2eb2498f.bundle.js","sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.CubesIconConfig = {\n  name: 'CubesIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.CubesIcon = require('../createIcon').createIcon(exports.CubesIconConfig);\nexports[\"default\"] = exports.CubesIcon;","\"use strict\"\nexports.__esModule = true;\nexports.PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PlusCircleIcon = require('../createIcon').createIcon(exports.PlusCircleIconConfig);\nexports[\"default\"] = exports.PlusCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.SearchIconConfig = {\n  name: 'SearchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.SearchIcon = require('../createIcon').createIcon(exports.SearchIconConfig);\nexports[\"default\"] = exports.SearchIcon;","import React from 'react';\nimport {\n  Title,\n  Button,\n  EmptyState as PFEmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  TitleSizes,\n  TitleProps,\n  ButtonProps,\n  EmptyStateIconProps,\n  EmptyStateProps as PFEmptyStateProps,\n  EmptyStateBodyProps,\n  ButtonVariant,\n  EmptyStateVariant,\n} from '@patternfly/react-core';\nimport PlusCircleIcon from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\n\nimport CubesIcon from '@patternfly/react-icons/dist/js/icons/cubes-icon';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\n\nexport enum MASEmptyStateVariant {\n  NoConsumerGroups = 'NoConsumerGroups',\n  NoResult = 'NoResult',\n  NoItems = 'NoItems',\n}\n\nexport type EmptyStateProps = {\n  titleProps?: Omit<TitleProps, 'children' | 'headingLevel'> & {\n    headingLevel?: string;\n  };\n  emptyStateProps?: Omit<PFEmptyStateProps, 'children' | 'variant'> & {\n    variant?: MASEmptyStateVariant | EmptyStateVariant;\n  };\n  emptyStateIconProps?: EmptyStateIconProps;\n  emptyStateBodyProps?: Omit<EmptyStateBodyProps, 'children'> & {\n    body?: string | React.ReactNode;\n  };\n  buttonProps?: Omit<ButtonProps, 'children'> & {\n    title?: string;\n    onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    'data-testid'?: string;\n  };\n  children?: React.ReactNode;\n};\n\nexport const EmptyState: React.FC<EmptyStateProps> = ({\n  titleProps,\n  buttonProps,\n  emptyStateIconProps,\n  emptyStateProps,\n  emptyStateBodyProps,\n  children,\n}: EmptyStateProps) => {\n  const {\n    variant: buttonVariant = ButtonVariant.primary,\n    onClick,\n    ...restButtonProps\n  } = buttonProps || {};\n  const { title, ...restTitleProps } = titleProps || {};\n  const { body, ...restEmptyStateBodyProps } = emptyStateBodyProps || {};\n  const {\n    variant: masEmptyStateVariant = MASEmptyStateVariant.NoItems,\n    ...restEmptyStateProps\n  } = emptyStateProps || {};\n\n  const getVariantConfig = () => {\n    let varaintConfig: any = {};\n\n    switch (masEmptyStateVariant) {\n      case MASEmptyStateVariant.NoConsumerGroups:\n        varaintConfig = {\n          variant: EmptyStateVariant.large,\n          icon: CubesIcon,\n          titleSize: TitleSizes.xl,\n          headingLevel: 'h2',\n        };\n        break;\n      case MASEmptyStateVariant.NoItems:\n        varaintConfig = {\n          variant: EmptyStateVariant.large,\n          icon: PlusCircleIcon,\n          titleSize: TitleSizes.xl,\n          headingLevel: 'h2',\n        };\n        break;\n      case MASEmptyStateVariant.NoResult:\n        varaintConfig = {\n          variant: EmptyStateVariant.large,\n          icon: SearchIcon,\n          titleSize: TitleSizes.lg,\n          headingLevel: 'h2',\n        };\n        break;\n\n      default:\n        varaintConfig = {\n          variant: masEmptyStateVariant || EmptyStateVariant.full,\n          icon: emptyStateIconProps?.icon,\n          titleSize: titleProps?.size,\n          headingLevel: titleProps?.headingLevel,\n        };\n        break;\n    }\n\n    return varaintConfig;\n  };\n\n  const { variant, icon, titleSize, headingLevel } = getVariantConfig();\n\n  return (\n    <>\n      <PFEmptyState variant={variant} {...restEmptyStateProps}>\n        <EmptyStateIcon icon={icon} {...emptyStateIconProps} />\n        {title && (\n          <Title\n            headingLevel={headingLevel}\n            size={titleSize}\n            {...restTitleProps}\n          >\n            {title}\n          </Title>\n        )}\n        {body && (\n          <EmptyStateBody {...restEmptyStateBodyProps}>{body}</EmptyStateBody>\n        )}\n        {buttonProps?.title && (\n          <Button\n            variant={buttonVariant}\n            onClick={onClick}\n            {...restButtonProps}\n          >\n            {buttonProps?.title}\n          </Button>\n        )}\n        {children}\n      </PFEmptyState>\n    </>\n  );\n};\n","import React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nexport const Loading: React.FunctionComponent = () => (\n  <Bullseye>\n    <Spinner />\n  </Bullseye>\n);\n","import { useEffect, useRef } from 'react';\n\nexport const useTimeout: any = (callback: any, delay: number) => {\n  const savedCallback = useRef<any>();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setTimeout(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n    return;\n  }, [callback, delay]);\n};\n","import { AxiosResponse } from 'axios';\n\nimport { DefaultApi, ConsumerGroupList, ConsumerGroup } from '../OpenApi/api';\nimport { Configuration } from '../OpenApi';\nimport { IConfiguration } from '../Contexts';\n\nexport const getConsumerGroups = async (\n  config: IConfiguration | undefined,\n  limit?: number,\n  offset?: number,\n  topic?: string\n): Promise<ConsumerGroupList> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<ConsumerGroupList> = await api.getConsumerGroupList(\n    limit,\n    offset,\n    topic\n  );\n  return response.data;\n};\n\nexport const deleteConsumerGroup = async (\n  consumerGroupId: string,\n  config: IConfiguration | undefined\n): Promise<void> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  await api.deleteConsumerGroupById(consumerGroupId);\n  return;\n};\nexport const getConsumerGroupDetail = async (\n  consumerGroupId: string,\n  config: IConfiguration | undefined\n): Promise<ConsumerGroup> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<ConsumerGroup> = await api.getConsumerGroupById(\n    consumerGroupId\n  );\n  return response.data;\n};\nexport const getConsumerGroupsByTopic = async (\n  config: IConfiguration | undefined,\n  limit: number,\n  offset: number,\n  topic: string\n): Promise<ConsumerGroupList> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<ConsumerGroupList> = await api.getConsumerGroupList(\n    limit,\n    offset,\n    topic\n  );\n  return response.data;\n};\n","import React from 'react';\nimport { InputGroup, SearchInput } from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\n\nexport interface ISearchConsumerGroupProps {\n  setSearch: (value: string) => void;\n  search: string;\n}\n\nconst SearchConsumers: React.FunctionComponent<ISearchConsumerGroupProps> = ({\n  search,\n  setSearch,\n}) => {\n  const { t } = useTranslation();\n\n  const onChangeInput = (value: string) => {\n    setSearch(value);\n  };\n  const onClear = () => {\n    setSearch('');\n  };\n  return (\n    <InputGroup>\n      <SearchInput\n        name='searchName'\n        id='search-consumers-input'\n        type='search'\n        aria-label={t('consumerGroup.search')}\n        placeholder={t('common.search')}\n        value={search}\n        onChange={onChangeInput}\n        onClear={onClear}\n      />\n    </InputGroup>\n  );\n};\nexport { SearchConsumers };\n","import React, { useContext, useState } from 'react';\nimport {\n  Modal,\n  ModalVariant,\n  Button,\n  Text,\n  AlertVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport { deleteConsumerGroup } from '../../../../Services/ConsumerGroupsServices';\nimport { ConfigContext } from '../../../../Contexts';\nimport { AlertContext } from '../../../../Contexts/Alert/Context';\nimport { useTranslation } from 'react-i18next';\nexport interface IDeleteConsumer {\n  setDeleteModal: (value: boolean) => void;\n  deleteModal: boolean;\n  consumerName?: string;\n  onDeleteConsumer: () => void;\n}\nexport const DeleteConsumerGroup: React.FunctionComponent<IDeleteConsumer> = ({\n  setDeleteModal,\n  deleteModal,\n  consumerName,\n  onDeleteConsumer,\n}) => {\n  const { t } = useTranslation();\n\n  const [verificationText, setVerificationText] = useState<string>('');\n  const { addAlert } = useContext(AlertContext);\n  const onClose = () => {\n    setDeleteModal(false);\n  };\n\n  const onDelete = async () => {\n    try {\n      consumerName && (await deleteConsumerGroup(consumerName, config));\n      addAlert(\n        t('consumerGroup.consumergroup_successfully_deleted', {\n          name: consumerName,\n        }),\n        AlertVariant.success\n      );\n    } catch (err) {\n      addAlert(err.response.data.error_message, AlertVariant.danger);\n    }\n    onDeleteConsumer();\n    setDeleteModal(false);\n  };\n\n  const config = useContext(ConfigContext);\n\n  const handleVerificationTextChange = (value) => {\n    setVerificationText(value);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.small}\n      isOpen={deleteModal}\n      aria-label={t('consumerGroup.delete')}\n      title={t('consumerGroup.delete')}\n      titleIconVariant='warning'\n      showClose={true}\n      aria-describedby='modal-message'\n      onClose={onClose}\n      actions={[\n        <Button\n          variant='danger'\n          onClick={onDelete}\n          key={1}\n          isDisabled={verificationText.toUpperCase() != 'DELETE'}\n        >\n          {t('common.delete')}\n        </Button>,\n        <Button variant='link' onClick={onClose} key={2}>\n          {t('common.cancel')}\n        </Button>,\n      ]}\n    >\n      <Text id='modal-message'>\n        <label\n          htmlFor='instance-name-input'\n          dangerouslySetInnerHTML={{\n            __html: t('common.confirm_delete_modal_text', {\n              name: consumerName,\n            }),\n          }}\n        />\n      </Text>\n\n      <br />\n      <label htmlFor='delete-text-input'>{t('common.confirm_delete')}</label>\n      <TextInput\n        value={verificationText}\n        id='delete-text-input'\n        name='delete-text-input'\n        type='text'\n        onChange={handleVerificationTextChange}\n        autoFocus={true}\n      />\n    </Modal>\n  );\n};\n","import React from 'react';\nimport {\n  DrawerPanelContent,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerActions,\n  DrawerCloseButton,\n  Flex,\n  FlexItem,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableVariant,\n} from '@patternfly/react-table';\nimport { ConsumerGroup } from '../../../../OpenApi';\nimport { useTranslation } from 'react-i18next';\n\nexport interface IConsumerGroupDetailProps {\n  setIsExpanded: (value: boolean) => void;\n  consumerDetail: ConsumerGroup | undefined;\n}\n\nexport const ConsumerGroupDetail: React.FunctionComponent<IConsumerGroupDetailProps> = ({\n  setIsExpanded,\n  consumerDetail,\n}) => {\n  const { t } = useTranslation();\n\n  const columns = [\n    t('consumerGroup.partition'),\n    `${t('consumerGroup.client_id')} + ${t('consumerGroup.customer_id')}`,\n    t('consumerGroup.current_offset'),\n    t('consumerGroup.log_end_offset'),\n    t('consumerGroup.offset_lag'),\n    {\n      title: '',\n      dataLabel: t('common.action'),\n    },\n  ];\n\n  const rows =\n    consumerDetail &&\n    consumerDetail.consumers.map((consumergroup) => [\n      consumergroup.partition,\n      consumergroup.groupId + consumergroup.memberId,\n      consumergroup.offset,\n      consumergroup.logEndOffset,\n      consumergroup.lag,\n    ]);\n\n  const onCloseClick = () => {\n    setIsExpanded(false);\n  };\n\n  return (\n    <DrawerPanelContent widths={{ default: 'width_66' }}>\n      <DrawerHead>\n        <span>\n          <TextContent>\n            <Text>{t('consumerGroup.consumer_group_id')}</Text>\n            <Text component={TextVariants.h1}>\n              {consumerDetail && consumerDetail.groupId}\n            </Text>\n          </TextContent>\n        </span>\n        <DrawerActions>\n          <DrawerCloseButton onClick={onCloseClick} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerPanelBody>\n        <TextContent>\n          <Flex>\n            <FlexItem>\n              <Text component={TextVariants.h4} size={50}>\n                {t('consumerGroup.active_members')}\n              </Text>\n              <Text component={TextVariants.h2}>\n                {consumerDetail &&\n                  consumerDetail.consumers.reduce(function (prev, cur) {\n                    return prev + (cur.partition != -1 ? 1 : 0);\n                  }, 0)}\n              </Text>\n            </FlexItem>\n            <FlexItem>\n              <Text component={TextVariants.h4}>\n                {t('consumerGroup.partitions_with_lag')}\n              </Text>\n              <Text component={TextVariants.h2}>\n                {consumerDetail &&\n                  consumerDetail.consumers.reduce(function (prev, cur) {\n                    return prev + (cur.lag > 0 ? 1 : 0);\n                  }, 0)}\n              </Text>\n            </FlexItem>\n          </Flex>\n        </TextContent>\n      </DrawerPanelBody>\n\n      <Table\n        aria-label={t('consumerGroup.consumer_group_info_table_aria')}\n        variant={TableVariant.compact}\n        cells={columns}\n        rows={rows}\n      >\n        <TableHeader />\n        <TableBody />\n      </Table>\n    </DrawerPanelContent>\n  );\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport {\n  Divider,\n  Pagination,\n  PaginationVariant,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n  AlertVariant,\n  Button,\n  Drawer,\n  DrawerContent,\n} from '@patternfly/react-core';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n} from '@patternfly/react-table';\n\nimport {\n  EmptyState,\n  MASEmptyStateVariant,\n} from '../../../../Components/EmptyState/EmptyState';\n\nimport {\n  getConsumerGroups,\n  getConsumerGroupDetail,\n  getConsumerGroupsByTopic,\n} from '../../../../Services/ConsumerGroupsServices';\nimport { ConfigContext } from '../../../../Contexts';\nimport { ConsumerGroupList, ConsumerGroup } from '../../../../OpenApi';\nimport { Loading } from '../../../../Components/Loading/Loading';\nimport { AlertContext } from '../../../../Contexts/Alert';\nimport { useTimeout } from '../../../../Hooks/useTimeOut';\nimport { SearchConsumers } from './SearchConsumers';\nimport { DeleteConsumerGroup } from './DeleteConsumerGroup';\nimport { ConsumerGroupDetail } from './ConsumerGroupDetail';\nimport { useTranslation } from 'react-i18next';\n\nexport interface IConsumerGroupsList {\n  onDeleteConsumerGroup: () => void;\n  consumerGroupByTopic: boolean;\n  topic?: string;\n  rowDataId?: string;\n  detailsDataId?: string;\n}\n\nexport const ConsumerGroupsList: React.FunctionComponent<IConsumerGroupsList> = ({\n  onDeleteConsumerGroup,\n  consumerGroupByTopic,\n  topic,\n  rowDataId,\n  detailsDataId,\n}) => {\n  const [page, setPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(10);\n  const [offset, setOffset] = useState<number>(0);\n  const [consumerGroups, setConsumerGroups] = useState<ConsumerGroupList>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n  const [search, setSearch] = useState<string>('');\n  const [\n    consumerGroupDetail,\n    setConsumerGroupDetail,\n  ] = useState<ConsumerGroup>();\n  const [consumerGroupId, setConsumerGroupId] = useState<string | undefined>();\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [\n    filteredConsumerGroups,\n    setFilteredConsumerGroups,\n  ] = useState<ConsumerGroupList>();\n\n  const config = useContext(ConfigContext);\n  const { addAlert } = useContext(AlertContext);\n\n  const { t } = useTranslation();\n\n  const fetchConsumerGroups = async () => {\n    if (consumerGroupByTopic && topic) {\n      try {\n        const consumerGroupsData = await getConsumerGroupsByTopic(\n          config,\n          100,\n          offset,\n          topic\n        );\n        if (consumerGroupsData) {\n          setConsumerGroups(consumerGroupsData);\n          setFilteredConsumerGroups(consumerGroupsData);\n        }\n      } catch (err) {\n        addAlert(err.response.data.error_message, AlertVariant.danger);\n      }\n      setLoading(false);\n    } else {\n      try {\n        const consumerGroupsData = await getConsumerGroups(config);\n        if (consumerGroupsData) {\n          setConsumerGroups(consumerGroupsData);\n          setFilteredConsumerGroups(consumerGroupsData);\n        }\n      } catch (err) {\n        addAlert(err.response.data.error_message, AlertVariant.danger);\n      }\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetchConsumerGroups();\n  }, [deleteModal]);\n\n  useEffect(() => {\n    if (\n      search &&\n      search.trim() != '' &&\n      consumerGroups?.items &&\n      consumerGroups.items.length > 0\n    ) {\n      const filterSearch = consumerGroups?.items.filter(\n        (consumerGroupsFiltered) =>\n          consumerGroupsFiltered?.groupId &&\n          consumerGroupsFiltered.groupId.includes(search)\n      );\n      setFilteredConsumerGroups((prevState) =>\n        prevState\n          ? {\n              ...prevState,\n              items: filterSearch,\n            }\n          : undefined\n      );\n    } else {\n      setFilteredConsumerGroups(consumerGroups);\n    }\n  }, [search, consumerGroups]);\n\n  useTimeout(() => fetchConsumerGroups(), 5000);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const onSetPage = (_event, pageNumber: number) => {\n    setPage(pageNumber);\n    setOffset(page * perPage);\n  };\n\n  const onPerPageSelect = (_event, perPage: number) => {\n    setPerPage(perPage);\n  };\n\n  const tableColumns = [\n    { title: t('consumerGroup.consumer_group_id') },\n    { title: t('consumerGroup.active_members') },\n    { title: t('consumerGroup.partitions_with_lag') },\n  ];\n  const onDelete = (rowId: any) => {\n    if (filteredConsumerGroups?.items) {\n      setConsumerGroupId(filteredConsumerGroups.items[rowId].groupId);\n      setDeleteModal(true);\n    }\n  };\n\n  const actions = [\n    {\n      title: t('common.delete'),\n      ['data-testid']: 'tableConsumers-actionDelete',\n      onClick: (_, rowId) => onDelete(rowId),\n    },\n  ];\n\n  const fetchConsumerGroupDetail = async (consumerGroupId) => {\n    try {\n      const consumerData = await getConsumerGroupDetail(\n        consumerGroupId,\n        config\n      );\n      if (consumerData) {\n        setConsumerGroupDetail(consumerData);\n      }\n    } catch (err) {\n      addAlert(err.response.data.error_message, AlertVariant.danger);\n    }\n    setIsExpanded(true);\n  };\n\n  const panelContent = (\n    <ConsumerGroupDetail\n      setIsExpanded={setIsExpanded}\n      consumerDetail={consumerGroupDetail}\n    />\n  );\n  const rowData =\n    filteredConsumerGroups?.items.map((consumer) => [\n      {\n        title: (\n          <Button\n            variant='link'\n            isInline\n            onClick={() => fetchConsumerGroupDetail(consumer.groupId)}\n            data-testid={\n              detailsDataId ? detailsDataId : 'tableConsumers-actionDetails'\n            }\n          >\n            {consumer.groupId}\n          </Button>\n        ),\n        props: { 'data-testid': rowDataId ? rowDataId : 'tableConsumers-row' },\n      },\n\n      consumer.consumers.reduce(function (prev, cur) {\n        return prev + (cur.partition != -1 ? 1 : 0);\n      }, 0),\n      consumer.consumers.reduce(function (prev, cur) {\n        return prev + (cur.lag > 0 ? 1 : 0);\n      }, 0),\n    ]) || [];\n\n  return (\n    <>\n      {rowData.length < 1 && search.length < 1 ? (\n        <EmptyState\n          emptyStateProps={{\n            variant: MASEmptyStateVariant.NoConsumerGroups,\n          }}\n          titleProps={{\n            title: t('consumerGroup.empty_consumer_title'),\n          }}\n          emptyStateBodyProps={{\n            body: t('consumerGroup.empty_consumer_body'),\n          }}\n        />\n      ) : (\n        <Drawer isExpanded={isExpanded}>\n          <DrawerContent panelContent={panelContent}>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>\n                  <SearchConsumers search={search} setSearch={setSearch} />\n                </ToolbarItem>\n                <ToolbarItem variant='pagination'>\n                  <Pagination\n                    itemCount={rowData.length}\n                    perPage={perPage}\n                    page={page}\n                    onSetPage={onSetPage}\n                    widgetId='consumer-group-pagination-top'\n                    onPerPageSelect={onPerPageSelect}\n                  />\n                </ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n            <Divider />\n            {consumerGroupByTopic ? (\n              <Table\n                aria-label='Compact Table'\n                variant={TableVariant.compact}\n                cells={tableColumns}\n                rows={\n                  page != 1\n                    ? rowData.slice(offset, offset + perPage)\n                    : rowData.slice(0, perPage)\n                }\n              >\n                <TableHeader />\n                <TableBody />\n              </Table>\n            ) : (\n              <Table\n                aria-label='Compact Table'\n                variant={TableVariant.compact}\n                cells={tableColumns}\n                rows={\n                  page != 1\n                    ? rowData.slice(offset, offset + perPage)\n                    : rowData.slice(0, perPage)\n                }\n                actions={actions}\n              >\n                <TableHeader />\n                <TableBody />\n              </Table>\n            )}\n            {rowData.length < 1 && search.length > 0 ? (\n              <EmptyState\n                emptyStateProps={{\n                  variant: MASEmptyStateVariant.NoResult,\n                }}\n                titleProps={{\n                  title: t('common.no_results_title'),\n                }}\n                emptyStateBodyProps={{\n                  body: t('common.no_results_body'),\n                }}\n              />\n            ) : (\n              <Pagination\n                itemCount={rowData.length}\n                perPage={perPage}\n                page={page}\n                onSetPage={onSetPage}\n                widgetId='consumer-group-pagination-bottom'\n                onPerPageSelect={onPerPageSelect}\n                offset={0}\n                variant={PaginationVariant.bottom}\n              />\n            )}\n          </DrawerContent>\n        </Drawer>\n      )}\n      {deleteModal && (\n        <DeleteConsumerGroup\n          consumerName={consumerGroupId}\n          setDeleteModal={setDeleteModal}\n          deleteModal={deleteModal}\n          onDeleteConsumer={onDeleteConsumerGroup}\n        />\n      )}\n    </>\n  );\n};\n","import React, { useContext, useState } from 'react';\nimport {\n  Modal,\n  ModalVariant,\n  Button,\n  Text,\n  AlertVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport { deleteTopic } from '../../../../Services/TopicServices';\nimport { ConfigContext } from '../../../../Contexts';\nimport { AlertContext } from '../../../../Contexts/Alert/Context';\nimport { useTranslation } from 'react-i18next';\nexport interface IDeleteTopics {\n  setDeleteModal: (value: boolean) => void;\n  deleteModal: boolean;\n  topicName?: string;\n  onDeleteTopic: () => void;\n}\nexport const DeleteTopics: React.FunctionComponent<IDeleteTopics> = ({\n  setDeleteModal,\n  deleteModal,\n  topicName,\n  onDeleteTopic,\n}) => {\n  const [verificationText, setVerificationText] = useState<string>('');\n  const { addAlert } = useContext(AlertContext);\n  const onClose = () => {\n    setDeleteModal(false);\n  };\n\n  const { t } = useTranslation();\n\n  const onDelete = async () => {\n    try {\n      topicName && (await deleteTopic(topicName, config));\n      addAlert(\n        t('topic.topic_successfully_deleted', { name: topicName }),\n        AlertVariant.success\n      );\n    } catch (err) {\n      addAlert(err.response.data.error_message, AlertVariant.danger);\n    }\n    onDeleteTopic();\n    setDeleteModal(false);\n  };\n\n  const config = useContext(ConfigContext);\n\n  const handleVerificationTextChange = (value) => {\n    setVerificationText(value);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.small}\n      isOpen={deleteModal}\n      aria-label={t('topic.delete_modal_title')}\n      title={t('topic.delete_modal_title')}\n      titleIconVariant='warning'\n      showClose={true}\n      aria-describedby='modal-message'\n      onClose={onClose}\n      actions={[\n        <Button\n          variant='danger'\n          onClick={onDelete}\n          key={1}\n          data-testid='modalDeleteTopic-buttonDelete'\n          isDisabled={verificationText.toUpperCase() != 'DELETE'}\n        >\n          {t('common.delete')}\n        </Button>,\n        <Button variant='link' onClick={onClose} key={2}>\n          {t('common.cancel')}\n        </Button>,\n      ]}\n    >\n      <Text id='modal-message'>\n        {' '}\n        <label\n          htmlFor='instance-name-input'\n          dangerouslySetInnerHTML={{\n            __html: t('common.confirm_delete_modal_text', { name: topicName }),\n          }}\n        />\n      </Text>\n\n      <br />\n      <label htmlFor='delete-text-input'>{t('common.confirm_delete')}</label>\n      <TextInput\n        value={verificationText}\n        id='delete-text-input'\n        name='delete-text-input'\n        type='text'\n        onChange={handleVerificationTextChange}\n        autoFocus={true}\n      />\n    </Modal>\n  );\n};\n"],"sourceRoot":""}