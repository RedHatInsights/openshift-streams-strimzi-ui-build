{"version":3,"file":"4043.a0234b1d.js","mappings":"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","sources":["webpack://kafka-ui/./src/components/MainViewHeader/MainViewHeader.tsx","webpack://kafka-ui/./src/contexts/federated.ts","webpack://kafka-ui/./src/modules/ConsumerGroups/ConsumerGroupsFederated.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  Level,\n  PageSection,\n  PageSectionVariants,\n  Tab,\n  Tabs,\n  TabsProps,\n  TabTitleText,\n  Title,\n} from '@patternfly/react-core';\nimport { useFederated } from '@app/contexts';\n\nexport type MainViewHeaderProps = {\n  activeTabKey: number;\n};\n\nconst MainViewHeader: React.FC<MainViewHeaderProps> = ({ activeTabKey }) => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n  const history = useHistory();\n\n  const { kafkaPageLink, kafkaName, handleInstanceDrawer, onDeleteInstance } =\n    useFederated() || {};\n\n  const [isOpen, setIsOpen] = useState<boolean>();\n\n  const onSelect = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const onSelectKebabOption = (activeTab: string) => {\n    handleInstanceDrawer && handleInstanceDrawer(true, activeTab);\n  };\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelectTab: TabsProps['onSelect'] = (_, tabKey: string | number) => {\n    let redirectPath;\n    switch (tabKey) {\n      case 1:\n        redirectPath = 'dashboard';\n        break;\n      case 2:\n        redirectPath = 'topics';\n        break;\n      case 3:\n        redirectPath = 'consumer-groups';\n        break;\n      case 4:\n        redirectPath = 'acls';\n        break;\n      default:\n        redirectPath = 'dashboard';\n        break;\n    }\n\n    history.push(redirectPath);\n  };\n\n  const mainBreadcrumbs = (\n    <Breadcrumb ouiaId={'breadcrumb'}>\n      <BreadcrumbItem\n        render={() => (\n          <Link to={kafkaPageLink || '#'}>{t('common.kafka_instance')}</Link>\n        )}\n      />\n      <BreadcrumbItem to='#' isActive>\n        {kafkaName || t('common.kafka_instance_name')}\n      </BreadcrumbItem>\n    </Breadcrumb>\n  );\n\n  const dropdownItems = [\n    <DropdownItem\n      key='view-kafka'\n      onClick={() => onSelectKebabOption('details')}\n    >\n      {t('common.view_instance')}\n    </DropdownItem>,\n    <DropdownItem\n      key='connect-kafka'\n      onClick={() => onSelectKebabOption('connection')}\n    >\n      {t('common.view_connection')}\n    </DropdownItem>,\n    <DropdownItem key='delete-kafka' onClick={onDeleteInstance}>\n      {t('common.delete_instance')}\n    </DropdownItem>,\n  ];\n\n  return (\n    <>\n      <section className='pf-c-page__main-breadcrumb'>\n        {mainBreadcrumbs}\n      </section>\n      <PageSection variant={PageSectionVariants.light}>\n        <Level>\n          <Title headingLevel='h1'>\n            {kafkaName ? kafkaName : t('common.kafka_instance_name')}\n          </Title>\n          <Dropdown\n            onSelect={onSelect}\n            toggle={\n              <KebabToggle\n                data-ouia-component-id={'kebab-menu'}\n                onToggle={onToggle}\n                id='toggle-data-plane'\n              />\n            }\n            isOpen={isOpen}\n            isPlain\n            dropdownItems={dropdownItems}\n            position={DropdownPosition.right}\n          />\n        </Level>\n      </PageSection>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: 'noPadding' }}\n        className='pf-c-page__main-tabs'\n      >\n        <Tabs\n          activeKey={activeTabKey}\n          onSelect={onSelectTab}\n          data-testid='pageKafka-tabProperties'\n          className='pf-m-page-insets'\n        >\n          <Tab\n            title={<TabTitleText>{t('dashboard.dashboard')}</TabTitleText>}\n            eventKey={1}\n            data-testid='pageKafka-tabDashboard'\n            id='dashboard-tab-section'\n            aria-label={t('dashboard.dashboard')}\n            tabContentId='kafka-ui-TabcontentDashboard'\n            ouiaId={'tab-Dashboard'}\n          />\n          <Tab\n            title={<TabTitleText>{t('topic.topics')}</TabTitleText>}\n            eventKey={2}\n            data-testid='pageKafka-tabTopics'\n            id='topics-tab-section'\n            aria-label={t('topic.topics')}\n            tabContentId='kafka-ui-TabcontentTopicsList'\n            ouiaId={'tab-Topics'}\n          />\n          <Tab\n            title={\n              <TabTitleText>{t('consumerGroup.consumer_groups')}</TabTitleText>\n            }\n            eventKey={3}\n            data-testid='pageKafka-tabConsumers'\n            id='consumer-groups-tab-section'\n            aria-label={t('consumerGroup.consumer_groups')}\n            tabContentId='kafka-ui-TabcontentConsumersList'\n            ouiaId={'tab-Consumers'}\n          />\n          <Tab\n            title={<TabTitleText>{t('permission.tab.label')}</TabTitleText>}\n            eventKey={4}\n            data-testid='pageKafka-tabPermissions'\n            id='permissions-tab-section'\n            aria-label={t('permission.tab.label')}\n            tabContentId='kafka-ui-TabcontentPermissions'\n            ouiaId={'tab-Permissions'}\n          />\n        </Tabs>\n      </PageSection>\n    </>\n  );\n};\n\nexport { MainViewHeader };\n","import React, { useContext } from 'react';\nimport { KafkaInstance } from '@rhoas/app-services-ui-shared';\n\nexport type KafkaInstanceWithTopicConfig = KafkaInstance & {\n  size?: {\n    replication_factor?: number;\n    min_in_sync_replicas?: number;\n  };\n};\n\nexport type FederatedProps = {\n  activeTab?: number;\n  kafkaName?: string;\n  kafkaPageLink?: string;\n  kafkaInstanceLink?: string;\n  topicName?: string;\n  onError?: (errorCode: number, message?: string) => void;\n  handleInstanceDrawer?: (isOpen: boolean, activeTab?: string) => void;\n  setIsOpenDeleteInstanceModal?: (isOpenModal: boolean) => void;\n  showMetrics?: JSX.Element | undefined;\n  onClickCreateTopic?: () => void;\n  onEditTopic?: (topicName: string | undefined) => void;\n  onCancelUpdateTopic?: () => void;\n  updateTopic?: (topicName?: string | undefined) => void;\n  showSchemas?: JSX.Element | undefined;\n  redirectAfterDeleteInstance?: () => void;\n  onDeleteInstance?: () => void;\n  kafka: KafkaInstanceWithTopicConfig;\n  replicationFactor?: number;\n  minInSyncReplicas?: number;\n  isMultiAZ?: boolean;\n};\n\nexport const FederatedContext = React.createContext<FederatedProps | undefined>(\n  undefined\n);\nexport const useFederated = (): FederatedProps | undefined =>\n  useContext(FederatedContext);\n","import React from 'react';\nimport { PageSection } from '@patternfly/react-core';\nimport { ConsumerGroups } from './ConsumerGroups';\nimport { ModalProvider } from '@rhoas/app-services-ui-components';\nimport {\n  MainViewHeader,\n  KafkaModalLoader,\n  PaginationProvider,\n} from '@app/components';\nimport {\n  FederatedProps,\n  FederatedContext,\n  ConfigContext,\n  IConfiguration,\n} from '@app/contexts';\nimport { useModal, ModalType } from '@rhoas/app-services-ui-shared';\n\ntype ConsumerGroupsFederatedProps = FederatedProps &\n  IConfiguration & {\n    apiBasePath: string;\n  };\n\nconst ConsumerGroupsFederated: React.FC<ConsumerGroupsFederatedProps> = ({\n  kafkaName,\n  kafkaPageLink,\n  handleInstanceDrawer,\n  redirectAfterDeleteInstance,\n  kafka,\n  onError,\n  apiBasePath,\n  getToken,\n}) => {\n  const { showModal } = useModal<ModalType.KasDeleteInstance>();\n\n  const onDeleteInstance = () => {\n    showModal &&\n      showModal(ModalType.KasDeleteInstance, {\n        kafka,\n        onDelete: redirectAfterDeleteInstance,\n      });\n  };\n\n  return (\n    <ConfigContext.Provider value={{ basePath: apiBasePath, getToken }}>\n      <FederatedContext.Provider\n        value={{\n          kafkaName,\n          kafkaPageLink,\n          handleInstanceDrawer,\n          kafka,\n          redirectAfterDeleteInstance,\n          onError,\n          onDeleteInstance,\n        }}\n      >\n        <ModalProvider>\n          <PaginationProvider>\n            <MainViewHeader activeTabKey={3} />\n            <PageSection hasOverflowScroll={true}>\n              <ConsumerGroups consumerGroupByTopic={false} />\n              <KafkaModalLoader />\n            </PageSection>\n          </PaginationProvider>\n        </ModalProvider>\n      </FederatedContext.Provider>\n    </ConfigContext.Provider>\n  );\n};\n\nexport default ConsumerGroupsFederated;\n"],"names":["MainViewHeader","activeTabKey","t","useTranslation","history","useHistory","kafkaPageLink","kafkaName","handleInstanceDrawer","onDeleteInstance","isOpen","setIsOpen","useState","onSelectKebabOption","activeTab","mainBreadcrumbs","Breadcrumb","ouiaId","BreadcrumbItem","render","Link","to","isActive","dropdownItems","DropdownItem","onClick","className","PageSection","variant","PageSectionVariants","Level","Title","headingLevel","Dropdown","onSelect","toggle","KebabToggle","onToggle","id","isPlain","position","DropdownPosition","padding","default","Tabs","activeKey","_","tabKey","redirectPath","push","Tab","title","TabTitleText","eventKey","tabContentId","FederatedContext","undefined","useFederated","useContext","redirectAfterDeleteInstance","kafka","onError","apiBasePath","getToken","showModal","useModal","value","basePath","ModalType","onDelete","ModalProvider","hasOverflowScroll","consumerGroupByTopic"],"sourceRoot":""}