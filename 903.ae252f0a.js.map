{"version":3,"file":"903.ae252f0a.js","mappings":"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","sources":["webpack://kafka-ui/./src/modules/Topics/components/TopicDetailView/TopicDetailView.tsx","webpack://kafka-ui/./src/modules/Topics/pages/TopicDetail/TopicDetailPage.tsx","webpack://kafka-ui/./src/utils/common.ts"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useBasename } from '@bf2/ui-shared';\nimport {\n  PageSection,\n  PageGroup,\n  JumpLinks,\n  JumpLinksItem,\n  TextContent,\n  Text,\n  TextVariants,\n  Button,\n  Divider,\n  Sidebar,\n  SidebarContent,\n  SidebarPanel,\n  SplitItem,\n  Split,\n  Form,\n  FormSection,\n} from '@patternfly/react-core';\nimport {\n  DEFAULT_MESSAGE_TIMESTAMP_TYPE,\n  DEFAULT_DELETE_RETENTION_TIME,\n  DEFAULT_FILE_DELETE_DELAY,\n  DEFAULT_INDEX_INTERVAL_SIZE,\n  DEFAULT_LOG_SEGMENT_SIZE,\n  DEFAULT_MAXIMUM_MESSAGE_BYTES,\n  DEFAULT_MINIMUM_COMPACTION_LAG_TIME,\n  DEFAULT_MIN_CLEANBLE_RATIO,\n  DEFAULT_MIN_INSYNC_REPLICAS,\n  DEFAULT_SEGMENT_INDEX_SIZE,\n  DEFAULT_SEGMENT_JITTER_TIME,\n  DEFAULT_SEGMENT_TIME,\n  DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF,\n  DEFAULT_FLUSH_INTERVAL_MESSAGES,\n  DEFAULT_FLUSH_INTERVAL_TIME,\n} from '@app/constant';\nimport './TopicDetailView.css';\nimport { TextWithLabelPopover } from '@app/components/TextWithLabelPopover';\nimport { IAdvancedTopic } from '@app/modules/Topics/components/CreateTopicWizard';\nimport { convertRetentionSize, convertRetentionTime } from '@app/utils';\n\nexport type TopicViewDetailProps = {\n  /** Topic details */\n  topic: IAdvancedTopic;\n  /** Method to delete topic */\n  deleteTopic: () => void;\n};\n\nexport const TopicDetailView: React.FunctionComponent<TopicViewDetailProps> = ({\n  topic,\n  deleteTopic,\n}) => {\n  const history = useHistory();\n  const { topicName } = useParams<{ topicName: string }>();\n  const { getBasename } = useBasename() || { getBasename: () => '' };\n  const basename = getBasename();\n  const { t } = useTranslation();\n\n  const updateTopic = () => {\n    history.push(`${basename}/topic/update/${topicName}`);\n  };\n\n  return (\n    <PageSection padding={{ default: 'noPadding' }}>\n      <Sidebar hasGutter>\n        <SidebarPanel variant='sticky'>\n          <JumpLinks\n            isVertical\n            label={t('topic.jump_to_section')}\n            scrollableSelector='#scrollablePageMain'\n            offset={-164} // for header\n            style={{ position: 'sticky' }}\n          >\n            <JumpLinksItem key={0} href='#core-configuration'>\n              {t('topic.core_configuration')}\n            </JumpLinksItem>\n            <JumpLinksItem key={1} href='#messages'>\n              {t('topic.messages')}\n            </JumpLinksItem>\n            <JumpLinksItem key={2} href='#log'>\n              {t('topic.log')}\n            </JumpLinksItem>\n            <JumpLinksItem key={3} href='#replication'>\n              {t('topic.replication')}\n            </JumpLinksItem>\n            <JumpLinksItem key={4} href='#cleanup'>\n              {t('common.cleanup')}\n            </JumpLinksItem>\n            <JumpLinksItem key={5} href='#index'>\n              {t('topic.index')}\n            </JumpLinksItem>\n            <JumpLinksItem key={6} href='#flush'>\n              {t('topic.flush')}\n            </JumpLinksItem>\n            <JumpLinksItem key={7} href='#delete'>\n              {t('common.delete')}\n            </JumpLinksItem>\n          </JumpLinks>\n        </SidebarPanel>\n        <SidebarContent>\n          <PageGroup hasOverflowScroll id='topic-detail-view'>\n            <PageSection padding={{ default: 'noPadding' }}>\n              <Split>\n                <SplitItem isFilled>\n                  <Form>\n                    <FormSection\n                      title={t('topic.core_configuration')}\n                      id='core-configuration'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className='section-info'\n                        >\n                          {t('topic.core_config_info')}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='topic-name'\n                        btnAriaLabel={t('common.name')}\n                        fieldLabel={t('topic.topic_name')}\n                        fieldValue={topic.name}\n                        popoverBody={t('topic.topic_name_description')}\n                        popoverHeader={t('topic.topic_name')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='partitions'\n                        btnAriaLabel={t('topic.partitions')}\n                        fieldLabel={t('topic.partitions')}\n                        fieldValue={topic.numPartitions}\n                        popoverBody={t('topic.partitions_description')}\n                        popoverHeader={t('topic.partitions')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='replicas'\n                        btnAriaLabel={t('topic.replicas')}\n                        fieldLabel={t('topic.replicas')}\n                        fieldValue={topic.replicationFactor}\n                        popoverBody={t('topic.replicas_description')}\n                        popoverHeader={t('topic.replicas')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='min-insync-replicas'\n                        btnAriaLabel={t('topic.min_insync_replicas')}\n                        fieldLabel={t('topic.min_insync_replicas')}\n                        fieldValue={DEFAULT_MIN_INSYNC_REPLICAS}\n                        popoverBody={t('topic.min_insync_replicas_description')}\n                        popoverHeader={t('topic.min_insync_replicas')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='retention-time'\n                        btnAriaLabel={t('topic.retention_time')}\n                        fieldLabel={t('topic.retention_time')}\n                        fieldValue={convertRetentionTime(\n                          Number(topic['retention.ms'])\n                        )}\n                        popoverBody={t('topic.retention_time_description')}\n                        popoverHeader={t('topic.retention_time')}\n                        showUnlimited={true}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='retention-size'\n                        btnAriaLabel={t('topic.retention_size')}\n                        fieldLabel={t('topic.retention_size')}\n                        fieldValue={convertRetentionSize(\n                          Number(topic['retention.bytes'])\n                        )}\n                        popoverHeader={t('topic.retention_size')}\n                        popoverBody={t('topic.retention_size_description')}\n                        showUnlimited={true}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t('topic.messages')}\n                      id='messages'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className='section-info'\n                        >\n                          {t('topic.message_section_info')}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='max-message-size'\n                        btnAriaLabel={t('topic.max_message_size')}\n                        fieldLabel={t('topic.max_message_size')}\n                        fieldValue={DEFAULT_MAXIMUM_MESSAGE_BYTES}\n                        popoverBody={t('topic.max_message_size_description')}\n                        popoverHeader={t('topic.max_message_size')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='message-timestamp-type'\n                        btnAriaLabel={t('topic.message_timestamp_type')}\n                        fieldLabel={t('topic.message_timestamp_type')}\n                        fieldValue={DEFAULT_MESSAGE_TIMESTAMP_TYPE}\n                        popoverBody={t(\n                          'topic.message_timestamp_type_description'\n                        )}\n                        popoverHeader={t('topic.message_timestamp_type')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='max-message-timestamp-diff'\n                        btnAriaLabel={t('topic.max_message_timestamp_diff')}\n                        fieldLabel={t('topic.max_message_timestamp_diff')}\n                        fieldValue={DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF}\n                        popoverBody={t(\n                          'topic.max_message_timestamp_diff_description'\n                        )}\n                        popoverHeader={t('topic.max_message_timestamp_diff')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='compression-type'\n                        btnAriaLabel={t('topic.compression_type')}\n                        fieldLabel={t('topic.compression_type')}\n                        fieldValue='Producer'\n                        popoverBody={t('topic.compression_type_description')}\n                        popoverHeader={t('topic.compression_type')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='message-format'\n                        btnAriaLabel={t('topic.message_format')}\n                        fieldLabel={t('topic.message_format')}\n                        fieldValue='2.7-IV2'\n                        popoverBody={t('topic.message_format_description')}\n                        popoverHeader={t('topic.message_format')}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t('topic.log')}\n                      id='log'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text component={TextVariants.p}>\n                          {t('topic.log_section_info')}\n                          <Text\n                            component={TextVariants.small}\n                            className='section-info-note'\n                          >\n                            {t('topic.log_section_info_note')}\n                          </Text>\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='cleanup-policy'\n                        btnAriaLabel={t('topic.cleanup_policy')}\n                        fieldLabel={t('topic.cleanup_policy')}\n                        fieldValue={topic['cleanup.policy']}\n                        popoverBody={t('topic.cleanup_policy_description')}\n                        popoverHeader={t('topic.cleanup_policy')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='delete-retention-time'\n                        btnAriaLabel={t('topic.delete_retention_time')}\n                        fieldLabel={t('topic.delete_retention_time')}\n                        fieldValue={DEFAULT_DELETE_RETENTION_TIME}\n                        popoverBody={t(\n                          'topic.delete_retention_time_description'\n                        )}\n                        popoverHeader={t('topic.delete_retention_time')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='min-cleanable-ratio'\n                        btnAriaLabel={t('topic.min_cleanable_ratio')}\n                        fieldLabel={t('topic.min_cleanable_ratio')}\n                        fieldValue={DEFAULT_MIN_CLEANBLE_RATIO}\n                        popoverBody={t('topic.min_cleanable_ratio_description')}\n                        popoverHeader={t('topic.min_cleanable_ratio')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='min-compaction-lag-time'\n                        btnAriaLabel={t('topic.min_compaction_lag_time')}\n                        fieldLabel={t('topic.min_compaction_lag_time')}\n                        fieldValue={DEFAULT_MINIMUM_COMPACTION_LAG_TIME}\n                        popoverBody={t(\n                          'topic.min_compaction_lag_time_description'\n                        )}\n                        popoverHeader={t('topic.min_compaction_lag_time')}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t('topic.replication')}\n                      id='replication'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text component={TextVariants.p}>\n                          {t('topic.replication_section_info')}\n                          <Text component={TextVariants.small}>\n                            {t('topic.replication_section_info_note')}\n                          </Text>\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='unclean-leader-election'\n                        btnAriaLabel={t('topic.unclean_leader_election')}\n                        fieldLabel={t('topic.unclean_leader_election')}\n                        fieldValue={t('common.disabled')}\n                        popoverBody={t(\n                          'topic.unclean_leader_election_description'\n                        )}\n                        popoverHeader={t('topic.unclean_leader_election')}\n                      />\n                    </FormSection>\n\n                    <FormSection\n                      title={t('common.cleanup')}\n                      id='cleanup'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className='section-info'\n                        >\n                          {t('topic.cleanup_section_info')}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='log-segment-size'\n                        btnAriaLabel={t('topic.log_segment_size')}\n                        fieldLabel={t('topic.log_segment_size')}\n                        fieldValue={DEFAULT_LOG_SEGMENT_SIZE}\n                        popoverBody={t('topic.log_segment_size_description')}\n                        popoverHeader={t('topic.log_segment_size')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='segement-time'\n                        btnAriaLabel={t('topic.segement_time')}\n                        fieldLabel={t('topic.segement_time')}\n                        fieldValue={DEFAULT_SEGMENT_TIME}\n                        popoverBody={t('topic.segement_time_description')}\n                        popoverHeader={t('topic.segement_time')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='segment-jitter-time'\n                        btnAriaLabel={t('topic.segment_jitter_time')}\n                        fieldLabel={t('topic.segment_jitter_time')}\n                        fieldValue={DEFAULT_SEGMENT_JITTER_TIME}\n                        popoverBody={t('topic.segment_jitter_time_description')}\n                        popoverHeader={t('topic.segment_jitter_time')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='file-delete-delay'\n                        btnAriaLabel={t('topic.file_delete_delay')}\n                        fieldLabel={t('topic.file_delete_delay')}\n                        fieldValue={DEFAULT_FILE_DELETE_DELAY}\n                        popoverBody={t('topic.file_delete_delay_description')}\n                        popoverHeader={t('topic.file_delete_delay')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='preallocate-log-segment-files'\n                        btnAriaLabel={t('topic.preallocate_log_segment_files')}\n                        fieldLabel={t('topic.preallocate_log_segment_files')}\n                        fieldValue={t('common.disabled')}\n                        popoverBody={t(\n                          'topic.preallocate_log_segment_files_description'\n                        )}\n                        popoverHeader={t('topic.preallocate_log_segment_files')}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t('topic.index')}\n                      id='index'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className='section-info'\n                        >\n                          {t('topic.index_section_info')}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='index-interval-size'\n                        btnAriaLabel={t('topic.index_interval_size')}\n                        fieldLabel={t('topic.index_interval_size')}\n                        fieldValue={DEFAULT_INDEX_INTERVAL_SIZE}\n                        popoverBody={t('topic.index_interval_size_description')}\n                        popoverHeader={t('topic.index_interval_size')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='segment-index-size'\n                        btnAriaLabel={t('topic.segment_index_size')}\n                        fieldLabel={t('topic.segment_index_size')}\n                        fieldValue={DEFAULT_SEGMENT_INDEX_SIZE}\n                        popoverBody={t('topic.segment_index_size_description')}\n                        popoverHeader={t('topic.segment_index_size')}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t('topic.flush')}\n                      id='flush'\n                      titleElement={'h2'}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className='section-info'\n                        >\n                          {t('topic.flush_section_info')}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId='flush-interval-messages'\n                        btnAriaLabel={t('topic.flush_interval_messages')}\n                        fieldLabel={t('topic.flush_interval_messages')}\n                        fieldValue={DEFAULT_FLUSH_INTERVAL_MESSAGES}\n                        popoverBody={t(\n                          'topic.flush_interval_messages_description'\n                        )}\n                        popoverHeader={t('topic.flush_interval_messages')}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId='flush-interval-time'\n                        btnAriaLabel={t('topic.flush_interval_time')}\n                        fieldLabel={t('topic.flush_interval_time')}\n                        fieldValue={DEFAULT_FLUSH_INTERVAL_TIME}\n                        popoverBody={t('topic.flush_interval_time_description')}\n                        popoverHeader={t('topic.flush_interval_time')}\n                      />\n                    </FormSection>\n                  </Form>\n\n                  <Divider className='kafka-ui-divider__Margin' />\n\n                  <TextContent>\n                    <Text component={TextVariants.h2} tabIndex={-1} id='delete'>\n                      {t('topic.delete_topic')}\n                    </Text>\n                    <Text component={TextVariants.p} className='section-info'>\n                      {t('topic.delete_topic_info')}\n                    </Text>\n                    <Button\n                      variant='danger'\n                      onClick={deleteTopic}\n                      data-testid='tabProperties-actionDelete'\n                    >\n                      {t('common.delete_topic')}\n                    </Button>\n                  </TextContent>\n                </SplitItem>\n                <SplitItem>\n                  <Button\n                    variant='primary'\n                    onClick={updateTopic}\n                    data-testid='tabProperties-actionEdit'\n                  >\n                    {t('common.edit_props')}\n                  </Button>\n                </SplitItem>\n              </Split>\n            </PageSection>\n          </PageGroup>\n        </SidebarContent>\n      </Sidebar>\n    </PageSection>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n  AlertVariant,\n  PageSection,\n  PageSectionVariants,\n  Tab,\n  TabContent,\n  Tabs,\n  TabTitleText,\n} from '@patternfly/react-core';\nimport {\n  IAdvancedTopic,\n  TopicDetailHead,\n  TopicDetailView,\n} from '@app/modules/Topics/components';\nimport { getTopicDetail } from '@app/services';\nimport { ConfigContext, useFederated } from '@app/contexts';\nimport { ConsumerGroups } from '@app/modules/ConsumerGroups';\nimport { isAxiosError } from '@app/utils/axios';\nimport { ModalType, useModal } from '@app/components/KafkaModal';\nimport { useAlert, useBasename } from '@bf2/ui-shared';\nimport '../style.css';\n\nexport const TopicDetailPage: React.FC = () => {\n  const {\n    activeTab = 2,\n    kafkaName,\n    kafkaPageLink,\n    kafkaInstanceLink,\n    onError,\n  } = useFederated() || {};\n\n  const history = useHistory();\n  const { topicName } = useParams<{ topicName: string }>();\n  const { getBasename } = useBasename() || { getBasename: () => '' };\n  const basename = getBasename();\n\n  const [topicDetail, setTopicDetail] = useState<IAdvancedTopic>({\n    name: topicName,\n    numPartitions: '',\n    'retention.ms': '',\n    'retention.ms.unit': 'milliseconds',\n    'retention.bytes': '',\n    'retention.bytes.unit': 'bytes',\n    'cleanup.policy': '',\n  });\n  const [activeTabKey, setActiveTabKey] = useState(activeTab);\n  const config = useContext(ConfigContext);\n  const { addAlert } = useAlert() || {\n    addAlert: () => {\n      // No-op\n    },\n  };\n  const { t } = useTranslation();\n  const contentRefConsumerGroup = React.createRef<HTMLElement>();\n  const contentRefProperties = React.createRef<HTMLElement>();\n  const { showModal } = useModal<ModalType.DeleteTopic>();\n\n  const onDeleteTopic = () => {\n    //Redirect on topics  viewpage after delete topic successfuly\n    history.push(basename);\n  };\n\n  const fetchTopicDetail = async (topicName: string) => {\n    if (activeTab === 2) {\n      try {\n        await getTopicDetail(topicName, config).then((response) => {\n          setTopicDetail(response);\n        });\n      } catch (err) {\n        if (isAxiosError(err)) {\n          if (onError) {\n            onError(err.response?.data.code, err.response?.data.error_message);\n          }\n          if (err.response?.status === 404) {\n            // then it's a non-existent topic\n            addAlert({\n              title: t('topic.topic_not_found', { name: topicName }),\n              variant: AlertVariant.danger,\n            });\n          }\n        }\n      }\n    }\n  };\n\n  const handleTabClick = (event, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  // Make the get request\n  useEffect(() => {\n    fetchTopicDetail(topicName);\n  }, [topicName]);\n\n  const deleteTopic = () => {\n    showModal(ModalType.DeleteTopic, {\n      topicName,\n      onDeleteTopic,\n    });\n  };\n\n  return (\n    <>\n      <TopicDetailHead\n        topicName={topicName}\n        kafkaName={kafkaName}\n        kafkaPageLink={kafkaPageLink}\n        kafkaInstanceLink={kafkaInstanceLink}\n      />\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: 'noPadding' }}\n        className='pf-c-page__main-tabs'\n      >\n        <Tabs\n          activeKey={activeTabKey}\n          onSelect={handleTabClick}\n          isBox={false}\n          className='pf-m-page-insets'\n        >\n          <Tab\n            eventKey={1}\n            data-testid='pageTopic-tabConsumers'\n            title={\n              <TabTitleText>{t('consumerGroup.consumer_groups')}</TabTitleText>\n            }\n            tabContentId='kafka-ui-TabcontentConsumerGroupList'\n            tabContentRef={contentRefConsumerGroup}\n          ></Tab>\n          <Tab\n            eventKey={2}\n            title={<TabTitleText>{t('common.properties')}</TabTitleText>}\n            data-testid='pageTopic-tabProperties'\n            tabContentId='kafka-ui-TabcontentProperties'\n            tabContentRef={contentRefProperties}\n          />\n        </Tabs>\n      </PageSection>\n      <PageSection\n        variant={\n          activeTabKey === 2\n            ? PageSectionVariants.light\n            : PageSectionVariants.default\n        }\n      >\n        <TabContent\n          eventKey={1}\n          id='kafka-ui-TabcontentConsumerGroupList'\n          ref={contentRefConsumerGroup}\n          className='kafka-ui-m-full-height'\n          aria-label='Consumer groups.'\n          hidden\n        >\n          <ConsumerGroups\n            consumerGroupByTopic={true}\n            topic={topicName}\n            rowDataTestId='tableTopicConsumers-row'\n          />\n        </TabContent>\n        <TabContent\n          eventKey={2}\n          id='kafka-ui-TabcontentProperties'\n          ref={contentRefProperties}\n          className='kafka-ui-m-full-height'\n          aria-label='Topic properties.'\n        >\n          <TopicDetailView topic={topicDetail} deleteTopic={deleteTopic} />\n        </TabContent>\n      </PageSection>\n    </>\n  );\n};\n","export interface FederatedProps {\n  onError: (errorCode: number, message: string) => void;\n}\n\nexport const convertRetentionTime = (milliseconds: number): string => {\n  let convertedValue;\n  if (milliseconds === -1) {\n    return 'Unlimited';\n  } else if (milliseconds < 60000) {\n    if (milliseconds === 1) return milliseconds + ' ' + 'millisecond';\n    else return milliseconds + ' ' + 'milliseconds';\n  } else if (milliseconds >= 60000 && milliseconds < 3.6e6) {\n    convertedValue = milliseconds / 60000;\n    convertedValue = Math.round(convertedValue * 100) / 100;\n    if (convertedValue === 1) return convertedValue + ' ' + 'minute';\n    else return convertedValue + ' ' + 'minutes';\n  } else if (milliseconds >= 3.6e6 && milliseconds < 1.728e8) {\n    convertedValue = milliseconds / 3.6e6;\n    convertedValue = Math.round(convertedValue * 100) / 100;\n    if (convertedValue === 1) return convertedValue + ' ' + 'hour';\n    else return convertedValue + ' ' + 'hours';\n  } else if (milliseconds >= 1.728e8) {\n    convertedValue = milliseconds / 8.64e7;\n    convertedValue = Math.round(convertedValue * 100) / 100;\n    return convertedValue + ' ' + 'days';\n  }\n  return milliseconds.toString();\n};\n\nexport const convertRetentionSize = (byte: number): string => {\n  let convertedByteValue;\n  if (byte === -1) {\n    return 'Unlimited';\n  } else if (Math.abs(byte) < 1024) {\n    if (byte === 1) return byte + ' ' + 'byte';\n    else return byte + ' ' + 'bytes';\n  } else if (Math.abs(byte) >= 1024 && Math.abs(byte) < 1048576) {\n    convertedByteValue = byte / 1024;\n    if (convertedByteValue === 1) return convertedByteValue + ' ' + 'kibibyte';\n    else return convertedByteValue + ' ' + 'kibibytes';\n  } else if (Math.abs(byte) >= 1048576 && Math.abs(byte) < 1073741824) {\n    convertedByteValue = byte / 1048576;\n    if (convertedByteValue === 1) return convertedByteValue + ' ' + 'mebibyte';\n    else return convertedByteValue + ' ' + 'mebibytes';\n  } else if (Math.abs(byte) >= 1073741824 && Math.abs(byte) < 1.0995116e12) {\n    convertedByteValue = byte / 1073741824;\n    if (convertedByteValue === 1) return convertedByteValue + ' ' + 'gibibyte';\n    else return convertedByteValue + ' ' + 'gibibytes';\n  } else if (Math.abs(byte) >= 1.0995116e12) {\n    convertedByteValue = byte / 1.0995116e12;\n    if (convertedByteValue === 1) return convertedByteValue + ' ' + 'tebibyte';\n    else return convertedByteValue + ' ' + 'tebibytes';\n  }\n  return byte.toString();\n};\n"],"names":["topic","deleteTopic","history","useHistory","topicName","useParams","basename","getBasename","useBasename","t","useTranslation","PageSection","padding","default","Sidebar","hasGutter","SidebarPanel","variant","JumpLinks","isVertical","label","scrollableSelector","offset","style","position","JumpLinksItem","key","href","SidebarContent","PageGroup","hasOverflowScroll","id","Split","SplitItem","isFilled","Form","FormSection","title","titleElement","TextContent","Text","component","TextVariants","className","TextWithLabelPopover","fieldId","btnAriaLabel","fieldLabel","fieldValue","name","popoverBody","popoverHeader","numPartitions","replicationFactor","Number","showUnlimited","Divider","tabIndex","Button","onClick","push","TopicDetailPage","activeTab","kafkaName","kafkaPageLink","kafkaInstanceLink","onError","useState","topicDetail","setTopicDetail","activeTabKey","setActiveTabKey","config","useContext","addAlert","useAlert","contentRefConsumerGroup","contentRefProperties","showModal","onDeleteTopic","useEffect","then","response","data","code","error_message","status","AlertVariant","fetchTopicDetail","TopicDetailHead","PageSectionVariants","Tabs","activeKey","onSelect","event","isBox","Tab","eventKey","TabTitleText","tabContentId","tabContentRef","TabContent","ref","hidden","ConsumerGroups","consumerGroupByTopic","rowDataTestId","convertRetentionTime","milliseconds","convertedValue","Math","round","toString","convertRetentionSize","byte","convertedByteValue","abs"],"sourceRoot":""}