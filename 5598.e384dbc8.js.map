{"version":3,"file":"5598.e384dbc8.js","mappings":"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","sources":["webpack://kafka-ui/./src/components/FormGroupWithPopover/FormGroupWithPopover.tsx","webpack://kafka-ui/./src/components/MASLoading/MASLoading.tsx","webpack://kafka-ui/./src/modules/Permissions/components/ManagePermissionsDialog/acls.ts","webpack://kafka-ui/./src/modules/Permissions/components/ManagePermissionsDialog/SelectAccount.tsx","webpack://kafka-ui/./src/modules/Permissions/components/ManagePermissionsDialog/CreateSelect.tsx","webpack://kafka-ui/./src/modules/Permissions/components/ManagePermissionsDialog/OperationCell.tsx","webpack://kafka-ui/./src/modules/Permissions/components/ManagePermissionsDialog/PermissionTypeCell.tsx","webpack://kafka-ui/./src/modules/Permissions/components/ManagePermissionsDialog/ResourceType.tsx","webpack://kafka-ui/./src/modules/Permissions/components/ManagePermissionsDialog/PatternTypeCell.tsx","webpack://kafka-ui/./src/modules/Permissions/components/ManagePermissionsDialog/CreateTypeahead.tsx","webpack://kafka-ui/./src/modules/Permissions/components/ManagePermissionsDialog/ResourceCell.tsx","webpack://kafka-ui/./src/modules/Permissions/components/ManagePermissionsDialog/RemoveButtonCell.tsx","webpack://kafka-ui/./src/modules/Permissions/components/ManagePermissionsDialog/CreatePermissions.tsx","webpack://kafka-ui/./src/modules/Permissions/components/ManagePermissionsDialog/ExistingAclTable.tsx","webpack://kafka-ui/./src/modules/Permissions/dialogs/ManagePermissions/PreCancelModal.tsx","webpack://kafka-ui/./src/modules/Permissions/dialogs/ManagePermissions/ManagePermissions.tsx","webpack://kafka-ui/./src/modules/Topics/utils/topicNameValidation.ts"],"sourcesContent":["import { FormGroup, Popover, ValidatedOptions } from '@patternfly/react-core';\nimport HelpIcon from '@patternfly/react-icons/dist/js/icons/help-icon';\nimport React from 'react';\n\nexport type FormGroupWithPopoverProps = {\n  children: React.ReactNode;\n  labelHead: string;\n  fieldId: string;\n  fieldLabel?: string;\n  labelBody: string;\n  buttonAriaLabel: string;\n  validated?: ValidatedOptions;\n  helperText?: string;\n  helperTextInvalid?: string;\n  isRequired?: boolean;\n};\n\nexport const FormGroupWithPopover: React.FC<FormGroupWithPopoverProps> = ({\n  children,\n  labelHead,\n  fieldId,\n  fieldLabel,\n  labelBody,\n  buttonAriaLabel,\n  validated,\n  helperText,\n  helperTextInvalid,\n  isRequired,\n}) => {\n  const preventButtonSubmit = (event) => event.preventDefault();\n\n  return (\n    <FormGroup\n      fieldId={fieldId}\n      label={fieldLabel}\n      validated={validated}\n      helperText={helperText}\n      helperTextInvalid={helperTextInvalid}\n      isRequired={isRequired}\n      labelIcon={\n        <Popover\n          headerContent={<div>{labelHead}</div>}\n          bodyContent={<div>{labelBody}</div>}\n        >\n          <button\n            aria-label={buttonAriaLabel}\n            onClick={preventButtonSubmit}\n            className='pf-c-form__group-label-help'\n          >\n            <HelpIcon noVerticalAlign />\n          </button>\n        </Popover>\n      }\n    >\n      {children}\n    </FormGroup>\n  );\n};\n","import React from 'react';\nimport {\n  Bullseye,\n  BullseyeProps,\n  Spinner,\n  SpinnerProps,\n} from '@patternfly/react-core';\n\nexport type MASLoadingProps = {\n  bullseyeProps?: Omit<BullseyeProps, 'children'>;\n  spinnerProps?: SpinnerProps;\n};\n\nexport const MASLoading: React.FunctionComponent<MASLoadingProps> = ({\n  bullseyeProps,\n  spinnerProps,\n}: MASLoadingProps) => (\n  <Bullseye {...bullseyeProps}>\n    <Spinner {...spinnerProps} />\n  </Bullseye>\n);\n","import { Validated } from '@app/modules/Permissions/components/ManagePermissionsDialog/validated';\nimport {\n  AclOperation,\n  AclPatternType,\n  AclPermissionType,\n  AclResourceType,\n} from '@rhoas/kafka-instance-sdk';\n\nexport const AllAccountsId = '*';\n\nexport const isNewAclModified = (value: NewAcls): boolean => {\n  const emptyAcl = createEmptyNewAcl();\n  const newAcls = Array.isArray(value) ? value : [value];\n  return newAcls.some((v) => {\n    if (v.aclShortcutType === AclShortcutType.ManageAccess) {\n      return true;\n    } else if (v.aclShortcutType) {\n      return !(\n        v.patternType.value === emptyAcl.patternType.value &&\n        v.resource.value === emptyAcl.resource.value\n      );\n    }\n    return !(\n      v.permission.value === emptyAcl.permission.value &&\n      v.patternType.value === emptyAcl.patternType.value &&\n      v.resourceType.value === emptyAcl.resourceType.value &&\n      v.resource.value === emptyAcl.resource.value &&\n      v.operation.value === emptyAcl.operation.value\n    );\n  });\n};\n\nexport enum AclShortcutType {\n  ConsumeTopic = 'ConsumeTopic',\n  ProduceTopic = 'ProduceTopic',\n  ManageAccess = 'ManageAccess',\n}\n\nexport type NewAcl = {\n  permission: Validated<AclPermissionType | undefined>;\n  operation: Validated<AclOperation | undefined>;\n  resourceType: Validated<AclResourceType | undefined>;\n  patternType: Validated<AclPatternType | undefined>;\n  resource: Validated<string | undefined>;\n  aclShortcutType: AclShortcutType | undefined;\n  operations?: AclOperation[];\n  metaData?: {\n    title: string;\n    popoverHeader: string;\n    popoverBody: string;\n    ariaLabel: string;\n  };\n};\n\nexport type NewAcls = NewAcl | NewAcl[];\n\nexport const createEmptyNewAcl = (): NewAcl => {\n  return {\n    permission: {\n      value: AclPermissionType.Allow,\n    },\n    operation: {\n      value: undefined,\n    },\n    resourceType: {\n      value: undefined,\n    },\n    patternType: {\n      value: AclPatternType.Prefixed,\n    },\n    resource: {\n      value: undefined,\n    },\n    aclShortcutType: undefined,\n  } as NewAcl;\n};\n\nexport type CellProps = {\n  acl: NewAcl;\n  row: number;\n  childRow?: number;\n};\n\nexport type AclCellProps = CellProps & {\n  setAcls: React.Dispatch<React.SetStateAction<NewAcls[] | []>>;\n  setEscapeClosesModal: (closes: boolean) => void;\n  menuAppendTo:\n    | HTMLElement\n    | (() => HTMLElement)\n    | 'parent'\n    | 'inline'\n    | undefined;\n};\n\nexport const update2DArrayAcls = (\n  prevAcls: NewAcls[],\n  newAcl: NewAcl,\n  row: number,\n  childRow = 0\n) => {\n  if (Array.isArray(prevAcls[row]) && childRow !== undefined)\n    prevAcls[row][childRow] = newAcl;\n  else prevAcls[row] = newAcl;\n  return prevAcls;\n};\n\nexport const handle2DArrayAcls = (\n  acls: NewAcls[],\n  row: number,\n  childRow = 0\n) => {\n  const newAcls = Array.isArray(acls[row]) ? acls[row][childRow] : acls[row];\n  return newAcls;\n};\n","import React, { useState } from 'react';\nimport { Principal, PrincipalType } from '@rhoas/app-services-ui-shared';\nimport { useTranslation } from 'react-i18next';\nimport { FormGroupWithPopover } from '@app/components';\nimport {\n  Divider,\n  Select,\n  SelectGroup,\n  SelectOption,\n  SelectVariant,\n  ValidatedOptions,\n} from '@patternfly/react-core';\nimport { Validated } from '@app/modules/Permissions/components/ManagePermissionsDialog/validated';\n\nexport type SelectAccountProps = {\n  id: Validated<string | undefined>;\n  setId: React.Dispatch<React.SetStateAction<Validated<string | undefined>>>;\n  initialOptions: Principal[];\n  setEscapeClosesModal: (closes: boolean) => void;\n};\n\nexport const SelectAccount: React.VFC<SelectAccountProps> = ({\n  setId,\n  id,\n  initialOptions,\n  setEscapeClosesModal,\n}) => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (newState) => {\n    if (newState) {\n      setEscapeClosesModal(false);\n    } else {\n      setEscapeClosesModal(true);\n    }\n    setIsOpen(newState);\n  };\n\n  const clearSelection = () => {\n    setId({ value: undefined, validated: undefined });\n    setIsOpen(false);\n  };\n\n  const onSelect = (event, selection, isPlaceholder) => {\n    if (selection === '') selection = undefined;\n    if (isPlaceholder) {\n      clearSelection();\n    } else {\n      setId(() => {\n        if (selection === undefined) {\n          return {\n            value: selection,\n            validated: ValidatedOptions.error,\n            errorMessage: t(\n              'permission.manage_permissions_dialog.must_select_account_error'\n            ),\n          };\n        } else {\n          return {\n            validated: ValidatedOptions.default,\n            value: selection,\n          };\n        }\n      });\n    }\n    setIsOpen(false);\n  };\n\n  const options = [\n    <SelectGroup key='all_accounts_group'>\n      <SelectOption\n        key='*'\n        value='*'\n        description={t(\n          'permission.manage_permissions_dialog.all_accounts_description'\n        )}\n      >\n        {t('permission.manage_permissions_dialog.all_accounts_title')}\n      </SelectOption>\n    </SelectGroup>,\n    <Divider key='divider' />,\n    <SelectGroup\n      label={t(\n        'permission.manage_permissions_dialog.all_accounts_service_account_group'\n      )}\n      key='service_accounts_group'\n    >\n      {initialOptions\n        .filter(\n          (principal) =>\n            principal.principalType === PrincipalType.ServiceAccount\n        )\n        .sort((a, b) =>\n          a.displayName && b.displayName\n            ? a.displayName.localeCompare(b.displayName)\n            : -1\n        )\n        .map((principal, index) => (\n          <SelectOption\n            key={index}\n            value={principal.id}\n            description={principal.displayName}\n          >\n            {principal.id}\n          </SelectOption>\n        ))}\n    </SelectGroup>,\n    <Divider key='divider' />,\n    <SelectGroup\n      label={t(\n        'permission.manage_permissions_dialog.all_accounts_user_account_group'\n      )}\n      key='user_accounts_group'\n    >\n      {initialOptions\n        .filter(\n          (principal) => principal.principalType === PrincipalType.UserAccount\n        )\n        .map((principal, index) => (\n          <SelectOption\n            key={index}\n            value={principal.id}\n            description={principal.displayName}\n          >\n            {principal.id}\n          </SelectOption>\n        ))}\n    </SelectGroup>,\n  ];\n\n  const customFilter = (_, value: string) => {\n    if (!value) {\n      return options;\n    }\n\n    const input = new RegExp(value, 'i');\n    return options\n      .filter((accounts) => Array.isArray(accounts.props.children))\n      .map((account) =>\n        account.props.children.filter(\n          (allAccounts) =>\n            input.test(allAccounts.props.value) ||\n            input.test(allAccounts.props.description)\n        )\n      );\n  };\n\n  return (\n    <FormGroupWithPopover\n      labelHead={t('permission.manage_permissions_dialog.account_id_title')}\n      fieldId='kafka-instance-name'\n      fieldLabel={t('permission.manage_permissions_dialog.account_id_title')}\n      labelBody={t('permission.manage_permissions_dialog.account_id_help')}\n      buttonAriaLabel={t(\n        'permission.manage_permissions_dialog.account_id_aria'\n      )}\n      isRequired={true}\n      helperTextInvalid={id.errorMessage}\n      validated={id.validated || ValidatedOptions.default}\n    >\n      <Select\n        variant={SelectVariant.typeahead}\n        className='kafka-ui--select--limit-height'\n        typeAheadAriaLabel={t(\n          'permission.manage_permissions_dialog.account_id_typeahead_aria'\n        )}\n        onToggle={onToggle}\n        onSelect={onSelect}\n        onClear={clearSelection}\n        selections={id.value}\n        onFilter={customFilter}\n        isOpen={isOpen}\n        isInputValuePersisted={true}\n        placeholderText={t(\n          'permission.manage_permissions_dialog.account_id_typeahead_placeholder'\n        )}\n        isCreatable={false}\n        menuAppendTo='parent'\n        validated={id.validated || ValidatedOptions.default}\n        isGrouped={true}\n      >\n        {options}\n      </Select>\n    </FormGroupWithPopover>\n  );\n};\n","import { SelectOption } from '@app/modules/Permissions/components/ManagePermissionsDialog/select';\nimport { useTranslation } from 'react-i18next';\nimport React, { useState } from 'react';\nimport { Select as PFSelect } from '@patternfly/react-core/dist/js/components/Select/Select';\nimport { SelectVariant } from '@patternfly/react-core';\nimport { SelectOption as PFSelectOption } from '@patternfly/react-core/dist/js/components/Select/SelectOption';\nimport { Validated } from '@app/modules/Permissions/components/ManagePermissionsDialog/validated';\nimport { FormGroupWithPopover } from '@app/components';\nimport {\n  AclOperation,\n  AclPatternType,\n  AclPermissionType,\n  AclResourceType,\n} from '@rhoas/kafka-instance-sdk';\nimport { ValidatedOptions } from '@patternfly/react-core';\n\nexport type CreateSelectProps<T> = {\n  id: string;\n  options: SelectOption<T>[];\n  selected: Validated<string | undefined>;\n  setSelected: (row: number, id: T | undefined, childRow?: number) => void;\n  row: number;\n  childRow?: number;\n  placeholder?: string;\n  setEscapeClosesModal: (closes: boolean) => void;\n  onSelect: (value: string) => void;\n  menuAppendTo:\n    | HTMLElement\n    | (() => HTMLElement)\n    | 'parent'\n    | 'inline'\n    | undefined;\n  onClear: () => T | undefined;\n};\n\nexport const CreateSelect = <\n  T extends AclPermissionType | AclResourceType | AclPatternType | AclOperation\n>({\n  options,\n  setSelected,\n  selected,\n  row,\n  id,\n  placeholder,\n  setEscapeClosesModal,\n  onSelect,\n  menuAppendTo,\n  onClear,\n  childRow,\n}: CreateSelectProps<T>): React.ReactElement => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onToggle = (newState) => {\n    if (newState) {\n      setEscapeClosesModal(false);\n    } else {\n      setEscapeClosesModal(true);\n    }\n    setIsOpen(newState);\n  };\n\n  const clearSelection = () => {\n    setSelected(row, onClear(), childRow);\n    setIsOpen(false);\n  };\n\n  const select = (event, selection, isPlaceholder) => {\n    if (selection === '') selection = undefined;\n    if (isPlaceholder) clearSelection();\n    else {\n      setSelected(row, selection, childRow);\n      setIsOpen(false);\n      onSelect(selection);\n    }\n  };\n\n  return (\n    <FormGroupWithPopover\n      labelHead={t(\n        `permission.manage_permissions_dialog.assign_permissions.${id}.popover_head`\n      )}\n      fieldId={id}\n      labelBody={t(\n        `permission.manage_permissions_dialog.assign_permissions.${id}.popover_label`\n      )}\n      buttonAriaLabel={t(\n        '`permission.manage_permissions_dialog.assign_permissions.${id}.aria`'\n      )}\n      isRequired={true}\n      helperTextInvalid={selected.errorMessage}\n      validated={selected.validated || ValidatedOptions.default}\n    >\n      <PFSelect\n        variant={SelectVariant.single}\n        onToggle={onToggle}\n        onSelect={select}\n        selections={selected.value}\n        isOpen={isOpen}\n        isInputValuePersisted={true}\n        placeholderText={placeholder}\n        validated={selected.validated || ValidatedOptions.default}\n        menuAppendTo={menuAppendTo}\n        maxHeight={200}\n        direction={'up'}\n      >\n        {options.map((option, index) => (\n          <PFSelectOption\n            isDisabled={option.disabled}\n            key={index}\n            value={option.value}\n            {...(option.description && { description: option.description })}\n          >\n            {option.title}\n          </PFSelectOption>\n        ))}\n      </PFSelect>\n    </FormGroupWithPopover>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ValidatedOptions } from '@patternfly/react-core';\nimport { sentenceCase } from 'sentence-case';\nimport { snakeCase } from 'snake-case';\n\nimport { AclOperation } from '@rhoas/kafka-instance-sdk';\nimport {\n  createEmptyNewAcl,\n  update2DArrayAcls,\n  handle2DArrayAcls,\n  AclCellProps,\n} from './acls';\nimport { CreateSelect } from './CreateSelect';\nimport { getOperations } from '@app/services/acls';\nimport { SelectOption } from '@app/modules/Permissions/components/ManagePermissionsDialog/select';\n\ntype OperationCellProps = AclCellProps & {\n  resourceOperations: { [key: string]: Array<string> };\n};\n\nconst OperationCell: React.VFC<OperationCellProps> = ({\n  acl,\n  row,\n  childRow = 0,\n  setAcls,\n  setEscapeClosesModal,\n  menuAppendTo,\n  resourceOperations,\n}) => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n\n  const setOperation = (\n    row: number,\n    value?: AclOperation,\n    childRow?: number\n  ) => {\n    setAcls((prevState) =>\n      prevState.map((v, k) => {\n        if (k === row) {\n          if (Array.isArray(v) && childRow !== undefined)\n            v[childRow].operation = { value };\n          else v.operation = { value };\n        }\n        return v;\n      })\n    );\n  };\n\n  return (\n    <CreateSelect\n      options={getOperations()\n        .filter((value) => {\n          if (\n            acl.resourceType.value === undefined ||\n            acl.resourceType.value.toString() === ''\n          ) {\n            return true;\n          }\n          const resourceType = snakeCase(acl.resourceType.value.toString());\n          const operationType = snakeCase(value);\n          return resourceOperations[resourceType].some(\n            (p) => p === operationType\n          );\n        })\n        .map((value) => {\n          return {\n            value,\n            title: sentenceCase(value),\n          } as SelectOption<AclOperation>;\n        })}\n      selected={acl.operation}\n      setSelected={setOperation}\n      row={row}\n      id='operation'\n      placeholder={t(\n        'permission.manage_permissions_dialog.assign_permissions.operation_placeholder'\n      )}\n      setEscapeClosesModal={setEscapeClosesModal}\n      menuAppendTo={menuAppendTo}\n      onClear={() => createEmptyNewAcl().operation.value}\n      onSelect={(value) => {\n        setAcls((prevState) => {\n          const newPrevState = handle2DArrayAcls(prevState, row, childRow);\n          if (value === undefined) {\n            newPrevState.operation.validated = ValidatedOptions.error;\n            newPrevState.operation.errorMessage = t(\n              'permission.manage_permissions_dialog.assign_permissions.must_select_operation_error'\n            );\n          } else {\n            newPrevState.operation.validated = ValidatedOptions.default;\n          }\n          return update2DArrayAcls(prevState, newPrevState, row, childRow);\n        });\n      }}\n    />\n  );\n};\n\nexport { OperationCell };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ValidatedOptions, LabelGroup, Label } from '@patternfly/react-core';\nimport { sentenceCase } from 'sentence-case';\n\nimport { AclPermissionType } from '@rhoas/kafka-instance-sdk';\n\nimport {\n  createEmptyNewAcl,\n  update2DArrayAcls,\n  handle2DArrayAcls,\n  AclCellProps,\n} from './acls';\nimport { CreateSelect } from './CreateSelect';\nimport { getPermissionsTypes } from '@app/services/acls';\nimport { SelectOption } from '@app/modules/Permissions/components/ManagePermissionsDialog/select';\n\ntype PermissionTypeCellProps = AclCellProps;\n\nconst PermissionTypeCell: React.VFC<PermissionTypeCellProps> = ({\n  acl,\n  row,\n  childRow = 0,\n  setAcls,\n  setEscapeClosesModal,\n  menuAppendTo,\n}) => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n\n  const setPermissionType = (\n    row: number,\n    value?: AclPermissionType,\n    childRow?: number\n  ) => {\n    setAcls((prevState) =>\n      prevState.map((v, k) => {\n        if (k === row) {\n          if (Array.isArray(v) && childRow !== undefined)\n            v[childRow].permission = { value };\n          else v.permission = { value };\n        }\n        return v;\n      })\n    );\n  };\n\n  if (acl.aclShortcutType) {\n    return (\n      <>\n        {Array.isArray(acl?.operations) && (\n          <LabelGroup numLabels={4}>\n            <Label\n              variant='outline'\n              color={\n                acl.permission.value === AclPermissionType.Deny\n                  ? 'red'\n                  : undefined\n              }\n            >\n              {sentenceCase(acl.permission.value || '')}\n            </Label>\n            {acl?.operations?.map((operation) => (\n              <Label variant='outline' key={operation}>\n                {sentenceCase(operation)}\n              </Label>\n            ))}\n          </LabelGroup>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <CreateSelect\n      options={getPermissionsTypes().map((value) => {\n        return {\n          value,\n          title: sentenceCase(value),\n        } as SelectOption<AclPermissionType>;\n      })}\n      selected={acl.permission}\n      setSelected={setPermissionType}\n      row={row}\n      id='permission-type'\n      setEscapeClosesModal={setEscapeClosesModal}\n      menuAppendTo={menuAppendTo}\n      onClear={() => createEmptyNewAcl().permission.value}\n      onSelect={(value) => {\n        setAcls((prevState) => {\n          const newPrevState = handle2DArrayAcls(prevState, row, childRow);\n          if (value === undefined) {\n            newPrevState.permission.validated = ValidatedOptions.error;\n            newPrevState.permission.errorMessage = t(\n              'permission.manage_permissions_dialog.assign_permissions.must_select_permission_error'\n            );\n          } else {\n            newPrevState.permission.validated = ValidatedOptions.default;\n          }\n          return update2DArrayAcls(prevState, newPrevState, row, childRow);\n        });\n      }}\n    />\n  );\n};\n\nexport { PermissionTypeCell };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ValidatedOptions } from '@patternfly/react-core';\n\nimport { AclResourceType } from '@rhoas/kafka-instance-sdk';\nimport {\n  AclShortcutType,\n  createEmptyNewAcl,\n  update2DArrayAcls,\n  handle2DArrayAcls,\n  AclCellProps,\n} from './acls';\nimport { CreateSelect } from './CreateSelect';\nimport { getResourceTypes } from '@app/services/acls';\nimport { SelectOption } from '@app/modules/Permissions/components/ManagePermissionsDialog/select';\nimport { SolidLabel } from './SolidLabel';\nimport { displayName } from '@app/modules/Permissions/utils';\n\ntype ResourceTypeProps = AclCellProps & {\n  kafkaName: string | undefined;\n};\n\nconst ResourceType: React.VFC<ResourceTypeProps> = ({\n  row,\n  acl,\n  childRow = 0,\n  setAcls,\n  setEscapeClosesModal,\n  menuAppendTo,\n  kafkaName,\n}) => {\n  const { resourceType } = acl;\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n\n  if (\n    (acl.aclShortcutType === AclShortcutType.ConsumeTopic ||\n      acl.aclShortcutType === AclShortcutType.ProduceTopic) &&\n    resourceType?.value\n  ) {\n    return (\n      <>\n        <SolidLabel variant={resourceType.value} />{' '}\n        {displayName(resourceType.value)}\n      </>\n    );\n  } else if (acl.aclShortcutType === AclShortcutType.ManageAccess) {\n    return (\n      <>\n        <SolidLabel variant={AclResourceType.Cluster} />{' '}\n        {displayName(AclResourceType.Cluster)} is \"{kafkaName}\"\n      </>\n    );\n  }\n\n  const setResourceType = (\n    row: number,\n    value?: AclResourceType,\n    childRow?: number\n  ) => {\n    setAcls((prevState) =>\n      prevState.map((v, k) => {\n        if (k === row) {\n          if (Array.isArray(v) && childRow !== undefined)\n            v[row][childRow].resourceType = { value };\n          else v.resourceType = { value };\n        }\n        return v;\n      })\n    );\n  };\n\n  return (\n    <CreateSelect\n      options={getResourceTypes().map((value) => {\n        return {\n          value,\n          title: displayName(value),\n        } as SelectOption<AclResourceType>;\n      })}\n      selected={acl.resourceType}\n      setSelected={setResourceType}\n      row={row}\n      id='resource-type'\n      placeholder={t(\n        'permission.manage_permissions_dialog.assign_permissions.resource_type_placeholder'\n      )}\n      setEscapeClosesModal={setEscapeClosesModal}\n      menuAppendTo={menuAppendTo}\n      onClear={() => createEmptyNewAcl().resourceType.value}\n      onSelect={(value) => {\n        setAcls((prevState) => {\n          const newPrevState = handle2DArrayAcls(prevState, row, childRow);\n          if (value === undefined) {\n            newPrevState.validated = ValidatedOptions.error;\n            newPrevState.errorMessage = t(\n              'permission.manage_permissions_dialog.assign_permissions.must_select_resource_type_error'\n            );\n          } else {\n            newPrevState.validated = ValidatedOptions.default;\n          }\n          return update2DArrayAcls(prevState, newPrevState, row, childRow);\n        });\n      }}\n    />\n  );\n};\n\nexport { ResourceType };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ValidatedOptions } from '@patternfly/react-core';\n\nimport { AclPatternType, AclResourceType } from '@rhoas/kafka-instance-sdk';\nimport {\n  AclShortcutType,\n  createEmptyNewAcl,\n  update2DArrayAcls,\n  handle2DArrayAcls,\n  AclCellProps,\n} from './acls';\nimport { CreateSelect } from './CreateSelect';\nimport { getPatternTypes } from '@app/services/acls';\nimport { SelectOption } from '@app/modules/Permissions/components/ManagePermissionsDialog/select';\n\ntype PatternTypeCellProps = AclCellProps;\n\nconst PatternTypeCell: React.VFC<PatternTypeCellProps> = ({\n  acl,\n  row,\n  childRow = 0,\n  setAcls,\n  setEscapeClosesModal,\n  menuAppendTo,\n}) => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n\n  if (\n    acl.resourceType.value === AclResourceType.Cluster ||\n    acl.aclShortcutType === AclShortcutType.ManageAccess\n  ) {\n    return <></>;\n  }\n\n  const setPatternType = (\n    row: number,\n    value?: AclPatternType,\n    childRow?: number\n  ) => {\n    setAcls((prevState) =>\n      prevState.map((v, k) => {\n        if (k === row) {\n          if (Array.isArray(v) && childRow !== undefined) {\n            v[childRow].patternType = { value };\n          } else {\n            v.patternType = { value };\n          }\n        }\n        return v;\n      })\n    );\n  };\n\n  return (\n    <CreateSelect\n      options={getPatternTypes()\n        ?.map((value) => {\n          return {\n            value,\n            title:\n              value === AclPatternType.Prefixed\n                ? t(\n                    'permission.manage_permissions_dialog.assign_permissions.pattern_type_prefixed'\n                  )\n                : t(\n                    'permission.manage_permissions_dialog.assign_permissions.pattern_type_literal'\n                  ),\n            description:\n              value === AclPatternType.Prefixed\n                ? t(\n                    'permission.manage_permissions_dialog.assign_permissions.pattern_type_prefixed_help'\n                  )\n                : t(\n                    'permission.manage_permissions_dialog.assign_permissions.pattern_type_literal_help'\n                  ),\n          } as SelectOption<AclPatternType>;\n        })\n        .sort((a, b) => b.value.localeCompare(a.value))}\n      selected={acl.patternType}\n      setSelected={setPatternType}\n      row={row}\n      childRow={childRow}\n      id='pattern-type'\n      setEscapeClosesModal={setEscapeClosesModal}\n      menuAppendTo={menuAppendTo}\n      onClear={() => createEmptyNewAcl().patternType.value}\n      onSelect={(value) => {\n        setAcls((prevState) => {\n          const newPrevState = handle2DArrayAcls(prevState, row, childRow);\n          if (value === undefined) {\n            newPrevState.patternType.validated = ValidatedOptions.error;\n            newPrevState.patternType.validated = t(\n              'permission.manage_permissions_dialog.assign_permissions.must_select_pattern_type_error'\n            );\n          } else {\n            newPrevState.patternType.validated = ValidatedOptions.default;\n          }\n\n          return update2DArrayAcls(prevState, newPrevState, row, childRow);\n        });\n      }}\n    />\n  );\n};\n\nexport { PatternTypeCell };\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { SelectOption } from '@app/modules/Permissions/components/ManagePermissionsDialog/select';\nimport {\n  SelectVariant,\n  ValidatedOptions,\n  Select as PFSelect,\n  SelectOption as PFSelectOption,\n} from '@patternfly/react-core';\nimport { Validated } from '@app/modules/Permissions/components/ManagePermissionsDialog/validated';\nimport { FormGroupWithPopover } from '@app/components';\n\nexport type CreateTypeaheadProps = {\n  row: number;\n  childRow?: number;\n  value: Validated<string | undefined>;\n  setValue: (row: number, id: string | undefined, childRow?: number) => void;\n  initialOptions: () => string[];\n  id: string;\n  placeholder?: string;\n  onSelect: (value: string) => void;\n  setEscapeClosesModal: (closes: boolean) => void;\n  menuAppendTo:\n    | HTMLElement\n    | (() => HTMLElement)\n    | 'parent'\n    | 'inline'\n    | undefined;\n};\n\nexport const CreateTypeahead: React.VFC<CreateTypeaheadProps> = ({\n  row,\n  setValue,\n  value,\n  initialOptions,\n  id,\n  placeholder,\n  onSelect,\n  setEscapeClosesModal,\n  menuAppendTo,\n  childRow,\n}) => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [options, setOptions] = useState<SelectOption<string>[]>([]);\n\n  useEffect(() => {\n    setOptions(\n      initialOptions().map((o) => {\n        return { value: o } as SelectOption<string>;\n      })\n    );\n  }, [initialOptions]);\n\n  const onToggle = (newState) => {\n    if (newState) {\n      setEscapeClosesModal(false);\n    } else {\n      setEscapeClosesModal(true);\n    }\n    setIsOpen(newState);\n  };\n\n  const clearSelection = () => {\n    setValue(row, undefined, childRow);\n    setIsOpen(false);\n  };\n\n  const select = (event, selection, isPlaceholder) => {\n    if (selection === '') selection = undefined;\n    if (isPlaceholder) clearSelection();\n    else {\n      setValue(row, selection, childRow);\n      setIsOpen(false);\n      onSelect(selection);\n    }\n  };\n\n  const onCreateOption = (newValue: string) => {\n    setOptions([...options, { value: newValue } as SelectOption<string>]);\n  };\n\n  return (\n    <FormGroupWithPopover\n      labelHead={t(\n        `permission.manage_permissions_dialog.assign_permissions.${id}.popover_head`\n      )}\n      fieldId={id}\n      labelBody={t(\n        `permission.manage_permissions_dialog.assign_permissions.${id}.popover_label`\n      )}\n      buttonAriaLabel={t(\n        '`permission.manage_permissions_dialog.assign_permissions.${id}.aria`'\n      )}\n      isRequired={true}\n      helperTextInvalid={value.errorMessage}\n      validated={value.validated || ValidatedOptions.default}\n    >\n      <PFSelect\n        variant={SelectVariant.typeahead}\n        typeAheadAriaLabel={t(\n          'permission.manage_permissions_dialog.assign_permissions.resource_name_aria'\n        )}\n        onToggle={onToggle}\n        className='pf-u-pr-lg-on-lg'\n        onSelect={select}\n        onClear={clearSelection}\n        selections={value.value}\n        isOpen={isOpen}\n        isInputValuePersisted={true}\n        placeholderText={placeholder}\n        isCreatable={true}\n        onCreateOption={onCreateOption}\n        createText={t(\n          'permission.manage_permissions_dialog.assign_permissions.resource_name_typeahead_create_text'\n        )}\n        validated={value.validated || ValidatedOptions.default}\n        menuAppendTo={menuAppendTo}\n        maxHeight={200}\n        direction={'up'}\n      >\n        {options.map((option, index) => (\n          <PFSelectOption\n            isDisabled={option.disabled}\n            key={index}\n            value={option.value}\n            {...(option.description && { description: option.description })}\n          />\n        ))}\n      </PFSelect>\n    </FormGroupWithPopover>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ValidatedOptions } from '@patternfly/react-core';\n\nimport { AclResourceType } from '@rhoas/kafka-instance-sdk';\nimport {\n  AclShortcutType,\n  update2DArrayAcls,\n  handle2DArrayAcls,\n  AclCellProps,\n} from './acls';\nimport { CreateTypeahead } from './CreateTypeahead';\nimport { useValidateTopic } from '@app/modules/Topics/utils';\n\ntype ResourceCellProps = AclCellProps & {\n  topicNames: string[];\n  consumerGroupIds: string[];\n};\n\nconst ResourceCell: React.VFC<ResourceCellProps> = ({\n  row,\n  acl,\n  childRow = 0,\n  setAcls,\n  setEscapeClosesModal,\n  menuAppendTo,\n  topicNames,\n  consumerGroupIds,\n}) => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n  const { validateName } = useValidateTopic();\n\n  if (\n    acl.resourceType.value === AclResourceType.Cluster ||\n    acl.aclShortcutType === AclShortcutType.ManageAccess\n  ) {\n    return <></>;\n  }\n\n  const setResource = (row: number, value?: string, childRow?: number) => {\n    setAcls((prevState) =>\n      prevState.map((v, k) => {\n        if (k === row) {\n          if (Array.isArray(v) && childRow !== undefined)\n            v[childRow].resource = { value };\n          else v.resource = { value };\n        }\n        return v;\n      })\n    );\n  };\n\n  return (\n    <CreateTypeahead\n      row={row}\n      childRow={childRow}\n      value={acl.resource}\n      setValue={setResource}\n      id='resource'\n      placeholder={t(\n        `permission.manage_permissions_dialog.assign_permissions.pattern_type_${\n          acl.patternType.value?.toLowerCase() || 'prefixed'\n        }_placeholder`\n      )}\n      setEscapeClosesModal={setEscapeClosesModal}\n      menuAppendTo={menuAppendTo}\n      initialOptions={() => {\n        if (acl.resourceType.value === AclResourceType.Topic) {\n          return topicNames;\n        }\n        if (acl.resourceType.value === AclResourceType.Group) {\n          return consumerGroupIds;\n        }\n        return [];\n      }}\n      onSelect={(value) => {\n        if (value === '*') {\n          setAcls((prevState) => {\n            const newPrevState = handle2DArrayAcls(prevState, row, childRow);\n            newPrevState.resource.validated = ValidatedOptions.default;\n            return update2DArrayAcls(prevState, newPrevState, row, childRow);\n          });\n        } else {\n          const errorMessage = validateName(value);\n          if (errorMessage !== undefined) {\n            setAcls((prevState) => {\n              const newPrevState = handle2DArrayAcls(prevState, row, childRow);\n              newPrevState.validated = ValidatedOptions.error;\n              newPrevState.errorMessage = errorMessage;\n              return update2DArrayAcls(prevState, newPrevState, row, childRow);\n            });\n          } else if (value !== undefined) {\n            setAcls((prevState) => {\n              const newPrevState = handle2DArrayAcls(prevState, row, childRow);\n              newPrevState.validated = ValidatedOptions.default;\n              return update2DArrayAcls(prevState, newPrevState, row, childRow);\n            });\n          }\n        }\n      }}\n    />\n  );\n};\n\nexport { ResourceCell };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Tooltip, Button } from '@patternfly/react-core';\nimport TrashIcon from '@patternfly/react-icons/dist/js/icons/trash-icon';\nimport { CellProps } from './acls';\n\ntype RemoveButtonCellProps = CellProps & {\n  removeRow: (row: number) => void;\n};\n\nconst RemoveButtonCell: React.VFC<RemoveButtonCellProps> = ({\n  row,\n  removeRow,\n}) => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n\n  return (\n    <div className='pf-u-display-flex pf-u-justify-content-flex-end'>\n      <Tooltip\n        content={t(\n          'permission.manage_permissions_dialog.assign_permissions.remove_row_help'\n        )}\n      >\n        <Button\n          variant='link'\n          icon={<TrashIcon />}\n          onClick={() => removeRow(row)}\n        />\n      </Tooltip>\n    </div>\n  );\n};\n\nexport { RemoveButtonCell };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ActionList,\n  ActionListItem,\n  Button,\n  Text,\n  TextContent,\n  TextVariants,\n  Popover,\n  ButtonVariant,\n} from '@patternfly/react-core';\n\nimport { PermissionsDropdown } from '@rhoas/app-services-ui-components';\nimport {\n  TableComposable,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n  cellWidth,\n  ICell,\n} from '@patternfly/react-table';\nimport HelpIcon from '@patternfly/react-icons/dist/js/icons/help-icon';\nimport { OperationCell } from './OperationCell';\nimport { PermissionTypeCell } from './PermissionTypeCell';\nimport { ResourceType } from './ResourceType';\nimport { PatternTypeCell } from './PatternTypeCell';\nimport { ResourceCell } from './ResourceCell';\nimport { RemoveButtonCell } from './RemoveButtonCell';\nimport {\n  createEmptyNewAcl,\n  NewAcls,\n  AclShortcutType,\n} from '@app/modules/Permissions/components/ManagePermissionsDialog/acls';\nimport {\n  AclOperation,\n  AclPatternType,\n  AclResourceType,\n} from '@rhoas/kafka-instance-sdk';\nimport './CreatePermissions.css';\n\nexport type CreatePermissionsProps = {\n  selectedAccount?: string;\n  topicNames: string[];\n  consumerGroupIds: string[];\n  acls: NewAcls[] | undefined;\n  setAcls: React.Dispatch<React.SetStateAction<NewAcls[] | []>>;\n  setEscapeClosesModal: (closes: boolean) => void;\n  resourceOperations: { [key: string]: Array<string> };\n  menuAppendTo:\n    | HTMLElement\n    | (() => HTMLElement)\n    | 'parent'\n    | 'inline'\n    | undefined;\n  kafkaName: string | undefined;\n};\n\nexport const CreatePermissions: React.FunctionComponent<\n  CreatePermissionsProps\n> = ({\n  acls,\n  setAcls,\n  topicNames,\n  consumerGroupIds,\n  selectedAccount,\n  setEscapeClosesModal,\n  resourceOperations,\n  menuAppendTo,\n  kafkaName,\n}) => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n\n  const tableColumns = [\n    {\n      title: t('permission.table.resource_column_title'),\n      columnTransforms: [cellWidth(20)],\n    },\n    {\n      title: '',\n      columnTransforms: [cellWidth(20)],\n    },\n    {\n      title: '',\n      columnTransforms: [cellWidth(20)],\n    },\n    {\n      title: t('permission.table.permissions_column_title'),\n      columnTransforms: [cellWidth(15)],\n    },\n    {\n      title: '',\n      columnTransforms: [cellWidth(15)],\n    },\n    {\n      title: '',\n      columnTransforms: [cellWidth(10)],\n    },\n  ] as ICell[];\n\n  const removeRow = (row: number) => {\n    setAcls((prevState) => {\n      return prevState.filter((v, k) => k !== row);\n    });\n  };\n\n  const formGroupHelperText = () => {\n    if (selectedAccount === '*') {\n      return t(\n        'permission.manage_permissions_dialog.assign_permissions.help_all_accounts'\n      );\n    }\n    return t('permission.manage_permissions_dialog.assign_permissions.help', {\n      account_id: selectedAccount,\n    });\n  };\n\n  const onAddPermission = () => {\n    setAcls((prevState) => [...prevState, createEmptyNewAcl()]);\n  };\n\n  const onShortcutConsumeTopic = () => {\n    const newState = [\n      {\n        ...createEmptyNewAcl(),\n        aclShortcutType: AclShortcutType.ConsumeTopic,\n        resourceType: {\n          value: AclResourceType.Topic,\n        },\n        metaData: {\n          title: t(\n            'permission.manage_permissions_dialog.assign_permissions.shortcut_consume_topic'\n          ),\n          popoverHeader: t(\n            'permission.manage_permissions_dialog.assign_permissions.shortcut_consume_topic'\n          ),\n          popoverBody: t(\n            'permission.manage_permissions_dialog.assign_permissions.shortcut_consume_topic_description'\n          ),\n          ariaLabel: t(\n            'permission.manage_permissions_dialog.assign_permissions.shortcut_consume_topic'\n          ),\n        },\n        operations: [AclOperation.Read, AclOperation.Describe],\n      },\n      {\n        ...createEmptyNewAcl(),\n        aclShortcutType: AclShortcutType.ConsumeTopic,\n        resourceType: {\n          value: AclResourceType.Group,\n        },\n        operations: [AclOperation.Read],\n      },\n    ];\n\n    setAcls((prevState) => [...prevState, newState]);\n  };\n\n  const onShortcutProduceTopic = () => {\n    const newState = {\n      ...createEmptyNewAcl(),\n      aclShortcutType: AclShortcutType.ProduceTopic,\n      resourceType: {\n        value: AclResourceType.Topic,\n      },\n      metaData: {\n        title: t(\n          'permission.manage_permissions_dialog.assign_permissions.shortcut_produce_topic'\n        ),\n        popoverHeader: t(\n          'permission.manage_permissions_dialog.assign_permissions.shortcut_produce_topic'\n        ),\n        popoverBody: t(\n          'permission.manage_permissions_dialog.assign_permissions.shortcut_produce_topic_description'\n        ),\n        ariaLabel: t(\n          'permission.manage_permissions_dialog.assign_permissions.shortcut_produce_topic'\n        ),\n      },\n      operations: [\n        AclOperation.Write,\n        AclOperation.Create,\n        AclOperation.Describe,\n      ],\n    };\n    setAcls((prevState) => [...prevState, newState]);\n  };\n\n  const onShortcutManageAccess = () => {\n    const newState = {\n      ...createEmptyNewAcl(),\n      aclShortcutType: AclShortcutType.ManageAccess,\n      resource: { value: 'kafka-cluster' },\n      resourceType: {\n        value: AclResourceType.Cluster,\n      },\n      patternType: { value: AclPatternType.Literal },\n      metaData: {\n        title: t(\n          'permission.manage_permissions_dialog.assign_permissions.shortcut_manage_access'\n        ),\n        popoverHeader: t(\n          'permission.manage_permissions_dialog.assign_permissions.shortcut_manage_access'\n        ),\n        popoverBody: t(\n          'permission.manage_permissions_dialog.assign_permissions.shortcut_manage_access_description'\n        ),\n        ariaLabel: t(\n          'permission.manage_permissions_dialog.assign_permissions.shortcut_manage_access'\n        ),\n      },\n      operations: [AclOperation.Alter],\n    };\n\n    setAcls((prevState) => [...prevState, newState]);\n  };\n\n  const preparedRows = (acl: NewAcls, row: number) => {\n    const newAcl = Array.isArray(acl) ? acl : [acl];\n    return newAcl.map((acl, childRow) => {\n      return (\n        <>\n          {acl.aclShortcutType && childRow === 0 && (\n            <Tr style={{ borderBottom: 'none' }}>\n              <Td colSpan={5}>\n                <TextContent>\n                  <Text component={TextVariants.h6}>\n                    {acl?.metaData?.title}\n                    <Popover\n                      headerContent={<div>{acl.metaData?.popoverHeader}</div>}\n                      bodyContent={<div>{acl.metaData?.popoverBody}</div>}\n                    >\n                      <Button\n                        variant={ButtonVariant.plain}\n                        aria-label={acl.metaData?.ariaLabel}\n                      >\n                        <HelpIcon />\n                      </Button>\n                    </Popover>\n                  </Text>\n                </TextContent>\n              </Td>\n              <Td>\n                <RemoveButtonCell acl={acl} row={row} removeRow={removeRow} />\n              </Td>\n            </Tr>\n          )}\n          <Tr\n            key={row}\n            style={{\n              borderBottom: newAcl.length > 1 && childRow === 0 ? 'none' : '',\n            }}\n          >\n            <Td\n              width={\n                acl.aclShortcutType === AclShortcutType.ManageAccess ? 50 : 20\n              }\n              colSpan={\n                acl.aclShortcutType === AclShortcutType.ManageAccess ? 3 : 0\n              }\n              noPadding\n            >\n              <ResourceType\n                row={row}\n                acl={acl}\n                childRow={childRow}\n                setAcls={setAcls}\n                menuAppendTo={menuAppendTo}\n                setEscapeClosesModal={setEscapeClosesModal}\n                kafkaName={kafkaName}\n              />\n            </Td>\n            {acl.aclShortcutType !== AclShortcutType.ManageAccess && (\n              <>\n                <Td width={15} noPadding>\n                  <PatternTypeCell\n                    row={row}\n                    acl={acl}\n                    childRow={childRow}\n                    setAcls={setAcls}\n                    menuAppendTo={menuAppendTo}\n                    setEscapeClosesModal={setEscapeClosesModal}\n                  />\n                </Td>\n                <Td width={25} noPadding>\n                  <ResourceCell\n                    acl={acl}\n                    row={row}\n                    childRow={childRow}\n                    setAcls={setAcls}\n                    menuAppendTo={menuAppendTo}\n                    setEscapeClosesModal={setEscapeClosesModal}\n                    topicNames={topicNames}\n                    consumerGroupIds={consumerGroupIds}\n                  />\n                </Td>\n              </>\n            )}\n            <Td\n              width={acl.aclShortcutType ? 40 : 15}\n              colSpan={acl.aclShortcutType ? 3 : 0}\n              noPadding\n            >\n              <PermissionTypeCell\n                acl={acl}\n                row={row}\n                childRow={childRow}\n                setAcls={setAcls}\n                menuAppendTo={menuAppendTo}\n                setEscapeClosesModal={setEscapeClosesModal}\n              />\n            </Td>\n            {!acl.aclShortcutType && (\n              <>\n                <Td width={15} noPadding>\n                  <OperationCell\n                    acl={acl}\n                    row={row}\n                    childRow={childRow}\n                    setAcls={setAcls}\n                    menuAppendTo={menuAppendTo}\n                    setEscapeClosesModal={setEscapeClosesModal}\n                    resourceOperations={resourceOperations}\n                  />\n                </Td>\n                <Td width={10}>\n                  <RemoveButtonCell acl={acl} row={row} removeRow={removeRow} />\n                </Td>\n              </>\n            )}\n          </Tr>\n        </>\n      );\n    });\n  };\n\n  return (\n    <div>\n      <TextContent>\n        <Text component={TextVariants.h2}>\n          {t('permission.manage_permissions_dialog.assign_permissions.title')}\n        </Text>\n        <Text component={TextVariants.small}>{formGroupHelperText()}</Text>\n        {acls && acls.length > 0 && (\n          <Text component={TextVariants.small}>\n            {t(\n              'permission.manage_permissions_dialog.assign_permissions.all_fields_are_required'\n            )}\n          </Text>\n        )}\n      </TextContent>\n      {acls && acls.length > 0 && (\n        <TableComposable variant='compact'>\n          <Thead noWrap>\n            <Tr>\n              {tableColumns?.map((col, index) => (\n                <Th key={index}>{col.title}</Th>\n              ))}\n            </Tr>\n          </Thead>\n          <Tbody>{acls?.map((acl, row) => preparedRows(acl, row))}</Tbody>\n        </TableComposable>\n      )}\n      <ActionList>\n        <ActionListItem className='appServices-action-list__action-list-item'>\n          <PermissionsDropdown\n            onAddPermission={onAddPermission}\n            onShortcutProduceTopic={onShortcutProduceTopic}\n            onShortcutConsumeTopic={onShortcutConsumeTopic}\n            onShortcutManageAccess={onShortcutManageAccess}\n          />\n        </ActionListItem>\n      </ActionList>\n    </div>\n  );\n};\n","import { EnhancedAclBinding } from '@app/services/acls';\nimport React, { useEffect, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport {\n  CellBuilder,\n  permissionOperationCell,\n  resourceCell,\n} from '@app/modules/Permissions/components/PermissionsTable/Cells';\nimport {\n  Button,\n  Label,\n  Text,\n  TextContent,\n  TextVariants,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { TrashIcon } from '@patternfly/react-icons';\nimport { cellWidth, ICell, TableVariant } from '@patternfly/react-table';\nimport { MASTable } from '@app/components';\nimport { AclBinding } from '@rhoas/kafka-instance-sdk';\n\nexport type ExistingAclTableProps = {\n  existingAcls: Array<AclBinding>;\n  selectedAccountId?: string;\n  onRemove: (acl: EnhancedAclBinding) => void;\n};\n\nexport const ExistingAclTable: React.FunctionComponent<\n  ExistingAclTableProps\n> = ({ existingAcls, selectedAccountId, onRemove }) => {\n  type RemovableEnhancedAclBinding = EnhancedAclBinding & {\n    removed: boolean;\n    index: number;\n  };\n\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n  const [acls, setAcls] = useState<RemovableEnhancedAclBinding[]>([]);\n\n  useEffect(() => {\n    // Workaround as I can't work out how to pass initial state for an array\n    setAcls(\n      existingAcls.map((v, k) => {\n        const answer = v as RemovableEnhancedAclBinding;\n        answer.index = k;\n        return answer;\n      })\n    );\n  }, [existingAcls]);\n\n  const removeRow = (acl: RemovableEnhancedAclBinding) => {\n    setAcls(\n      acls.map((v) => {\n        if (v.hash() === acl.hash()) {\n          v.removed = true;\n        }\n        return v;\n      })\n    );\n    onRemove(acl);\n  };\n\n  const tableColumns = [\n    {\n      title: t('permission.table.resource_column_title'),\n      columnTransforms: [cellWidth(60)],\n    },\n    {\n      title: t('permission.table.permissions_column_title'),\n      columnTransforms: [cellWidth(20)],\n    },\n    {\n      title: '',\n      columnTransforms: [cellWidth(20)],\n    },\n  ] as ICell[];\n\n  const principalCell: CellBuilder<RemovableEnhancedAclBinding> = (item) => {\n    const RemoveButton: React.FunctionComponent = () => (\n      <Tooltip\n        content={t(\n          'permission.manage_permissions_dialog.assign_permissions.remove_row_help'\n        )}\n      >\n        <Button\n          variant='link'\n          icon={<TrashIcon />}\n          onClick={() => removeRow(item)}\n        />\n      </Tooltip>\n    );\n\n    const AllAccountsLabel: React.FunctionComponent = () => (\n      <Label variant='outline'>{t('permission.table.all_accounts')}</Label>\n    );\n\n    if (selectedAccountId === '*' && item.principal === '*') {\n      return {\n        title: (\n          <div className='pf-u-display-flex pf-u-justify-content-space-between pf-u-justify-content-flex-end-on-lg'>\n            <AllAccountsLabel /> <RemoveButton />\n          </div>\n        ),\n        props: {},\n      };\n    } else if (item.principal === '*') {\n      return {\n        title: (\n          <div className='pf-u-display-flex pf-u-justify-content-flex-end-on-lg'>\n            <AllAccountsLabel />\n          </div>\n        ),\n        props: {},\n      };\n    } else {\n      return {\n        title: (\n          <div className='pf-u-display-flex pf-u-justify-content-flex-end'>\n            <RemoveButton />\n          </div>\n        ),\n        props: {},\n      };\n    }\n  };\n\n  const cells = [resourceCell, permissionOperationCell, principalCell];\n\n  if (selectedAccountId === undefined || acls.length === 0) {\n    return <></>;\n  }\n\n  const HelperText: React.FunctionComponent = () => {\n    if (selectedAccountId === '*') {\n      return t(\n        'permission.manage_permissions_dialog.edit_existing.all_accounts_help'\n      );\n    }\n    return (\n      <Trans\n        ns={['kafkaTemporaryFixMe']}\n        i18nKey='permission.manage_permissions_dialog.edit_existing.help'\n      >\n        Review the list of existing permissions for the selected account. The\n        list includes account-specific permissions and permissions applied to\n        all accounts within this Kafka instance. Permissions labeled\n        <strong>All accounts</strong> cannot be removed when an individual\n        account ID is selected.\n      </Trans>\n    );\n  };\n\n  return (\n    <div>\n      <TextContent>\n        <Text component={TextVariants.h2}>\n          {t('permission.manage_permissions_dialog.edit_existing.title')}\n        </Text>\n        <Text component={TextVariants.small}>\n          <HelperText />\n        </Text>\n      </TextContent>\n\n      <MASTable\n        tableProps={{\n          cells: tableColumns,\n          rows: [\n            ...acls\n              .filter((acl) => !acl.removed)\n              .map((item, row) => {\n                return {\n                  cells: cells.map((f) => f(item, row)),\n                  originalData: item,\n                };\n              }),\n          ],\n          'aria-label': t('permission.table.table.permission_list_table'),\n          shouldDefaultCustomRowWrapper: true,\n          variant: TableVariant.compact,\n          canSelectAll: false,\n          // TODO: gridBreakPoint: 'grid-lg' NOTE: This is needed so that the table doesn't overrun a narrow screen, but it currently breaks the first header because it's messing with :before of the first cell and so is the mas--[streams-]table-view__table\n        }}\n        rowDataTestId={'tablePermissions-row'}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Modal,\n  ModalVariant,\n  Button,\n  ButtonVariant,\n} from '@patternfly/react-core';\n\nexport type PreCancelModalProps = {\n  isOpen: boolean;\n  closeModal: () => void;\n  resumeEditing: () => void;\n};\n\nconst PreCancelModal: React.FC<PreCancelModalProps> = ({\n  isOpen,\n  closeModal,\n  resumeEditing,\n}) => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n\n  return (\n    <Modal\n      id='manage-permissions-precancel-modal'\n      variant={ModalVariant.small}\n      isOpen={isOpen}\n      aria-label={t(\n        'permission.manage_permissions_pre_cancel_dialog.aria_label'\n      )}\n      title={`${t(\n        'permission.manage_permissions_pre_cancel_dialog.discard_changes'\n      )}?`}\n      titleIconVariant='warning'\n      showClose={true}\n      aria-describedby='modal-message'\n      onClose={closeModal}\n      onEscapePress={closeModal}\n      actions={[\n        <Button onClick={closeModal} key={1} variant={ButtonVariant.primary}>\n          {t('permission.manage_permissions_pre_cancel_dialog.discard_changes')}\n        </Button>,\n        <Button\n          onClick={resumeEditing}\n          key={2}\n          variant={ButtonVariant.secondary}\n        >\n          {t('permission.manage_permissions_pre_cancel_dialog.resume_editing')}\n        </Button>,\n      ]}\n    >\n      {t('permission.manage_permissions_pre_cancel_dialog.modal_description')}\n    </Modal>\n  );\n};\n\nexport { PreCancelModal };\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Alert,\n  FormAlert,\n  Modal,\n  ValidatedOptions,\n} from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport {\n  convertEnum,\n  EnhancedAclBinding,\n  usePermissionsService,\n} from '@app/services/acls';\nimport { ConfigContext, useFederated } from '@app/contexts';\nimport {\n  BaseModalProps,\n  ManagePermissionsModalProps,\n  ManagePermissionsProps,\n  usePrincipals,\n  useAuth,\n} from '@rhoas/app-services-ui-shared';\nimport { SelectAccount } from '@app/modules/Permissions/components/ManagePermissionsDialog/SelectAccount';\nimport { CreatePermissions } from '@app/modules/Permissions/components/ManagePermissionsDialog/CreatePermissions';\nimport { Validated } from '@app/modules/Permissions/components/ManagePermissionsDialog/validated';\nimport {\n  AclShortcutType,\n  isNewAclModified,\n  NewAcl,\n  NewAcls,\n} from '@app/modules/Permissions/components/ManagePermissionsDialog/acls';\nimport { FormGroupWithPopover, MASLoading } from '@app/components';\nimport { useValidateTopic } from '@app/modules/Topics/utils';\nimport { ExistingAclTable } from '@app/modules/Permissions/components/ManagePermissionsDialog/ExistingAclTable';\nimport {\n  AclOperationFilter,\n  AclPatternType,\n  AclPatternTypeFilter,\n  AclPermissionTypeFilter,\n  AclResourceType,\n  AclResourceTypeFilter,\n} from '@rhoas/kafka-instance-sdk';\nimport { PreCancelModal } from './PreCancelModal';\nimport './ManagePermissions.css';\n\nexport const ManagePermissions: React.VFC<\n  ManagePermissionsProps & BaseModalProps\n> = ({\n  hideModal,\n  onSave,\n  kafkaName,\n  selectedAccountId,\n  acls,\n  topicNames,\n  consumerGroupIds,\n  title,\n  variant,\n}) => {\n  const config = useContext(ConfigContext);\n  const permissionsService = usePermissionsService(config);\n  const [resourceOperations, setResourceOperations] = useState<\n    { [key: string]: Array<string> } | undefined\n  >();\n\n  useEffect(() => {\n    const fetchResourceOperations = async () => {\n      const answer = await permissionsService.getResourceOperations();\n      setResourceOperations(answer);\n    };\n    fetchResourceOperations();\n  }, []);\n\n  return (\n    <ManagePermissionsModal\n      topicNames={topicNames}\n      consumerGroupIds={consumerGroupIds}\n      acls={acls}\n      resourceOperations={resourceOperations}\n      hideModal={hideModal}\n      selectedAccountId={selectedAccountId}\n      onSave={onSave}\n      kafkaName={kafkaName}\n      variant={variant}\n      title={title}\n    />\n  );\n};\n\nexport const ManagePermissionsModal: React.FC<\n  ManagePermissionsModalProps & BaseModalProps\n> = ({\n  hideModal,\n  onSave,\n  kafkaName,\n  selectedAccountId,\n  acls,\n  topicNames,\n  consumerGroupIds,\n  resourceOperations,\n  title,\n  variant,\n}) => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n  const { kafka } = useFederated() || {};\n  const auth = useAuth();\n\n  const [selectedAccount, setSelectedAccount] = useState<\n    Validated<string | undefined>\n  >({ value: selectedAccountId, validated: undefined });\n  const [step, setStep] = useState<number>(\n    selectedAccountId === undefined ? 1 : 2\n  );\n  const [newAcls, setNewAcls] = useState<NewAcls[]>([]);\n  const [removeAcls, setRemoveAcls] = useState<EnhancedAclBinding[]>([]);\n  const [isOpenPreCancelModal, setIsOpenPreCancelModal] =\n    useState<boolean>(false);\n\n  const escapeClosesModal = useRef<boolean>(true);\n  const { validateName } = useValidateTopic();\n  const [currentlyLoggedInuser, setCurrentlyLoggedInuser] = useState<\n    string | undefined\n  >();\n\n  const principals = usePrincipals();\n\n  const config = useContext(ConfigContext);\n  const permissionsService = usePermissionsService(config);\n\n  useEffect(() => {\n    const getUsername = async () => {\n      const username = await auth?.getUsername();\n      setCurrentlyLoggedInuser(username);\n    };\n    getUsername();\n  }, [auth]);\n\n  const setValidationAcls = (acls: NewAcls[]) => {\n    return acls?.map((value) => {\n      if (Array.isArray(value)) {\n        setValidationAcls(value);\n      }\n\n      if (!Array.isArray(value)) {\n        if (value.aclShortcutType === AclShortcutType.ManageAccess) {\n          return value;\n        }\n\n        const answer = Object.assign({}, value);\n\n        if (!value.aclShortcutType) {\n          if (value.operation.value === undefined) {\n            answer.operation.validated = ValidatedOptions.error;\n            answer.operation.errorMessage = t(\n              'permission.manage_permissions_dialog.assign_permissions.must_select_operation_error'\n            );\n          } else {\n            answer.operation.validated = ValidatedOptions.default;\n          }\n\n          if (value.permission.value === undefined) {\n            answer.permission.validated = ValidatedOptions.error;\n            answer.permission.errorMessage = t(\n              'permission.manage_permissions_dialog.assign_permissions.must_select_permission_error'\n            );\n          } else {\n            answer.permission.validated = ValidatedOptions.default;\n          }\n        }\n\n        if (value.resourceType.value === undefined) {\n          answer.resourceType.validated = ValidatedOptions.error;\n          answer.resourceType.errorMessage = t(\n            'permission.manage_permissions_dialog.assign_permissions.must_select_resource_type_error'\n          );\n        } else {\n          answer.resourceType.validated = ValidatedOptions.default;\n        }\n\n        if (value.resourceType.value !== AclResourceType.Cluster) {\n          if (value.resource.value === undefined) {\n            answer.resource.validated = ValidatedOptions.error;\n            answer.resource.errorMessage = t(\n              'permission.manage_permissions_dialog.assign_permissions.must_select_resource_error'\n            );\n          } else if (value.resource.value === '*') {\n            answer.resource.validated = ValidatedOptions.default;\n          } else {\n            const errorMessage = validateName(value.resource.value);\n            if (errorMessage !== undefined) {\n              answer.resource.validated = ValidatedOptions.error;\n              answer.resource.errorMessage = errorMessage;\n            } else {\n              answer.resource.validated = ValidatedOptions.default;\n            }\n          }\n\n          if (value.patternType.value === undefined) {\n            answer.patternType.validated = ValidatedOptions.error;\n            answer.patternType.errorMessage = t(\n              'permission.manage_permissions_dialog.assign_permissions.must_select_pattern_type_error'\n            );\n          } else {\n            answer.patternType.validated = ValidatedOptions.default;\n          }\n        }\n\n        return answer;\n      } else {\n        return value;\n      }\n    });\n  };\n\n  const validateAcls = async (acls: NewAcls[]) => {\n    if (acls) {\n      for (let value of acls.filter((value) => isNewAclModified(value))) {\n        value = Array.isArray(value) ? value : [value];\n        value.forEach((acl: NewAcl) => {\n          if (acl.resourceType.value === undefined) {\n            throw Error('resourceType must not be undefined');\n          }\n          if (acl.resourceType.value !== AclResourceType.Cluster) {\n            if (acl.resource.value === undefined) {\n              throw Error('resource must not be undefined');\n            }\n            if (acl.patternType.value === undefined) {\n              throw Error('patternType must not be undefined');\n            }\n          } else {\n            acl.resource.value = 'kafka-cluster';\n            acl.patternType.value = AclPatternType.Literal;\n          }\n          if (acl.permission.value === undefined) {\n            throw Error('permission must not be undefined');\n          }\n\n          if (acl.operation.value === undefined && !acl.aclShortcutType) {\n            throw Error('operation must not be undefined');\n          }\n\n          if (acl.operations) {\n            acl.operations?.forEach((operation) => {\n              acl.operation.value = operation;\n              saveAcl(acl);\n            });\n          } else {\n            saveAcl(acl);\n          }\n        });\n      }\n\n      await deleteAcls();\n\n      onSave && (await onSave());\n      hideModal();\n    }\n  };\n\n  const save = async () => {\n    let valid = true;\n    if (selectedAccount.value === undefined) {\n      setSelectedAccount((v) => {\n        return {\n          ...v,\n          validated: ValidatedOptions.error,\n          errorMessage: t(\n            'permission.manage_permissions_dialog.must_select_account_error'\n          ),\n        };\n      });\n      valid = false;\n    } else {\n      setSelectedAccount((v) => {\n        return {\n          ...v,\n          validated: ValidatedOptions.default,\n        };\n      });\n    }\n\n    const validatedAcls = setValidationAcls(newAcls);\n    const isInvalid = isFormInvalid(validatedAcls);\n    if (!isInvalid && valid) {\n      validateAcls(validatedAcls);\n    }\n\n    setNewAcls(validatedAcls);\n  };\n\n  const saveAcl = async (acl: NewAcls) => {\n    if (!Array.isArray(acl)) {\n      const { resource, patternType, permission, resourceType, operation } =\n        acl;\n      if (\n        resource?.value &&\n        patternType?.value &&\n        permission?.value &&\n        resourceType?.value &&\n        operation?.value\n      ) {\n        await permissionsService.addPermission({\n          resourceName: resource.value,\n          patternType: patternType.value,\n          permission: permission.value,\n          resourceType: resourceType.value,\n          operation: operation.value,\n          principal: `User:${selectedAccount.value}`,\n        });\n      }\n    }\n  };\n\n  const deleteAcls = async () => {\n    for (const value of removeAcls) {\n      await permissionsService.deletePermission({\n        resourceName: value.resourceName,\n        patternType: convertEnum(value.patternType, AclPatternTypeFilter),\n        permissionType: convertEnum(value.permission, AclPermissionTypeFilter),\n        resourceType: convertEnum(value.resourceType, AclResourceTypeFilter),\n        operation: convertEnum(value.operation, AclOperationFilter),\n        principal: `User:${selectedAccount.value}`,\n      });\n    }\n  };\n\n  const isFormInvalid = (newAcls: NewAcls[]): boolean => {\n    return newAcls.some((value) => {\n      value = Array.isArray(value) ? value : [value];\n      return value?.some(\n        (v) =>\n          v.operation.validated === 'error' ||\n          v.patternType.validated === 'error' ||\n          v.resource.validated === 'error' ||\n          v.resourceType.validated === 'error'\n      );\n    });\n  };\n\n  const Step2 = () => {\n    if (step === 2) {\n      if (resourceOperations === undefined) {\n        return <MASLoading />;\n      }\n      const menuAppendTo =\n        document.getElementById('manage-permissions-modal') || undefined;\n\n      const FormValidAlert: React.FunctionComponent = () => {\n        if (isFormInvalid(newAcls)) {\n          return (\n            <FormAlert>\n              <Alert\n                variant='danger'\n                title={t('common:form_invalid_alert')}\n                aria-live='polite'\n                isInline\n              />\n            </FormAlert>\n          );\n        }\n        return <></>;\n      };\n      return (\n        <>\n          <FormValidAlert />\n          <ExistingAclTable\n            existingAcls={acls.filter(\n              (i) =>\n                i.principal === `${selectedAccount.value}` ||\n                i.principal === '*'\n            )}\n            selectedAccountId={selectedAccount.value}\n            onRemove={(acl) =>\n              setRemoveAcls((prevState) => {\n                return [...prevState, acl];\n              })\n            }\n          />\n          <CreatePermissions\n            acls={newAcls}\n            setAcls={setNewAcls}\n            topicNames={topicNames}\n            consumerGroupIds={consumerGroupIds}\n            selectedAccount={selectedAccount.value}\n            setEscapeClosesModal={setEscapeClosesModal}\n            resourceOperations={resourceOperations}\n            menuAppendTo={menuAppendTo}\n            kafkaName={kafkaName}\n          />\n        </>\n      );\n    }\n    return <></>;\n  };\n\n  const principal = principals\n    .getAllPrincipals()\n    .filter((p) => p.id !== currentlyLoggedInuser && p.id !== kafka?.owner);\n\n  const Account = () => {\n    if (step === 1) {\n      return (\n        <SelectAccount\n          id={selectedAccount}\n          setId={setSelectedAccount}\n          initialOptions={principal}\n          setEscapeClosesModal={setEscapeClosesModal}\n        />\n      );\n    }\n    return (\n      <FormGroupWithPopover\n        labelHead={t('permission.manage_permissions_dialog.account_id_title')}\n        fieldId='kafka-instance-name'\n        fieldLabel={t('permission.manage_permissions_dialog.account_id_title')}\n        labelBody={t('permission.manage_permissions_dialog.account_id_help')}\n        buttonAriaLabel={t(\n          'permission.manage_permissions_dialog.account_id_aria'\n        )}\n        isRequired={true}\n      >\n        {selectedAccount.value === '*'\n          ? t('permission.manage_permissions_dialog.all_accounts_title')\n          : selectedAccount.value}\n      </FormGroupWithPopover>\n    );\n  };\n\n  const setEscapeClosesModal = (closes: boolean) => {\n    escapeClosesModal.current = closes;\n  };\n\n  const onEscapePress = () => {\n    if (escapeClosesModal.current) {\n      hideModal();\n    }\n  };\n\n  const isDisabledSaveButton = !(\n    newAcls?.some((p) => isNewAclModified(p)) || removeAcls.length > 0\n  );\n\n  const SubmitButton: React.FunctionComponent = () => {\n    if (step === 1) {\n      return (\n        <Button\n          variant='primary'\n          onClick={() => setStep(2)}\n          isDisabled={selectedAccount.value === undefined}\n        >\n          {t('permission.manage_permissions_dialog.step_1_submit_button')}\n        </Button>\n      );\n    }\n    return (\n      <Button\n        variant='primary'\n        onClick={save}\n        key={1}\n        isDisabled={isDisabledSaveButton}\n      >\n        {t('permission.manage_permissions_dialog.step_2_submit_button')}\n      </Button>\n    );\n  };\n\n  const ModalForm: React.FunctionComponent = () => (\n    <Form>\n      <FormGroup\n        fieldId='kafka-instance-name'\n        label={t('permission.manage_permissions_dialog.kafka_instance_title')}\n      >\n        {kafkaName}\n      </FormGroup>\n      <Account />\n      <Step2 />\n    </Form>\n  );\n\n  const closePermissionModal = () => {\n    if (step === 2 && !isDisabledSaveButton) {\n      setIsOpenPreCancelModal(true);\n    } else {\n      hideModal();\n    }\n  };\n\n  const closePreCancelModal = () => {\n    setIsOpenPreCancelModal(false);\n    hideModal();\n  };\n\n  const resumeEditingPermissions = () => {\n    setIsOpenPreCancelModal(false);\n  };\n\n  return (\n    <Modal\n      id='manage-permissions-modal'\n      variant={variant}\n      isOpen={true}\n      aria-label={t('permission.manage_permissions_dialog.aria_label')}\n      position='top'\n      title={title}\n      showClose={true}\n      aria-describedby='modal-message'\n      onClose={closePermissionModal}\n      onEscapePress={onEscapePress}\n      actions={[\n        <SubmitButton key={1} />,\n        <Button onClick={closePermissionModal} key={2} variant='secondary'>\n          {t('permission.manage_permissions_dialog.cancel_button')}\n        </Button>,\n      ]}\n    >\n      <PreCancelModal\n        isOpen={isOpenPreCancelModal}\n        closeModal={closePreCancelModal}\n        resumeEditing={resumeEditingPermissions}\n      />\n      <ModalForm />\n    </Modal>\n  );\n};\n\nexport default ManagePermissions;\n","import { useTranslation } from 'react-i18next';\n\nexport const useValidateTopic = (): {\n  validateName(name: string): string | undefined;\n} => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n\n  return {\n    validateName: (name) => {\n      const legalNameChars = new RegExp('^[a-zA-Z0-9._-]+$');\n      if (name.length && !legalNameChars.test(name)) {\n        return t('topic.topic_name_helper_text');\n      } else if (name.length > 249) {\n        return t('topic.cannot_exceed_characters');\n      } else if (name === '.' || name === '..') {\n        return t('topic.invalid_name_with_dot');\n      }\n      return undefined;\n    },\n  };\n};\n"],"names":["FormGroupWithPopover","children","labelHead","fieldId","fieldLabel","labelBody","buttonAriaLabel","validated","helperText","helperTextInvalid","isRequired","FormGroup","label","labelIcon","Popover","headerContent","bodyContent","onClick","event","preventDefault","className","noVerticalAlign","MASLoading","bullseyeProps","spinnerProps","Bullseye","Spinner","AclShortcutType","SelectAccount","setId","id","initialOptions","setEscapeClosesModal","t","useTranslation","useState","isOpen","setIsOpen","clearSelection","value","undefined","options","SelectGroup","key","SelectOption","description","Divider","filter","principal","principalType","PrincipalType","sort","a","b","displayName","localeCompare","map","index","errorMessage","ValidatedOptions","Select","variant","SelectVariant","typeAheadAriaLabel","onToggle","newState","onSelect","selection","isPlaceholder","onClear","selections","onFilter","_","input","RegExp","accounts","Array","isArray","props","account","allAccounts","test","isInputValuePersisted","placeholderText","isCreatable","menuAppendTo","isGrouped","isNewAclModified","emptyAcl","createEmptyNewAcl","some","v","aclShortcutType","ManageAccess","patternType","resource","permission","resourceType","operation","AclPermissionType","AclPatternType","update2DArrayAcls","prevAcls","newAcl","row","childRow","handle2DArrayAcls","acls","CreateSelect","setSelected","selected","placeholder","P","maxHeight","direction","option","isDisabled","disabled","title","OperationCell","acl","setAcls","resourceOperations","toString","snakeCase","operationType","p","sentenceCase","prevState","k","newPrevState","PermissionTypeCell","operations","LabelGroup","numLabels","Label","color","ResourceType","kafkaName","ConsumeTopic","ProduceTopic","SolidLabel","AclResourceType","PatternTypeCell","CreateTypeahead","setValue","setOptions","useEffect","o","onCreateOption","newValue","createText","ResourceCell","topicNames","consumerGroupIds","validateName","toLowerCase","RemoveButtonCell","removeRow","Tooltip","content","Button","icon","CreatePermissions","selectedAccount","tableColumns","columnTransforms","cellWidth","TextContent","Text","component","TextVariants","account_id","length","TableComposable","Thead","noWrap","Tr","col","Th","Tbody","style","borderBottom","Td","colSpan","metaData","popoverHeader","popoverBody","ButtonVariant","ariaLabel","width","noPadding","preparedRows","ActionList","ActionListItem","PermissionsDropdown","onAddPermission","onShortcutProduceTopic","AclOperation","onShortcutConsumeTopic","onShortcutManageAccess","ExistingAclTable","existingAcls","selectedAccountId","onRemove","answer","cells","item","RemoveButton","TrashIcon","hash","removed","AllAccountsLabel","Trans","ns","i18nKey","MASTable","tableProps","rows","f","originalData","shouldDefaultCustomRowWrapper","TableVariant","canSelectAll","rowDataTestId","PreCancelModal","closeModal","resumeEditing","Modal","ModalVariant","titleIconVariant","showClose","onClose","onEscapePress","actions","ManagePermissions","hideModal","onSave","config","useContext","permissionsService","setResourceOperations","getResourceOperations","ManagePermissionsModal","kafka","auth","useAuth","setSelectedAccount","step","setStep","newAcls","setNewAcls","removeAcls","setRemoveAcls","isOpenPreCancelModal","setIsOpenPreCancelModal","escapeClosesModal","useRef","currentlyLoggedInuser","setCurrentlyLoggedInuser","principals","usePrincipals","getUsername","username","setValidationAcls","Object","assign","save","valid","validatedAcls","isFormInvalid","forEach","Error","saveAcl","deleteAcls","validateAcls","addPermission","resourceName","deletePermission","AclPatternTypeFilter","permissionType","AclPermissionTypeFilter","AclResourceTypeFilter","AclOperationFilter","Step2","document","getElementById","FormAlert","Alert","isInline","i","getAllPrincipals","owner","Account","closes","current","isDisabledSaveButton","closePermissionModal","position","Form","useValidateTopic","name","legalNameChars"],"sourceRoot":""}