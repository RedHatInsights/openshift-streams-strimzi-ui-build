{"version":3,"file":"9449.d23c2cb3.js","mappings":"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","sources":["webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/caret-down-icon.js","webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/help-icon.js","webpack://kafka-ui/./src/components/DropdownWithToggle/DropdownWithToggle.tsx","webpack://kafka-ui/./src/components/FormGroupWithPopover/FormGroupWithPopover.tsx","webpack://kafka-ui/./src/components/TextWithLabelPopover/TextWithLabelPopover.tsx","webpack://kafka-ui/./src/constant/constants.ts","webpack://kafka-ui/./src/modules/Topics/components/CustomRetentionMessage/CustomRetentionMessage.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicAdvanceConfig/TopicAdvanceJumpLinks.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicAdvanceConfig/CoreConfiguration.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicAdvanceConfig/Message.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicAdvanceConfig/Log.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicAdvanceConfig/Replication.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicAdvanceConfig/Cleanup.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicAdvanceConfig/TopicAdvanceIndex.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicAdvanceConfig/Flush.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicAdvanceConfig/TopicAdvanceConfig.tsx","webpack://kafka-ui/./src/modules/Topics/utils/data-options.ts","webpack://kafka-ui/./src/modules/Topics/utils/topicNameValidation.ts","webpack://kafka-ui/./src/modules/Topics/utils/utils.ts","webpack://kafka-ui/./src/services/topics.ts","webpack://kafka-ui/./src/utils/axios.ts"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.CaretDownIconConfig = {\n  name: 'CaretDownIcon',\n  height: 512,\n  width: 320,\n  svgPath: 'M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.CaretDownIcon = require('../createIcon').createIcon(exports.CaretDownIconConfig);\nexports[\"default\"] = exports.CaretDownIcon;","\"use strict\"\nexports.__esModule = true;\nexports.HelpIconConfig = {\n  name: 'HelpIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M521.3,576 C627.5,576 713.7,502 713.7,413.7 C713.7,325.4 627.6,253.6 521.3,253.6 C366,253.6 334.5,337.7 329.2,407.2 C329.2,414.3 335.2,416 343.5,416 L445,416 C450.5,416 458,415.5 460.8,406.5 C460.8,362.6 582.9,357.1 582.9,413.6 C582.9,441.9 556.2,470.9 521.3,473 C486.4,475.1 447.3,479.8 447.3,521.7 L447.3,553.8 C447.3,570.8 456.1,576 472,576 C487.9,576 521.3,576 521.3,576 M575.3,751.3 L575.3,655.3 C575.313862,651.055109 573.620137,646.982962 570.6,644 C567.638831,640.947672 563.552355,639.247987 559.3,639.29884 L463.3,639.29884 C459.055109,639.286138 454.982962,640.979863 452,644 C448.947672,646.961169 447.247987,651.047645 447.29884,655.3 L447.29884,751.3 C447.286138,755.544891 448.979863,759.617038 452,762.6 C454.961169,765.652328 459.047645,767.352013 463.3,767.30116 L559.3,767.30116 C563.544891,767.313862 567.617038,765.620137 570.6,762.6 C573.659349,759.643612 575.360354,755.553963 575.3,751.3 M512,896 C300.2,896 128,723.9 128,512 C128,300.3 300.2,128 512,128 C723.8,128 896,300.2 896,512 C896,723.8 723.7,896 512,896 M512.1,0 C229.7,0 0,229.8 0,512 C0,794.2 229.8,1024 512.1,1024 C794.4,1024 1024,794.3 1024,512 C1024,229.7 794.4,0 512.1,0',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.HelpIcon = require('../createIcon').createIcon(exports.HelpIconConfig);\nexports[\"default\"] = exports.HelpIcon;","import React, { useState } from 'react';\nimport { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport CaretDownIcon from '@patternfly/react-icons/dist/js/icons/caret-down-icon';\nimport { DropdownProps } from '@patternfly/react-core/dist/js';\n\nexport interface IDropdownWithToggleProps {\n  id: string;\n  toggleId: string;\n  value: string;\n  name: string;\n  items: IDropdownOption[];\n  onSelectOption?: (value: string, name: string) => void;\n  ariaLabel?: string;\n  menuAppendTo?: HTMLElement | (() => HTMLElement) | 'parent' | 'inline';\n  isLabelAndValueNotSame?: boolean;\n}\n\nexport interface IDropdownOption {\n  value?: string;\n  label?: string;\n  key?: string;\n  isDisabled?: boolean;\n}\n\nexport const DropdownWithToggle: React.FC<IDropdownWithToggleProps> = ({\n  id,\n  toggleId,\n  items,\n  value,\n  ariaLabel,\n  onSelectOption,\n  name,\n  menuAppendTo,\n  isLabelAndValueNotSame,\n}) => {\n  const [isOpen, setIsOpen] = useState<boolean>();\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect: DropdownProps['onSelect'] = (e) => {\n    if (e && e.currentTarget.textContent) {\n      const value: string = e.currentTarget.textContent;\n      if (onSelectOption && value) {\n        onSelectOption(value.toLowerCase(), name);\n      }\n      setIsOpen((isOpen) => !isOpen);\n    }\n  };\n\n  const getItems = (options: IDropdownOption[]) => {\n    const items = options.map((option) => {\n      const { key, value, label } = option;\n\n      return (\n        <DropdownItem key={key} value={value}>\n          {label || value}\n        </DropdownItem>\n      );\n    });\n\n    return items;\n  };\n\n  const getSelectedValue = () => {\n    if (isLabelAndValueNotSame) {\n      const filteredOption = items?.filter((item) => item.value === value)[0];\n      return filteredOption?.label;\n    }\n    return value;\n  };\n\n  const dropdownToggle = (\n    <DropdownToggle\n      id={toggleId}\n      onToggle={onToggle}\n      toggleIndicator={CaretDownIcon}\n    >\n      {getSelectedValue()}\n    </DropdownToggle>\n  );\n\n  return (\n    <Dropdown\n      name={name}\n      id={id}\n      onSelect={onSelect}\n      toggle={dropdownToggle}\n      isOpen={isOpen}\n      aria-label={ariaLabel}\n      dropdownItems={getItems(items)}\n      menuAppendTo={menuAppendTo}\n    />\n  );\n};\n","import { FormGroup, Popover, ValidatedOptions } from '@patternfly/react-core';\nimport HelpIcon from '@patternfly/react-icons/dist/js/icons/help-icon';\nimport React from 'react';\n\nexport type FormGroupWithPopoverProps = {\n  children: React.ReactNode;\n  labelHead: string;\n  fieldId: string;\n  fieldLabel?: string;\n  labelBody: string;\n  buttonAriaLabel: string;\n  validated?: ValidatedOptions;\n  helperText?: string;\n  helperTextInvalid?: string;\n  isRequired?: boolean;\n};\n\nexport const FormGroupWithPopover: React.FC<FormGroupWithPopoverProps> = ({\n  children,\n  labelHead,\n  fieldId,\n  fieldLabel,\n  labelBody,\n  buttonAriaLabel,\n  validated,\n  helperText,\n  helperTextInvalid,\n  isRequired,\n}) => {\n  return (\n    <FormGroup\n      fieldId={fieldId}\n      label={fieldLabel}\n      validated={validated}\n      helperText={helperText}\n      helperTextInvalid={helperTextInvalid}\n      isRequired={isRequired}\n      labelIcon={\n        <Popover\n          headerContent={<div>{labelHead}</div>}\n          bodyContent={<div>{labelBody}</div>}\n        >\n          <button\n            aria-label={buttonAriaLabel}\n            onClick={(event) => event.preventDefault()}\n            className='pf-c-form__group-label-help'\n          >\n            <HelpIcon noVerticalAlign />\n          </button>\n        </Popover>\n      }\n    >\n      {children}\n    </FormGroup>\n  );\n};\n","import { Popover, FormGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\nimport HelpIcon from '@patternfly/react-icons/dist/js/icons/help-icon';\n\nimport './TextWithLabelPopover.css';\n\nexport interface TextWithLabelPopoverProps {\n  /** Field id */\n  fieldId: string;\n  /** Field label */\n  fieldLabel: string;\n  /** Field value */\n  fieldValue?: string;\n  /** Header text for popover label */\n  popoverHeader: string;\n  /** Body text for popover label */\n  popoverBody: string;\n  /** Aria label for popover button */\n  btnAriaLabel: string;\n  /** Indicates if unlimited should be shown for negative numbers */\n  showUnlimited?: boolean;\n}\n\nexport const TextWithLabelPopover: React.FC<TextWithLabelPopoverProps> = ({\n  fieldId,\n  fieldLabel,\n  btnAriaLabel,\n  fieldValue,\n  popoverBody,\n  popoverHeader,\n  showUnlimited,\n}) => {\n  let displayText = '-';\n\n  if (\n    showUnlimited === true &&\n    fieldValue !== undefined &&\n    parseInt(fieldValue) < 0\n  ) {\n    displayText = 'Unlimited';\n  } else if (fieldValue) {\n    displayText = fieldValue;\n  }\n\n  return (\n    <FormGroup\n      fieldId={fieldId}\n      label={fieldLabel}\n      className='kafka-ui-form-group--readonly'\n      labelIcon={\n        <Popover\n          headerContent={<div>{popoverHeader}</div>}\n          bodyContent={<div>{popoverBody}</div>}\n        >\n          <button\n            aria-label={btnAriaLabel}\n            onClick={(event) => event.preventDefault()}\n            className='pf-c-form__group-label-help'\n          >\n            <HelpIcon noVerticalAlign />\n          </button>\n        </Popover>\n      }\n    >\n      <TextInput\n        isReadOnly\n        type='text'\n        id={fieldId}\n        name={fieldId}\n        value={displayText}\n      />\n    </FormGroup>\n  );\n};\n","export const DEFAULT_REPLICAS = '3';\nexport const DEFAULT_MIN_CLEANBLE_RATIO = '0.5';\nexport const DEFAULT_MIN_INSYNC_REPLICAS = '2';\nexport const DEFAULT_SEGMENT_TIME = '604800000 milliseconds (7 days)';\nexport const DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF =\n  '9223372036854775807 milliseconds';\nexport const DEFAULT_SEGMENT_INDEX_SIZE = '10485760 bytes (10 mebibytes)';\nexport const DEFAULT_INDEX_INTERVAL_SIZE = '4096 bytes (4 kibibytes)';\nexport const DEFAULT_LOG_SEGMENT_SIZE = '1073741824 bytes (1 gibibyte)';\nexport const DEFAULT_DELETE_RETENTION_TIME = '86400000 milliseconds (1 day)';\nexport const DEFAULT_SEGMENT_JITTER_TIME = '0 milliseconds';\nexport const DEFAULT_FILE_DELETE_DELAY = '60000 milliseconds (1 minute)';\nexport const DEFAULT_MAXIMUM_MESSAGE_BYTES = '1048588 bytes';\nexport const DEFAULT_MESSAGE_TIMESTAMP_TYPE = 'CreateTime';\nexport const DEFAULT_MINIMUM_COMPACTION_LAG_TIME = '0 milliseconds';\nexport const DEFAULT_FLUSH_INTERVAL_MESSAGES = '9223372036854775807 messages';\nexport const DEFAULT_FLUSH_INTERVAL_TIME = '9223372036854775807 milliseconds';\nexport const MIN_PARTITIONS = 1;\nexport const MAX_PARTITIONS = 1000;\n","import React from 'react';\nimport {\n  Flex,\n  FlexItem,\n  Select,\n  SelectProps,\n  SelectOption,\n  NumberInput,\n  NumberInputProps,\n  SelectVariant,\n  SelectOptionObject,\n} from '@patternfly/react-core';\nimport {\n  IAdvancedTopic,\n  kebabToDotSeparated,\n  SelectOptions,\n  RetentionTimeUnits,\n} from '@app/modules/Topics/utils';\n\nexport type CustomRetentionMessageProps = NumberInputProps &\n  SelectProps & {\n    id?: string;\n    selectOptions: SelectOptions[];\n    topicData: IAdvancedTopic;\n    name: string;\n    setTopicData: (data: IAdvancedTopic) => void;\n  };\n\nconst CustomRetentionMessage: React.FC<CustomRetentionMessageProps> = ({\n  onToggle,\n  isOpen,\n  selectOptions,\n  topicData,\n  setTopicData,\n  name,\n}) => {\n  const onSelectRetentionUnit = (\n    event: React.MouseEvent | React.ChangeEvent,\n    fieldName: string,\n    selection: string | SelectOptionObject\n  ) => {\n    let propetyName: keyof IAdvancedTopic | undefined = undefined;\n    if (fieldName === 'retention-ms') {\n      propetyName = 'selectedRetentionTimeOption';\n    } else if (fieldName === 'retention-bytes') {\n      propetyName = 'selectedRetentionSizeOption';\n    }\n    if (propetyName !== undefined) {\n      setTopicData({\n        ...topicData,\n        [`${kebabToDotSeparated(fieldName)}.unit`]: selection,\n        [propetyName]:\n          selection !== RetentionTimeUnits.DAY\n            ? RetentionTimeUnits.CUSTOM\n            : topicData.selectedRetentionTimeOption,\n      });\n    }\n\n    onToggle(false, event);\n  };\n\n  const handleTouchSpin = (name: string, operator: string) => {\n    let value;\n    const fieldName = kebabToDotSeparated(name) as keyof IAdvancedTopic;\n    const selectedRetention =\n      fieldName === 'retention.ms'\n        ? 'selectedRetentionTimeOption'\n        : 'selectedRetentionSizeOption';\n\n    if (operator === '+') {\n      value = Number(topicData[fieldName]) + 1;\n    } else if (operator === '-') {\n      value = Number(topicData[fieldName]) - 1;\n    }\n\n    setTopicData({\n      ...topicData,\n      [fieldName]: value,\n      [selectedRetention]: RetentionTimeUnits.CUSTOM,\n    });\n  };\n\n  const onChangeTouchSpin = (\n    event: React.FormEvent<HTMLInputElement>,\n    name: string\n  ) => {\n    const { value } = event.currentTarget;\n    const truncValue = Math.trunc(Number(value)).toString();\n    const fieldName = kebabToDotSeparated(name);\n\n    setTopicData({\n      ...topicData,\n      [fieldName]: truncValue,\n    });\n  };\n\n  return (\n    <div className='kafka-ui--radio__parameters'>\n      <Flex>\n        <FlexItem>\n          <NumberInput\n            name={name}\n            onMinus={() => handleTouchSpin(name, '-')}\n            onPlus={() => handleTouchSpin(name, '+')}\n            value={Number(\n              topicData[kebabToDotSeparated(name) as keyof IAdvancedTopic]\n            )}\n            onChange={(event) => onChangeTouchSpin(event, name)}\n            plusBtnProps={{ name }}\n            minusBtnProps={{ name }}\n            min={0}\n          />\n        </FlexItem>\n        <FlexItem>\n          <Select\n            variant={SelectVariant.single}\n            aria-label='Select Input'\n            onToggle={onToggle}\n            onSelect={(event, selection) =>\n              onSelectRetentionUnit(event, name, selection)\n            }\n            selections={\n              topicData[\n                `${kebabToDotSeparated(name)}.unit` as keyof IAdvancedTopic\n              ]\n            }\n            isOpen={isOpen}\n          >\n            {selectOptions?.map((s) => (\n              <SelectOption\n                key={s.key}\n                value={s.value}\n                isPlaceholder={s.isPlaceholder}\n              />\n            ))}\n          </Select>\n        </FlexItem>\n      </Flex>\n    </div>\n  );\n};\n\nexport { CustomRetentionMessage };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { SidebarPanel, JumpLinks, JumpLinksItem } from '@patternfly/react-core';\n\nconst TopicAdvanceJumpLinks: React.FC = () => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n\n  return (\n    <SidebarPanel variant='sticky'>\n      <JumpLinks\n        isVertical\n        label={t('topic.jump_to_section')}\n        scrollableSelector='.pf-c-page__main-section.pf-m-overflow-scroll'\n        style={{ position: 'sticky' }}\n        // offset={-164} // for header\n      >\n        <JumpLinksItem key={0} href='#core-configuration'>\n          {t('topic.core_configuration')}\n        </JumpLinksItem>\n        <JumpLinksItem key={1} href='#messages'>\n          {t('topic.messages')}\n        </JumpLinksItem>\n        <JumpLinksItem key={2} href='#log'>\n          {t('topic.log')}\n        </JumpLinksItem>\n        <JumpLinksItem key={3} href='#replication'>\n          {t('topic.replication')}\n        </JumpLinksItem>\n        <JumpLinksItem key={4} href='#cleanup'>\n          {t('common.cleanup')}\n        </JumpLinksItem>\n        <JumpLinksItem key={5} href='#index'>\n          {t('topic.index')}\n        </JumpLinksItem>\n        <JumpLinksItem key={6} href='#flush'>\n          {t('topic.flush')}\n        </JumpLinksItem>\n      </JumpLinks>\n    </SidebarPanel>\n  );\n};\n\nexport { TopicAdvanceJumpLinks };\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  FormSection,\n  TextContent,\n  Text,\n  TextVariants,\n  TextInput,\n  NumberInput,\n  Stack,\n  Radio,\n  ValidatedOptions,\n} from '@patternfly/react-core';\nimport { FormGroupWithPopover, TextWithLabelPopover } from '@app/components';\nimport { CustomRetentionMessage } from '@app/modules/Topics/components';\nimport {\n  IAdvancedTopic,\n  RetentionSizeUnits,\n  RetentionTimeUnits,\n  kebabToCamel,\n  useValidateTopic,\n  unitsToBytes as RetentionSizeUnitToValue,\n  RetentionTimeUnitToValue,\n  retentionTimeSelectOptions,\n  retentionSizeSelectOptions,\n} from '@app/modules/Topics/utils';\nimport { MAX_PARTITIONS, DEFAULT_MIN_INSYNC_REPLICAS } from '@app/constant';\nimport { useFederated } from '@app/contexts';\n\nexport type CoreConfigurationProps = {\n  isCreate?: boolean;\n  topicData: IAdvancedTopic;\n  setTopicData: (data: IAdvancedTopic) => void;\n  fetchTopic: (topic: string) => void;\n  initialPartition: number | undefined;\n  invalidText: string;\n  setInvalidText: (message: string) => void;\n  setTopicValidated: (error: ValidatedOptions) => void;\n  topicValidated: ValidatedOptions;\n  setWarning: (isWarning: boolean) => void;\n  warning: boolean;\n};\n\nconst CoreConfiguration: React.FC<CoreConfigurationProps> = ({\n  isCreate,\n  topicData,\n  setTopicData,\n  fetchTopic,\n  initialPartition,\n  invalidText,\n  setInvalidText,\n  setTopicValidated,\n  topicValidated,\n  setWarning,\n  warning,\n}) => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n  const { validateName } = useValidateTopic();\n  const { replicationFactor, minInSyncReplicas } = useFederated() || {};\n\n  //states\n  const [partitionsValidated, setPartitionsValidated] =\n    useState<ValidatedOptions>(ValidatedOptions.default);\n  const [isRetentionTimeSelectOpen, setIsRetentionTimeSelectOpen] =\n    useState<boolean>();\n  const [isRetentionSizeSelectOpen, setIsRetentionSizeSelectOpen] =\n    useState<boolean>();\n\n  const validationCheck = useCallback(\n    (value: string) => {\n      const errorMessage = validateName(value);\n      if (errorMessage) {\n        setInvalidText(errorMessage);\n        setTopicValidated(ValidatedOptions.error);\n      } else {\n        setTopicValidated(ValidatedOptions.default);\n      }\n    },\n    [setInvalidText, setTopicValidated, validateName]\n  );\n\n  //use effects\n  useEffect(() => {\n    if (!isCreate) {\n      fetchTopic(topicData.name);\n    }\n    validationCheck(topicData.name);\n  }, [fetchTopic, isCreate, topicData.name, validationCheck]);\n\n  const partitionsWarnigCheck = (operator: string) => {\n    let value: number | undefined;\n    if (operator === '+') {\n      value = Number(topicData.numPartitions) + 1;\n    } else if (operator === '-') {\n      value = Number(topicData.numPartitions) - 1;\n    }\n\n    if (value) {\n      if (initialPartition && value > initialPartition) {\n        setPartitionsValidated(ValidatedOptions.warning);\n        setWarning(true);\n      } else {\n        setPartitionsValidated(ValidatedOptions.default);\n        setWarning(false);\n      }\n    }\n  };\n\n  const handleRetentionMessageSize = (value: string) => {\n    setTopicData({\n      ...topicData,\n      'retention.bytes':\n        value === RetentionSizeUnits.UNLIMITED ||\n        value === RetentionSizeUnits.CUSTOM\n          ? topicData['retention.bytes']\n          : `${\n              RetentionSizeUnitToValue[\n                value as keyof typeof RetentionSizeUnitToValue\n              ]\n            }`,\n      selectedRetentionSizeOption: value,\n    });\n  };\n\n  const onRetentionTimeToggle = (isOpen: boolean) => {\n    setIsRetentionTimeSelectOpen(isOpen);\n  };\n\n  const onRetentionSizeToggle = (isOpen: boolean) => {\n    setIsRetentionSizeSelectOpen(isOpen);\n  };\n\n  const handleRetentionMessageTime = (value: string) => {\n    setTopicData({\n      ...topicData,\n      'retention.ms':\n        value === RetentionTimeUnits.UNLIMITED ||\n        value === RetentionTimeUnits.CUSTOM\n          ? topicData['retention.ms']\n          : `${\n              RetentionTimeUnitToValue[\n                value as keyof typeof RetentionTimeUnitToValue\n              ]\n            }`,\n      selectedRetentionTimeOption: value,\n    });\n  };\n\n  const handleTextInputChange = (\n    value: string,\n    event: React.FormEvent<HTMLInputElement>\n  ) => {\n    validationCheck(value);\n    const { name: fieldName } = event.currentTarget;\n    setTopicData({ ...topicData, [kebabToCamel(fieldName)]: value });\n  };\n\n  const onPartitionsChange = (event: React.FormEvent<HTMLInputElement>) => {\n    const { name: fieldName, value } = event.currentTarget;\n    let partitionValue = Number(value);\n    if (initialPartition) {\n      if (partitionValue > initialPartition) {\n        setPartitionsValidated(ValidatedOptions.warning);\n        setWarning(true);\n      }\n\n      if (partitionValue < initialPartition) {\n        partitionValue = initialPartition;\n        setPartitionsValidated(ValidatedOptions.default);\n        setWarning(false);\n      } else if (partitionValue > MAX_PARTITIONS) {\n        partitionValue = MAX_PARTITIONS;\n      }\n    }\n    setTopicData({ ...topicData, [kebabToCamel(fieldName)]: partitionValue });\n  };\n\n  const handleTouchSpin = (name: string, operator: string) => {\n    let value;\n    const fieldName = kebabToCamel(name) as keyof IAdvancedTopic;\n\n    if (operator === '+') {\n      value = Number(topicData[fieldName]) + 1;\n    } else if (operator === '-') {\n      value = Number(topicData[fieldName]) - 1;\n    }\n\n    setTopicData({\n      ...topicData,\n      [fieldName]: value,\n    });\n\n    if (!isCreate) {\n      partitionsWarnigCheck(operator);\n    }\n  };\n\n  const retentionTimeInput = (\n    <CustomRetentionMessage\n      toggleId='core-config-retention-dropdowntoggle'\n      name='retention-ms'\n      topicData={topicData}\n      setTopicData={setTopicData}\n      onToggle={onRetentionTimeToggle}\n      isOpen={isRetentionTimeSelectOpen}\n      selectOptions={retentionTimeSelectOptions}\n    />\n  );\n\n  const retentionSizeInput = (\n    <CustomRetentionMessage\n      toggleId='core-config-retention-size-dropdowntoggle'\n      name='retention-bytes'\n      topicData={topicData}\n      setTopicData={setTopicData}\n      onToggle={onRetentionSizeToggle}\n      isOpen={isRetentionSizeSelectOpen}\n      selectOptions={retentionSizeSelectOptions}\n    />\n  );\n\n  return (\n    <FormSection\n      title={t('topic.core_configuration')}\n      id='core-configuration'\n      titleElement={'h2'}\n    >\n      <TextContent>\n        <Text component={TextVariants.p} className='section-info'>\n          {t('topic.core_config_info')}\n        </Text>\n      </TextContent>\n      {isCreate ? (\n        <FormGroupWithPopover\n          labelHead={t('topic.topic_name')}\n          fieldId='create-topic-name'\n          fieldLabel={t('topic.topic_name')}\n          labelBody={t('topic.topic_name_description')}\n          buttonAriaLabel='More info for topic name field'\n          helperTextInvalid={invalidText}\n          validated={topicValidated}\n          isRequired={true}\n          helperText={t('topic.topic_name_helper_text')}\n        >\n          <TextInput\n            isRequired\n            type='text'\n            id='create-topic-name'\n            name='name'\n            value={topicData.name}\n            onChange={handleTextInputChange}\n            label={t('topic.topic_name')}\n            placeholder={t('topic.enter_name')}\n            validated={topicValidated}\n          />\n        </FormGroupWithPopover>\n      ) : (\n        <TextWithLabelPopover\n          fieldId='topic-name'\n          btnAriaLabel='topic detail name'\n          fieldLabel='Name'\n          fieldValue={topicData.name}\n          popoverBody={t('topic.topic_name_description')}\n          popoverHeader={t('topic.topic_name')}\n        />\n      )}\n\n      <FormGroupWithPopover\n        fieldId='create-topic-partitions'\n        fieldLabel='Partitions'\n        labelHead={t('topic.partitions')}\n        labelBody={t('topic.partitions_description')}\n        buttonAriaLabel='More info for partitions field'\n        validated={partitionsValidated}\n        helperText={warning ? t('topic.partitions_warning') : undefined}\n      >\n        <NumberInput\n          id='create-topic-partitions'\n          inputName='num-partitions'\n          onChange={onPartitionsChange}\n          onPlus={() => handleTouchSpin('num-partitions', '+')}\n          onMinus={() => handleTouchSpin('num-partitions', '-')}\n          value={Number(topicData.numPartitions)}\n          plusBtnProps={{ name: 'num-partitions' }}\n          minusBtnProps={{ name: 'num-partitions' }}\n          min={initialPartition}\n          max={MAX_PARTITIONS}\n        />\n      </FormGroupWithPopover>\n\n      <TextWithLabelPopover\n        fieldId='replicas'\n        btnAriaLabel={t('topic.replicas')}\n        fieldLabel={t('topic.replicas')}\n        fieldValue={\n          isCreate ? replicationFactor?.toString() : topicData.replicationFactor\n        }\n        popoverBody={t('topic.replicas_description')}\n        popoverHeader={t('topic.replicas')}\n      />\n      <TextWithLabelPopover\n        fieldId='min-insync-replicas'\n        btnAriaLabel='topic detail min-in-sync replica'\n        fieldLabel='Minimum in-sync replicas'\n        fieldValue={\n          minInSyncReplicas?.toString() || DEFAULT_MIN_INSYNC_REPLICAS\n        }\n        popoverBody={t('topic.min_insync_replicas_description')}\n        popoverHeader={t('topic.min_insync_replicas')}\n      />\n      <FormGroupWithPopover\n        fieldId='retention'\n        fieldLabel='Retention time'\n        labelHead={t('topic.retention_time')}\n        labelBody={t('topic.retention_time_description')}\n        buttonAriaLabel='More info for retention time field'\n      >\n        <Stack hasGutter>\n          <Radio\n            isChecked={\n              topicData.selectedRetentionTimeOption ===\n                RetentionTimeUnits.DAY ||\n              topicData.selectedRetentionTimeOption ===\n                RetentionTimeUnits.WEEK ||\n              topicData.selectedRetentionTimeOption ===\n                RetentionTimeUnits.CUSTOM\n            }\n            name='custom-retention-time'\n            onChange={() =>\n              handleRetentionMessageTime(RetentionTimeUnits.CUSTOM)\n            }\n            label={retentionTimeInput}\n            className='kafka-ui--radio-label__number-input'\n            aria-label='custom duration'\n            id='custom-retention-time'\n            value={RetentionTimeUnits.CUSTOM}\n          />\n          <Radio\n            isChecked={\n              topicData.selectedRetentionTimeOption ===\n              RetentionTimeUnits.UNLIMITED\n            }\n            name='unlimited-retention-time'\n            onChange={() =>\n              handleRetentionMessageTime(RetentionTimeUnits.UNLIMITED)\n            }\n            label='Unlimited'\n            aria-label='Unlimited'\n            id='unlimited-retention-time'\n            value={RetentionTimeUnits.UNLIMITED}\n          />\n        </Stack>\n      </FormGroupWithPopover>\n      <FormGroupWithPopover\n        fieldId='retention-size'\n        fieldLabel='Retention size'\n        labelHead={t('topic.retention_size')}\n        labelBody={t('topic.retention_size_description')}\n        buttonAriaLabel='More info for retention size field'\n      >\n        <Stack hasGutter>\n          <Radio\n            isChecked={\n              topicData.selectedRetentionSizeOption ===\n              RetentionSizeUnits.CUSTOM\n            }\n            name='custom-retention-size'\n            onChange={() =>\n              handleRetentionMessageSize(RetentionSizeUnits.CUSTOM)\n            }\n            label={retentionSizeInput}\n            className='kafka-ui--radio-label__number-input'\n            aria-label='custom size'\n            id='custom-retention-size'\n            value={RetentionSizeUnits.CUSTOM}\n          />\n          <Radio\n            isChecked={\n              topicData.selectedRetentionSizeOption ===\n              RetentionSizeUnits.UNLIMITED\n            }\n            name='unlimited-retention-size'\n            onChange={() =>\n              handleRetentionMessageSize(RetentionSizeUnits.UNLIMITED)\n            }\n            label='Unlimited'\n            aria-label='Unlimited'\n            id='unlimited-retention-size'\n            value={RetentionSizeUnits.UNLIMITED}\n          />\n        </Stack>\n      </FormGroupWithPopover>\n    </FormSection>\n  );\n};\n\nexport { CoreConfiguration };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  FormSection,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { TextWithLabelPopover } from '@app/components';\nimport {\n  DEFAULT_MAXIMUM_MESSAGE_BYTES,\n  DEFAULT_MESSAGE_TIMESTAMP_TYPE,\n  DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF,\n} from '@app/constant';\n\nconst Message: React.FC = () => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n\n  return (\n    <FormSection title={t('topic.messages')} id='messages' titleElement={'h2'}>\n      <TextContent>\n        <Text component={TextVariants.p} className='section-info'>\n          {t('topic.message_section_info')}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId='max-message-size'\n        btnAriaLabel={t('topic.max_message_size')}\n        fieldLabel={t('topic.max_message_size')}\n        fieldValue={DEFAULT_MAXIMUM_MESSAGE_BYTES}\n        popoverBody={t('topic.max_message_size_description')}\n        popoverHeader={t('topic.max_message_size')}\n      />\n\n      <TextWithLabelPopover\n        fieldId='message-timestamp-type'\n        btnAriaLabel={t('topic.message_timestamp_type')}\n        fieldLabel={t('topic.message_timestamp_type')}\n        fieldValue={DEFAULT_MESSAGE_TIMESTAMP_TYPE}\n        popoverBody={t('topic.message_timestamp_type_description')}\n        popoverHeader={t('topic.message_timestamp_type')}\n      />\n\n      <TextWithLabelPopover\n        fieldId='max-message-timestamp-diff'\n        btnAriaLabel={t('topic.max_message_timestamp_diff')}\n        fieldLabel={t('topic.max_message_timestamp_diff')}\n        fieldValue={DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF}\n        popoverBody={t('topic.max_message_timestamp_diff_description')}\n        popoverHeader={t('topic.max_message_timestamp_diff')}\n      />\n\n      <TextWithLabelPopover\n        fieldId='compression-type'\n        btnAriaLabel={t('topic.compression_type')}\n        fieldLabel={t('topic.compression_type')}\n        fieldValue={'Producer'}\n        popoverBody={t('topic.compression_type_description')}\n        popoverHeader={t('topic.compression_type')}\n      />\n\n      <TextWithLabelPopover\n        fieldId='message-format'\n        btnAriaLabel={t('topic.message_format')}\n        fieldLabel={t('topic.message_format')}\n        fieldValue={'2.7-IV2'}\n        popoverBody={t('topic.message_format_description')}\n        popoverHeader={t('topic.message_format')}\n      />\n    </FormSection>\n  );\n};\n\nexport { Message };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  FormSection,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport {\n  FormGroupWithPopover,\n  DropdownWithToggle,\n  TextWithLabelPopover,\n  IDropdownOption,\n} from '@app/components';\nimport {\n  DEFAULT_MINIMUM_COMPACTION_LAG_TIME,\n  DEFAULT_DELETE_RETENTION_TIME,\n  DEFAULT_MIN_CLEANBLE_RATIO,\n} from '@app/constant';\nimport { IAdvancedTopic, kebabToDotSeparated } from '@app/modules/Topics/utils';\n\nexport type LogProps = {\n  topicData: IAdvancedTopic;\n  setTopicData: (data: IAdvancedTopic) => void;\n};\n\nconst Log: React.FC<LogProps> = ({ topicData, setTopicData }) => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n\n  const cleanupPolicyOptions: IDropdownOption[] = [\n    {\n      key: 'compact',\n      value: 'compact',\n      label: t('common.compact'),\n      isDisabled: false,\n    },\n    {\n      key: 'delete',\n      value: 'delete',\n      label: t('common.delete'),\n      isDisabled: false,\n    },\n    {\n      key: 'compact-delete',\n      value: 'compact,delete',\n      label: `${t('common.compact')},${t('common.delete')}`,\n      isDisabled: false,\n    },\n  ];\n\n  const onSelectOption = (value: string, name: string) => {\n    setTopicData({ ...topicData, [kebabToDotSeparated(name)]: value });\n  };\n\n  return (\n    <FormSection title={t('topic.log')} id='log' titleElement={'h2'}>\n      <TextContent>\n        <Text component={TextVariants.p}>{t('topic.log_section_info')}</Text>\n        <Text component={TextVariants.small}>\n          {t('topic.log_section_info_note')}\n        </Text>\n      </TextContent>\n\n      <FormGroupWithPopover\n        fieldId='cleanup-policy'\n        fieldLabel={t('topic.cleanup_policy')}\n        labelHead={t('topic.cleanup_policy')}\n        labelBody={t('topic.cleanup_policy_description')}\n        buttonAriaLabel={t('topic.cleanup_policy')}\n      >\n        <DropdownWithToggle\n          id='log-section-policy-type-dropdown'\n          toggleId='log-section-policy-type-dropdowntoggle'\n          ariaLabel={t('common.select_policy')}\n          onSelectOption={onSelectOption}\n          items={cleanupPolicyOptions}\n          name='cleanup-policy'\n          value={topicData['cleanup.policy'] || ''}\n          isLabelAndValueNotSame={true}\n        />\n      </FormGroupWithPopover>\n\n      <TextWithLabelPopover\n        fieldId='delete-retention-time'\n        btnAriaLabel={t('topic.delete_retention_time')}\n        fieldLabel={t('topic.delete_retention_time')}\n        fieldValue={DEFAULT_DELETE_RETENTION_TIME}\n        popoverBody={t('topic.delete_retention_time_description')}\n        popoverHeader={t('topic.delete_retention_time')}\n      />\n\n      <TextWithLabelPopover\n        fieldId='min-cleanable-ratio'\n        btnAriaLabel={t('topic.min_cleanable_ratio')}\n        fieldLabel={t('topic.min_cleanable_ratio')}\n        fieldValue={DEFAULT_MIN_CLEANBLE_RATIO}\n        popoverBody={t('topic.min_cleanable_ratio_description')}\n        popoverHeader={t('topic.min_cleanable_ratio')}\n      />\n\n      <TextWithLabelPopover\n        fieldId='min-compaction-lag-time-description'\n        btnAriaLabel={t('topic.min_compaction_lag_time')}\n        fieldLabel={t('topic.min_compaction_lag_time')}\n        fieldValue={DEFAULT_MINIMUM_COMPACTION_LAG_TIME}\n        popoverBody={t('topic.min_compaction_lag_time_description')}\n        popoverHeader={t('topic.min_compaction_lag_time')}\n      />\n    </FormSection>\n  );\n};\n\nexport { Log };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  FormSection,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { TextWithLabelPopover } from '@app/components';\n\nconst Replication: React.FC = () => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n\n  return (\n    <FormSection\n      title={t('topic.replication')}\n      id='replication'\n      titleElement={'h2'}\n    >\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {t('topic.replication_section_info')}\n          <Text component={TextVariants.small}>\n            {t('topic.replication_section_info_note')}\n          </Text>\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId='unclean-leader-election'\n        btnAriaLabel={t('topic.unclean_leader_election')}\n        fieldLabel={t('topic.unclean_leader_election')}\n        fieldValue={t('common.disabled')}\n        popoverBody={t('topic.unclean_leader_election_description')}\n        popoverHeader={t('topic.unclean_leader_election')}\n      />\n    </FormSection>\n  );\n};\n\nexport { Replication };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  FormSection,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { TextWithLabelPopover } from '@app/components';\nimport {\n  DEFAULT_LOG_SEGMENT_SIZE,\n  DEFAULT_SEGMENT_TIME,\n  DEFAULT_SEGMENT_JITTER_TIME,\n  DEFAULT_FILE_DELETE_DELAY,\n} from '@app/constant';\n\nconst Cleanup: React.FC = () => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n\n  return (\n    <FormSection title={t('common.cleanup')} id='cleanup' titleElement={'h2'}>\n      <TextContent>\n        <Text component={TextVariants.p} className='section-info'>\n          {t('topic.cleanup_section_info')}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId='log-segment-size'\n        btnAriaLabel={t('topic.log_segment_size')}\n        fieldLabel={t('topic.log_segment_size')}\n        fieldValue={DEFAULT_LOG_SEGMENT_SIZE}\n        popoverBody={t('topic.log_segment_size')}\n        popoverHeader={t('topic.log_segment_size_description')}\n      />\n\n      <TextWithLabelPopover\n        fieldId='segement-time'\n        btnAriaLabel={t('topic.segement_time')}\n        fieldLabel={t('topic.segement_time')}\n        fieldValue={DEFAULT_SEGMENT_TIME}\n        popoverBody={t('topic.segement_time_description')}\n        popoverHeader={t('topic.segement_time')}\n      />\n\n      <TextWithLabelPopover\n        fieldId='segment-jitter-time'\n        btnAriaLabel={t('topic.segment_jitter_time')}\n        fieldLabel={t('topic.segment_jitter_time')}\n        fieldValue={DEFAULT_SEGMENT_JITTER_TIME}\n        popoverBody={t('topic.segment_jitter_time_description')}\n        popoverHeader={t('topic.segment_jitter_time')}\n      />\n\n      <TextWithLabelPopover\n        fieldId='file-delete-delay'\n        btnAriaLabel={t('topic.file_delete_delay')}\n        fieldLabel={t('topic.file_delete_delay')}\n        fieldValue={DEFAULT_FILE_DELETE_DELAY}\n        popoverBody={t('topic.file_delete_delay_description')}\n        popoverHeader={t('topic.file_delete_delay')}\n      />\n\n      <TextWithLabelPopover\n        fieldId='preallocate-log-segment-files'\n        btnAriaLabel={t('topic.preallocate_log_segment_files')}\n        fieldLabel={t('topic.preallocate_log_segment_files')}\n        fieldValue={t('common.disabled')}\n        popoverBody={t('topic.preallocate_log_segment_files_description')}\n        popoverHeader={t('topic.preallocate_log_segment_files')}\n      />\n    </FormSection>\n  );\n};\n\nexport { Cleanup };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  FormSection,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { TextWithLabelPopover } from '@app/components';\nimport {\n  DEFAULT_INDEX_INTERVAL_SIZE,\n  DEFAULT_SEGMENT_INDEX_SIZE,\n} from '@app/constant';\n\nconst TopicAdvanceIndex: React.FC = () => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n\n  return (\n    <FormSection title={t('topic.index')} id='index' titleElement={'h2'}>\n      <TextContent>\n        <Text component={TextVariants.p} className='section-info'>\n          {t('topic.index_section_info')}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId='index-interval-size'\n        btnAriaLabel={t('topic.index_interval_size')}\n        fieldLabel={t('topic.index_interval_size')}\n        fieldValue={DEFAULT_INDEX_INTERVAL_SIZE}\n        popoverBody={t('topic.index_interval_size_description')}\n        popoverHeader={t('topic.index_interval_size')}\n      />\n\n      <TextWithLabelPopover\n        fieldId='segment-index-size'\n        btnAriaLabel={t('topic.segment_index_size')}\n        fieldLabel={t('topic.segment_index_size')}\n        fieldValue={DEFAULT_SEGMENT_INDEX_SIZE}\n        popoverBody={t('topic.segment_index_size_description')}\n        popoverHeader={t('topic.segment_index_size')}\n      />\n    </FormSection>\n  );\n};\n\nexport { TopicAdvanceIndex };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  FormSection,\n  TextVariants,\n  TextContent,\n  Text,\n} from '@patternfly/react-core';\nimport { TextWithLabelPopover } from '@app/components';\nimport {\n  DEFAULT_FLUSH_INTERVAL_MESSAGES,\n  DEFAULT_FLUSH_INTERVAL_TIME,\n} from '@app/constant';\n\nconst Flush: React.FC = () => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n\n  return (\n    <FormSection title={t('topic.flush')} id='flush' titleElement={'h2'}>\n      <TextContent>\n        <Text component={TextVariants.p} className='section-info'>\n          {t('topic.flush_section_info')}\n        </Text>\n      </TextContent>\n\n      <TextWithLabelPopover\n        fieldId='flush-interval-messages'\n        btnAriaLabel={t('topic.flush_interval_messages')}\n        fieldLabel={t('topic.flush_interval_messages')}\n        fieldValue={DEFAULT_FLUSH_INTERVAL_MESSAGES}\n        popoverBody={t('topic.flush_interval_messages_description')}\n        popoverHeader={t('topic.flush_interval_messages')}\n      />\n\n      <TextWithLabelPopover\n        fieldId='flush-interval-time'\n        btnAriaLabel={t('topic.flush_interval_time')}\n        fieldLabel={t('topic.flush_interval_time')}\n        fieldValue={DEFAULT_FLUSH_INTERVAL_TIME}\n        popoverBody={t('topic.flush_interval_time_description')}\n        popoverHeader={t('topic.flush_interval_time')}\n      />\n    </FormSection>\n  );\n};\n\nexport { Flush };\n","import React, { useState, useContext, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ActionGroup,\n  Button,\n  Sidebar,\n  SidebarContent,\n  Form,\n  PageSection,\n  PageGroup,\n  ValidatedOptions,\n} from '@patternfly/react-core';\nimport { IAdvancedTopic } from '@app/modules/Topics/utils';\nimport { getTopic } from '@app/services';\nimport { ConfigContext } from '@app/contexts';\nimport '../CreateTopicWizard/CreateTopicWizard.css';\nimport { isAxiosError } from '@app/utils/axios';\nimport { ModalType, useModal } from '@rhoas/app-services-ui-shared';\nimport { TopicAdvanceJumpLinks } from './TopicAdvanceJumpLinks';\nimport { CoreConfiguration } from './CoreConfiguration';\nimport { Message } from './Message';\nimport { Log } from './Log';\nimport { Replication } from './Replication';\nimport { Cleanup } from './Cleanup';\nimport { TopicAdvanceIndex } from './TopicAdvanceIndex';\nimport { Flush } from './Flush';\n\nexport type TopicAdvanceConfigProps = {\n  isCreate: boolean;\n  saveTopic: () => void;\n  handleCancel?: () => void;\n  topicData: IAdvancedTopic;\n  setTopicData: (val: IAdvancedTopic) => void;\n  isLoadingSave?: boolean;\n};\n\nexport const TopicAdvanceConfig: React.FunctionComponent<\n  TopicAdvanceConfigProps\n> = ({\n  isCreate,\n  saveTopic,\n  handleCancel,\n  topicData,\n  setTopicData,\n  isLoadingSave,\n}) => {\n  const config = useContext(ConfigContext);\n  const { showModal } = useModal<ModalType.KafkaUpdatePartitions>();\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n  const actionText = isCreate ? t('topic.create_topic') : t('common.save');\n\n  //states\n  const [topicValidated, setTopicValidated] = useState<ValidatedOptions>(\n    ValidatedOptions.default\n  );\n  const [invalidText, setInvalidText] = useState('');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [warning, setWarning] = useState<boolean>(false);\n  const [initialPartition, setInitialPartition] = useState<number | undefined>(\n    Number(topicData.numPartitions)\n  );\n  useState<string>(topicData['retention.ms.unit'] || 'days');\n\n  const fetchTopic = useCallback(\n    async (topicName: string) => {\n      try {\n        const topicRes = await getTopic(topicName, config);\n        if (topicRes) {\n          if (isCreate) {\n            setInvalidText(t('topic.already_exists', { name: topicName }));\n            setTopicValidated(ValidatedOptions.error);\n            setIsLoading(false);\n          } else {\n            setInitialPartition(topicRes?.partitions?.length);\n          }\n        }\n      } catch (err) {\n        let code: number | undefined;\n        if (err && isAxiosError(err)) {\n          code = err.response?.data.code;\n        }\n        if (isCreate && code === 404) {\n          setTopicValidated(ValidatedOptions.default);\n          setIsLoading(false);\n          saveTopic();\n        }\n      }\n    },\n    [t, isCreate, saveTopic, config]\n  );\n\n  const onConfirm = () => {\n    if (!isCreate) {\n      if (warning) {\n        showModal(ModalType.KafkaUpdatePartitions, {\n          onSaveTopic: saveTopic,\n        });\n      } else {\n        saveTopic();\n      }\n    } else {\n      if (topicData.name.length < 1) {\n        setInvalidText(t('topic.required'));\n        setTopicValidated(ValidatedOptions.error);\n      } else {\n        setIsLoading(true);\n        fetchTopic(topicData.name);\n      }\n    }\n  };\n\n  return (\n    <PageSection padding={{ default: 'noPadding' }}>\n      <Sidebar hasGutter>\n        <TopicAdvanceJumpLinks />\n        <SidebarContent>\n          <PageGroup hasOverflowScroll id='topic-detail-view'>\n            <PageSection padding={{ default: 'noPadding' }}>\n              <Form>\n                <CoreConfiguration\n                  isCreate={isCreate}\n                  topicData={topicData}\n                  setTopicData={setTopicData}\n                  fetchTopic={fetchTopic}\n                  initialPartition={initialPartition}\n                  invalidText={invalidText}\n                  setInvalidText={setInvalidText}\n                  setTopicValidated={setTopicValidated}\n                  topicValidated={topicValidated}\n                  setWarning={setWarning}\n                  warning={warning}\n                />\n                <Message />\n                <Log topicData={topicData} setTopicData={setTopicData} />\n                <Replication />\n                <Cleanup />\n                <TopicAdvanceIndex />\n                <Flush />\n              </Form>\n              <ActionGroup className='kafka-ui--sticky-footer'>\n                <Button\n                  isLoading={isLoading || isLoadingSave}\n                  onClick={onConfirm}\n                  variant='primary'\n                  data-testid={\n                    isCreate\n                      ? 'topicAdvanceCreate-actionCreate'\n                      : 'tabProperties-actionSave'\n                  }\n                  isDisabled={topicValidated !== 'default'}\n                >\n                  {actionText}\n                </Button>\n                <Button\n                  onClick={handleCancel}\n                  variant='link'\n                  data-testid={\n                    isCreate\n                      ? 'topicAdvanceCreate-actionCancel'\n                      : 'tabProperties-actionCancel'\n                  }\n                >\n                  {t('common.cancel')}\n                </Button>\n              </ActionGroup>\n            </PageSection>\n          </PageGroup>\n        </SidebarContent>\n      </Sidebar>\n    </PageSection>\n  );\n};\n","type SelectOptions = {\n  key: string;\n  value: string;\n  isPlaceholder?: boolean;\n  isDisabled?: boolean;\n};\n\nconst retentionTimeSelectOptions: SelectOptions[] = [\n  { key: 'days', value: 'days', isPlaceholder: true },\n  { key: 'hours', value: 'hours' },\n  { key: 'minutes', value: 'minutes' },\n  { key: 'seconds', value: 'seconds' },\n  { key: 'milliseconds', value: 'milliseconds' },\n];\n\nconst retentionSizeSelectOptions: SelectOptions[] = [\n  { key: 'bytes', value: 'bytes', isPlaceholder: true },\n  { key: 'kibibytes', value: 'kibibytes' },\n  { key: 'mebibytes', value: 'mebibytes' },\n  { key: 'gibibytes', value: 'gibibytes' },\n  { key: 'tebibytes', value: 'tebibytes' },\n];\n\nexport {\n  SelectOptions,\n  retentionTimeSelectOptions,\n  retentionSizeSelectOptions,\n};\n","import { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport const useValidateTopic = (): {\n  validateName(name: string): string | undefined;\n} => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n\n  return {\n    validateName: useCallback(\n      (name) => {\n        const legalNameChars = new RegExp('^[a-zA-Z0-9._-]+$');\n        if (name.length && !legalNameChars.test(name)) {\n          return t('topic.topic_name_helper_text');\n        } else if (name.length > 249) {\n          return t('topic.cannot_exceed_characters');\n        } else if (name === '.' || name === '..') {\n          return t('topic.invalid_name_with_dot');\n        }\n        return undefined;\n      },\n      [t]\n    ),\n  };\n};\n","import { ConfigEntry, NewTopicInput, Topic } from '@rhoas/kafka-instance-sdk';\nimport { IAdvancedTopic } from '@app/modules/Topics/utils';\n\nconst capitalizeText = (text: string) => {\n  return text.charAt(0).toUpperCase() + text.slice(1);\n};\n\nexport const kebabToCamel = function (kebabCase: string): string {\n  const words: string[] = kebabCase.split('-');\n\n  const camelCased: string[] = words.map((word: string, index: number) => {\n    return index > 0 ? capitalizeText(word) : word;\n  });\n\n  return camelCased.join('');\n};\n\nexport const kebabToDotSeparated = (val: string): string => {\n  if (typeof val === 'string') {\n    return val.replace(/-/g, '.');\n  }\n  return val;\n};\n\nexport enum RetentionTimeUnits {\n  MILLISECOND = 'milliseconds',\n  SECOND = 'seconds',\n  MINUTE = 'minutes',\n  HOUR = 'hours',\n  DAY = 'days',\n  WEEK = 'weeks',\n  CUSTOM = 'custom',\n  UNLIMITED = 'unlimited',\n}\n\nexport enum RetentionSizeUnits {\n  BYTE = 'bytes',\n  KIBIBYTE = 'kibibytes',\n  MEBIBYTE = 'mebibytes',\n  GIBIBYTE = 'gibibytes',\n  TEBIBYTE = 'tebibytes',\n  CUSTOM = 'custom',\n  UNLIMITED = 'unlimited',\n}\n\nexport const unitsToBytes = {\n  [RetentionSizeUnits.BYTE]: 1,\n  [RetentionSizeUnits.KIBIBYTE]: 1024,\n  [RetentionSizeUnits.MEBIBYTE]: 1048576,\n  [RetentionSizeUnits.GIBIBYTE]: 1073741824,\n  [RetentionSizeUnits.TEBIBYTE]: 1.0995116e12,\n};\n\nexport const unitsToMilliSecond = {\n  [RetentionTimeUnits.MILLISECOND]: 1,\n  [RetentionTimeUnits.SECOND]: 1000,\n  [RetentionTimeUnits.MINUTE]: 60000,\n  [RetentionTimeUnits.HOUR]: 3600000,\n  [RetentionTimeUnits.DAY]: 86400000,\n};\n\nexport const RetentionTimeUnitToValue = {\n  ...unitsToMilliSecond,\n  [RetentionTimeUnits.DAY]: 1,\n  [RetentionTimeUnits.WEEK]: 7,\n};\n\ntype ConversionUnit = {\n  value: number;\n  unit: string;\n};\n\nexport const millisecondsToTime = (value: number): ConversionUnit => {\n  if (value) {\n    if (value % unitsToMilliSecond.days == 0)\n      return { value: value / unitsToMilliSecond.days, unit: 'days' };\n    if (value % unitsToMilliSecond.hours == 0)\n      return { value: value / unitsToMilliSecond.hours, unit: 'hours' };\n    if (value % unitsToMilliSecond.minutes == 0)\n      return { value: value / unitsToMilliSecond.minutes, unit: 'minutes' };\n    if (value % unitsToMilliSecond.seconds == 0)\n      return { value: value / unitsToMilliSecond.seconds, unit: 'seconds' };\n  }\n\n  return { value, unit: 'milliseconds' };\n};\n\nexport const formattedRetentionTime = (time: number): string => {\n  const { unit, value } = millisecondsToTime(time);\n  return Number(value) === -1 ? 'Unlimited' : `${time} ms (${value} ${unit})`;\n};\n\nexport const formattedRetentionSize = (size: number): string => {\n  const { unit, value } = bytesToMemorySize(size);\n  return Number(value) === -1\n    ? 'Unlimited'\n    : `${size} bytes (${value} ${unit})`;\n};\n\nexport const bytesToMemorySize = (value: number): ConversionUnit => {\n  if (value) {\n    if (value % unitsToBytes.tebibytes == 0)\n      return { value: value / unitsToBytes.tebibytes, unit: 'tebibytes' };\n    if (value % unitsToBytes.gibibytes == 0)\n      return { value: value / unitsToBytes.gibibytes, unit: 'gibibytes' };\n    if (value % unitsToBytes.mebibytes == 0)\n      return { value: value / unitsToBytes.mebibytes, unit: 'mebibytes' };\n    if (value % unitsToBytes.kibibytes == 0)\n      return { value: value / unitsToBytes.kibibytes, unit: 'kibibytes' };\n  }\n\n  return { value, unit: 'bytes' };\n};\n\nexport type KeyValue = {\n  key: string;\n  value: number;\n};\n\nexport const deserializeTopic = (topic: Topic): IAdvancedTopic => {\n  const newTopic = { ...topic };\n  const configEntries: Partial<IAdvancedTopic> = {};\n\n  newTopic?.config?.forEach((e: ConfigEntry) => {\n    const { key = '', value } = e;\n\n    if (key === 'retention.ms' && Number(value) >= 0) {\n      const { value: newValue, unit } = millisecondsToTime(Number(value));\n      configEntries[key] = `${newValue}`;\n      configEntries[`${key}.unit`] = unit;\n      configEntries['selectedRetentionTimeOption'] = RetentionTimeUnits.CUSTOM;\n    } else if (key === 'retention.ms' && Number(value) === -1) {\n      configEntries['selectedRetentionTimeOption'] =\n        RetentionTimeUnits.UNLIMITED;\n    }\n\n    if (key === 'retention.bytes' && Number(value) >= 0) {\n      const { value: newValue, unit } = bytesToMemorySize(Number(value));\n      configEntries[key] = `${newValue}`;\n      configEntries[`${key}.unit`] = unit;\n      configEntries['selectedRetentionSizeOption'] = RetentionSizeUnits.CUSTOM;\n    } else if (key === 'retention.bytes' && Number(value) === -1) {\n      configEntries['selectedRetentionSizeOption'] =\n        RetentionSizeUnits.UNLIMITED;\n    }\n\n    if (key === 'cleanup.policy') {\n      configEntries[key] = value || 'delete';\n    }\n  });\n\n  return configEntries as IAdvancedTopic;\n};\n\nexport const serializeTopic = (\n  topicData: IAdvancedTopic,\n  addionalProperties: string[] = []\n): NewTopicInput => {\n  const configProperties = [\n    'retention.ms',\n    'retention.bytes',\n    'flush.messages',\n    ...addionalProperties,\n  ];\n  const tempProperties = [\n    'retention.ms.unit',\n    'retention.bytes.unit',\n    'selectedRetentionTimeOption',\n    'selectedRetentionSizeOption',\n  ];\n  const topic: IAdvancedTopic = { ...topicData };\n  const config: ConfigEntry[] = [];\n\n  for (const _key in topic) {\n    const key = _key as keyof IAdvancedTopic;\n    let value;\n    //check key exist in include config properties and add properties in config object\n    if (configProperties.includes(key)) {\n      //check unlimited retention time and size and set -1 value\n      if (\n        (topic.selectedRetentionTimeOption === RetentionTimeUnits.UNLIMITED &&\n          key === 'retention.ms') ||\n        (topic.selectedRetentionSizeOption === RetentionSizeUnits.UNLIMITED &&\n          key === 'retention.bytes')\n      ) {\n        value = '-1';\n      } else if (key === 'retention.ms' || key === 'retention.bytes') {\n        const topicUnitMs = (topic[`${key}.unit`] ||\n          'milliseconds') as keyof typeof unitsToMilliSecond;\n        const topicUnitByte = (topic[`${key}.unit`] ||\n          'bytes') as keyof typeof unitsToBytes;\n        //calculate value based on entered value * selected unit\n        const unit =\n          key === 'retention.ms'\n            ? unitsToMilliSecond[topicUnitMs]\n            : unitsToBytes[topicUnitByte];\n        value = Number(topic[key]) * unit;\n      } else {\n        value = topic[key];\n      }\n    }\n\n    //delete properties which are not required\n    if (key.split('.').pop() === 'unit' || tempProperties.includes(key)) {\n      delete topic[key];\n    }\n\n    //prepare config object with key/value\n    if (value && key) {\n      config.push({\n        key,\n        value: value.toString(),\n      });\n    }\n  }\n\n  return {\n    name: topic.name,\n    settings: {\n      numPartitions: Number(topic.numPartitions),\n      config,\n    },\n  };\n};\n","import { AxiosResponse } from 'axios';\nimport {\n  ConfigEntry,\n  TopicsApi,\n  Topic,\n  TopicSettings,\n  TopicsList,\n} from '@rhoas/kafka-instance-sdk';\nimport { Configuration } from '@rhoas/kafka-instance-sdk';\nimport { IConfiguration } from '@app/contexts';\nimport { IAdvancedTopic } from '@app/modules/Topics/utils';\nimport { SortByDirection } from '@patternfly/react-table';\n\nexport enum OrderKey {\n  name = 'name',\n  partitions = 'partitions',\n  retentionMs = 'retention.ms',\n  retentionSize = 'retention.bytes',\n}\n\nexport const getTopics = async (\n  config: IConfiguration | undefined,\n  page?: number,\n  size?: number,\n  filter?: string,\n  order: SortByDirection = SortByDirection.asc,\n  orderKey?: OrderKey\n): Promise<TopicsList> => {\n  const accessToken = await config?.getToken();\n\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<TopicsList> = await api.getTopics(\n    undefined,\n    undefined,\n    size,\n    filter,\n    page,\n    order,\n    orderKey\n  );\n  return response.data;\n};\n\nexport const getTopicDetail = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<IAdvancedTopic> => {\n  const accessToken = await config?.getToken();\n\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const { data } = await api.getTopic(topicName);\n\n  return convertTopicResponse(data);\n};\n\nconst convertTopicResponse = (topic: Topic): IAdvancedTopic => {\n  const topicObj: IAdvancedTopic = { name: '', numPartitions: '0' };\n  if (topic && topic.name) topicObj.name = topic.name;\n\n  topic.config?.forEach((config) => {\n    if (config.key && config.value) {\n      const key = config.key as keyof IAdvancedTopic;\n      topicObj[key] = config.value;\n    }\n  });\n\n  topicObj.numPartitions = topic?.partitions?.length.toString() || '0';\n\n  topicObj.replicationFactor =\n    (topic?.partitions && topic?.partitions[0].replicas?.length.toString()) ||\n    '0';\n\n  return topicObj;\n};\n\nexport const updateTopicModel = async (\n  topicName: string,\n  topicSettings: TopicSettings,\n  config: IConfiguration | undefined\n): Promise<number> => {\n  const accessToken = await config?.getToken();\n\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<Topic> = await api.updateTopic(\n    topicName,\n    topicSettings\n  );\n  return response.status;\n};\n\nexport const getTopic = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<Topic> => {\n  const accessToken = await config?.getToken();\n\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response = await api.getTopic(topicName);\n\n  const replicationFactor = (response.data.partitions || [])\n    .map((p) => p.replicas?.length || 0)\n    .reduce(\n      (previousValue = 0, currentValue = 0) => previousValue + currentValue\n    )\n    .toString();\n\n  const answer = response.data;\n  answer.config = answer.config || ([] as ConfigEntry[]);\n  answer.config.push({\n    key: 'replicationFactor',\n    value: replicationFactor,\n  });\n  return response.data;\n};\n\nexport const deleteTopic = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<void> => {\n  const accessToken = await config?.getToken();\n\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  await api.deleteTopic(topicName);\n  return;\n};\n","import { AxiosError } from 'axios';\n\nexport type ErrorData = {\n  code: number;\n  error_message: string;\n};\n\nexport const isAxiosError = (\n  error: unknown\n): error is AxiosError<ErrorData> => {\n  return (error as AxiosError<ErrorData>) !== undefined;\n};\n"],"names":["exports","__esModule","CaretDownIconConfig","name","height","width","svgPath","yOffset","xOffset","CaretDownIcon","DropdownWithToggle","id","toggleId","items","value","ariaLabel","onSelectOption","menuAppendTo","isLabelAndValueNotSame","isOpen","setIsOpen","useState","dropdownToggle","DropdownToggle","onToggle","toggleIndicator","filteredOption","filter","item","label","getSelectedValue","Dropdown","onSelect","e","currentTarget","textContent","toLowerCase","toggle","dropdownItems","options","map","option","key","DropdownItem","getItems","FormGroupWithPopover","children","labelHead","fieldId","fieldLabel","labelBody","buttonAriaLabel","validated","helperText","helperTextInvalid","isRequired","FormGroup","labelIcon","Popover","headerContent","bodyContent","onClick","event","preventDefault","className","noVerticalAlign","TextWithLabelPopover","btnAriaLabel","fieldValue","popoverBody","popoverHeader","showUnlimited","displayText","undefined","parseInt","TextInput","isReadOnly","type","DEFAULT_MIN_CLEANBLE_RATIO","DEFAULT_MIN_INSYNC_REPLICAS","DEFAULT_SEGMENT_TIME","DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF","DEFAULT_SEGMENT_INDEX_SIZE","DEFAULT_INDEX_INTERVAL_SIZE","DEFAULT_LOG_SEGMENT_SIZE","DEFAULT_DELETE_RETENTION_TIME","DEFAULT_SEGMENT_JITTER_TIME","DEFAULT_FILE_DELETE_DELAY","DEFAULT_MAXIMUM_MESSAGE_BYTES","DEFAULT_MESSAGE_TIMESTAMP_TYPE","DEFAULT_MINIMUM_COMPACTION_LAG_TIME","DEFAULT_FLUSH_INTERVAL_MESSAGES","DEFAULT_FLUSH_INTERVAL_TIME","MIN_PARTITIONS","MAX_PARTITIONS","CustomRetentionMessage","selectOptions","topicData","setTopicData","handleTouchSpin","operator","fieldName","selectedRetention","Number","Flex","FlexItem","NumberInput","onMinus","onPlus","onChange","truncValue","Math","trunc","toString","onChangeTouchSpin","plusBtnProps","minusBtnProps","min","Select","variant","SelectVariant","selection","propetyName","selectedRetentionTimeOption","onSelectRetentionUnit","selections","s","SelectOption","isPlaceholder","TopicAdvanceJumpLinks","t","useTranslation","SidebarPanel","JumpLinks","isVertical","scrollableSelector","style","position","JumpLinksItem","href","CoreConfiguration","isCreate","fetchTopic","initialPartition","invalidText","setInvalidText","setTopicValidated","topicValidated","setWarning","warning","validateName","replicationFactor","minInSyncReplicas","partitionsValidated","setPartitionsValidated","ValidatedOptions","isRetentionTimeSelectOpen","setIsRetentionTimeSelectOpen","isRetentionSizeSelectOpen","setIsRetentionSizeSelectOpen","validationCheck","useCallback","errorMessage","useEffect","handleRetentionMessageSize","selectedRetentionSizeOption","handleRetentionMessageTime","numPartitions","partitionsWarnigCheck","retentionTimeInput","retentionSizeInput","FormSection","title","titleElement","TextContent","Text","component","TextVariants","placeholder","inputName","partitionValue","max","Stack","hasGutter","Radio","isChecked","Message","Log","cleanupPolicyOptions","isDisabled","Replication","Cleanup","TopicAdvanceIndex","Flush","TopicAdvanceConfig","saveTopic","handleCancel","isLoadingSave","config","useContext","showModal","useModal","actionText","isLoading","setIsLoading","setInitialPartition","topicName","topicRes","partitions","length","err","code","response","data","PageSection","padding","default","Sidebar","SidebarContent","PageGroup","hasOverflowScroll","Form","ActionGroup","Button","ModalType","onSaveTopic","retentionTimeSelectOptions","retentionSizeSelectOptions","useValidateTopic","legalNameChars","RegExp","test","kebabToCamel","kebabCase","split","word","index","text","charAt","toUpperCase","slice","join","kebabToDotSeparated","val","replace","RetentionTimeUnits","RetentionSizeUnits","unitsToBytes","BYTE","KIBIBYTE","MEBIBYTE","GIBIBYTE","TEBIBYTE","unitsToMilliSecond","MILLISECOND","SECOND","MINUTE","HOUR","DAY","RetentionTimeUnitToValue","WEEK","millisecondsToTime","days","unit","hours","minutes","seconds","formattedRetentionTime","time","formattedRetentionSize","size","bytesToMemorySize","tebibytes","gibibytes","mebibytes","kibibytes","deserializeTopic","topic","newTopic","configEntries","forEach","newValue","CUSTOM","UNLIMITED","serializeTopic","addionalProperties","configProperties","tempProperties","_key","includes","topicUnitMs","topicUnitByte","pop","push","settings","OrderKey","getTopics","page","order","SortByDirection","orderKey","accessToken","getToken","api","TopicsApi","Configuration","basePath","getTopicDetail","getTopic","convertTopicResponse","topicObj","replicas","updateTopicModel","topicSettings","updateTopic","status","p","reduce","previousValue","currentValue","answer","deleteTopic","isAxiosError","error"],"sourceRoot":""}