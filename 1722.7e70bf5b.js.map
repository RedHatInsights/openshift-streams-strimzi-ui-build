{"version":3,"file":"1722.7e70bf5b.js","mappings":"iJAOaA,E,MAAgB,sBAC3BC,I,wFCLK,IAAMC,EAAY,CACvBC,GAAI,CACFC,Y,2mnBAEFC,GAAI,CACFD,Y,mfCAEE,EAAY,qBAElBA,EAEGC,IAAI,EAAAC,kBACJD,IAAI,KAGJE,KAAK,CACJC,UAAW,CACTC,MAAO,CAAC,UAAW,aACnBC,OAAQ,IAEVC,YAAa,KACbC,OAAO,EAEPC,cAAe,CACbC,aAAa,GAEfd,UAAS,IAGb","sources":["webpack://kafka-ui/./src/contexts/Api/Context.tsx","webpack://kafka-ui/./src/i18n/locale/index.ts","webpack://kafka-ui/./src/i18n/index.ts"],"sourcesContent":["import React from 'react';\n\nexport type IConfiguration = {\n  basePath: string;\n  getToken: () => Promise<string>;\n};\n\nexport const ConfigContext = React.createContext<IConfiguration | undefined>(\n  undefined\n);\n","import en from './en.json';\nimport de from './de.json';\n\nexport const resources = {\n  en: {\n    translation: en,\n  },\n  de: {\n    translation: de,\n  },\n};\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { resources } from './locale';\n// don't want to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\nconst kafkai18n = i18n.createInstance();\n\nkafkai18n\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  .use(LanguageDetector)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    detection: {\n      order: ['htmlTag', 'navigator'],\n      caches: [],\n    },\n    fallbackLng: 'en',\n    debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    resources,\n  });\n\nexport default kafkai18n;\n"],"names":["ConfigContext","undefined","resources","en","translation","de","kafkai18n","use","initReactI18next","init","detection","order","caches","fallbackLng","debug","interpolation","escapeValue"],"sourceRoot":""}