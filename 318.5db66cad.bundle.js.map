{"version":3,"sources":["webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/check-circle-icon.js","webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-circle-icon.js","webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/search-icon.js","webpack://kafka-ui/./src/Contexts/Topic/Context.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/EmptySearch.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicDetails/Components/ConsumerGroupsByTopic/ConsumerDataByTopics.ts","webpack://kafka-ui/./src/Modules/Topics/TopicDetails/Components/ConsumerGroupsByTopic/ConsumerGroupDetailByTopics.ts","webpack://kafka-ui/./src/Modules/Topics/TopicDetails/Components/ConsumerGroupsByTopic/ConsumerGroupsByTopicsDrawer.patternfly.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicDetails/Components/ConsumerGroupsByTopic/SearchConsumerGroupsByTopics.patternfly.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicDetails/Components/ConsumerGroupsByTopic/ConsumerGroupsListByTopic.patternfly.tsx","webpack://kafka-ui/./src/Modules/Topics/UpdateTopic/Components/UpdateTopicView.tsx","webpack://kafka-ui/./src/Modules/Topics/UpdateTopic/UpdateTopicPage.tsx"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","initialState","numPartitions","replicationFactor","preallocate","TopicContext","createContext","TopicContextProvider","children","useState","store","setStore","Provider","value","updateStore","toString","updateBulkStore","advanceConfig","EmptySearch","EmptyState","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","ConsumerGroupDataByTopics","id","members","partitions","state","mockConsumerGroupDetailByTopics","partition","currentOffset","logendOffset","offsetLag","ConsumerGroupsByTopicDrawer","isExpanded","consumerGroupDetail","rows","map","consumergroup","title","href","DrawerPanelContent","widths","default","DrawerHead","TextContent","Text","component","TextVariants","DrawerActions","DrawerCloseButton","onClick","DrawerPanelBody","Flex","FlexItem","Table","variant","TableVariant","cells","dataLabel","TableHeader","TableBody","SearchConsumerGroupsByTopics","setTableData","searchText","setSearchText","InputGroup","SearchInput","type","placeholder","onChange","onClear","Button","ButtonVariant","filter","row","toLowerCase","indexOf","ConsumerGroupByTopicList","page","setPage","perPage","setPerPage","offset","setOffset","setIsExpanded","setConsumerGroupDetail","tableData","onSetPage","_event","pageNumber","onPerPageSelect","panelContent","rowData","ConsumerGroupByTopic","Label","color","Card","Drawer","DrawerContent","Toolbar","ToolbarContent","ToolbarItem","Pagination","itemCount","length","widgetId","Divider","slice","UpdateTopicView","topicName","onCancelUpdateTopic","onDeleteTopic","onSaveTopic","onError","deleteModal","setDeleteModal","topicData","setTopicData","config","useContext","addAlert","useEffect","topicRes","configEntries","forEach","configItem","key","fetchTopic","TopicAdvanceConfig","isCreate","saveTopic","newConfig","push","topicSettings","AlertVariant","response","data","code","error","handleCancel","UpdateTopicPage","getTopicListPath","onClickTopicList","TopicDetailHead","PageSection","PageSectionVariants","padding","Tabs","activeKey","onSelect","isBox","className","Tab","eventKey","TabTitleText"],"mappings":"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","file":"318.5db66cad.bundle.js","sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.CheckCircleIconConfig = {\n  name: 'CheckCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.CheckCircleIcon = require('../createIcon').createIcon(exports.CheckCircleIconConfig);\nexports[\"default\"] = exports.CheckCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.ExclamationCircleIconConfig = {\n  name: 'ExclamationCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExclamationCircleIcon = require('../createIcon').createIcon(exports.ExclamationCircleIconConfig);\nexports[\"default\"] = exports.ExclamationCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.SearchIconConfig = {\n  name: 'SearchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.SearchIcon = require('../createIcon').createIcon(exports.SearchIconConfig);\nexports[\"default\"] = exports.SearchIcon;","import React, { createContext, useState } from 'react';\nimport {\n  AdvancedTopic,\n  ITopicProviderProps,\n  TopicContextProp,\n} from './Topic.types';\n\nexport const initialState: AdvancedTopic = {\n  name: '',\n  numPartitions: '',\n  replicationFactor: '',\n  'min.insync.replicas': '',\n  'retention.ms': '7',\n  'retention.ms.unit': 'days',\n  'max.message.bytes': '',\n  'max.message.bytes.unit': 'bytes',\n  'message.timestamp.type': 'CreateTime',\n  'message.timestamp.difference.max.ms': '',\n  'message.timestamp.difference.max.ms.unit': 'milliseconds',\n  'compression.type': '',\n  'log.message.format.version': '',\n  'cleanup.policy': '',\n  'retention.bytes': '-1',\n  'retention.bytes.unit': 'bytes',\n  'log.segment.bytes': '',\n  'log.segment.bytes.unit': 'bytes',\n  'unclean.leader.election.enable': '',\n  'follower.replication.throttled.replicas': '',\n  'leader.replication.throttled.replicas': '',\n  'delete.retention.ms': '',\n  'delete.retention.ms.unit': 'milliseconds',\n  'min.cleanable.dirty.ratio': '',\n  'min.compaction.lag.ms': '',\n  'min.compaction.lag.ms.unit': 'milliseconds',\n  'segment.ms': '',\n  'segment.ms.unit': 'milliseconds',\n  'segment.jitter.ms': '',\n  'segment.jitter.ms.unit': 'milliseconds',\n  'file.delete.delay.ms': '',\n  'file.delete.delay.ms.unit': 'milliseconds',\n  preallocate: '',\n  'index.interval.bytes': '',\n  'index.interval.bytes.unit': 'bytes',\n  'segment.index.bytes': '',\n  'segment.index.bytes.unit': 'bytes',\n  'flush.messages': '',\n  'flush.messages.unit': 'milliseconds',\n  'flush.ms': '',\n  'flush.ms.unit': 'milliseconds',\n};\n\nexport const TopicContext = createContext({} as TopicContextProp);\n\nexport const TopicContextProvider: React.FC<ITopicProviderProps> = ({\n  children,\n}) => {\n  const [store, setStore] = useState<AdvancedTopic>(initialState);\n\n  const updateStore = (name: string, value: string | boolean | number) => {\n    setStore({\n      ...store,\n      [name]: value.toString(),\n    });\n  };\n\n  const updateBulkStore = (advanceConfig: AdvancedTopic) => {\n    setStore({\n      ...store,\n      ...advanceConfig,\n    });\n  };\n\n  return (\n    <TopicContext.Provider value={{ store, updateStore, updateBulkStore }}>\n      {children}\n    </TopicContext.Provider>\n  );\n};\n","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Title,\n} from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\n\nexport const EmptySearch: React.FunctionComponent = () => {\n  return (\n    <EmptyState>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel='h5' size='lg'>\n        No results found\n      </Title>\n      <EmptyStateBody>\n        No result match the filter criteria. Remove filter or clear all filters\n        to show results\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","export const ConsumerGroupDataByTopics = [\n  {\n    id: 'Custom_0',\n    members: 2,\n    partitions: 2,\n    state: 'Stable',\n  },\n  {\n    id: 'Custom_1',\n    members: 1,\n    partitions: 1,\n    state: 'Empty',\n  },\n  {\n    id: 'Custom_2',\n    members: 0,\n    partitions: 0,\n    state: 'Stable',\n  },\n  {\n    id: 'Custom_3',\n    members: 2,\n    partitions: 2,\n    state: 'Stable',\n  },\n  {\n    id: 'Custom_4',\n    members: 1,\n    partitions: 0,\n    state: 'Stable',\n  },\n];\n","export const mockConsumerGroupDetailByTopics = [\n  {\n    partition: 0,\n    id: 'consumer-1 consumer-1-02207915-3ab4-43cb547-4567c6fe87e1',\n    currentOffset: 2,\n    logendOffset: 0,\n    offsetLag: 1,\n  },\n  {\n    partition: 1,\n    id: 'consumer-1 consumer-1-02207915-3ab4-43cb547-4567c6fe87e1',\n    currentOffset: 0,\n    logendOffset: 0,\n    offsetLag: 0,\n  },\n  {\n    partition: 2,\n    id: 'consumer-1 consumer-1-02207915-3ab4-43cb547-4567c6fe87e1',\n    currentOffset: 0,\n    logendOffset: 0,\n    offsetLag: 0,\n  },\n];\n","import React from 'react';\nimport {\n  DrawerPanelContent,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerActions,\n  DrawerCloseButton,\n  Flex,\n  FlexItem,\n  TextContent,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableVariant,\n} from '@patternfly/react-table';\nimport { mockConsumerGroupDetailByTopics } from './ConsumerGroupDetailByTopics';\nimport { IConsumerGroupByTopic } from './SearchConsumerGroupsByTopics.patternfly';\n\nexport interface ISearchTopicsConsumerListProps {\n  isExpanded: (value: boolean) => void;\n  consumerGroupDetail: IConsumerGroupByTopic | undefined;\n}\n\nexport const ConsumerGroupsByTopicDrawer: React.FunctionComponent<ISearchTopicsConsumerListProps> = ({\n  isExpanded,\n  consumerGroupDetail,\n}) => {\n  const columns = [\n    'Partition',\n    'Client ID + Customer ID',\n    'Current offset',\n    'Log end offset',\n    'Offset lag',\n    {\n      title: '',\n      dataLabel: 'Action',\n    },\n  ];\n\n  const rows = mockConsumerGroupDetailByTopics.map((consumergroup) => [\n    consumergroup.partition,\n    consumergroup.id,\n    consumergroup.currentOffset,\n    consumergroup.logendOffset,\n    consumergroup.offsetLag,\n    { title: <a href='#'>Reset offset</a> },\n  ]);\n\n  const onCloseClick = () => {\n    isExpanded(false);\n  };\n\n  return (\n    <DrawerPanelContent widths={{ default: 'width_50' }}>\n      <DrawerHead>\n        <span>\n          <TextContent>\n            <Text>Consumer group ID</Text>\n            <Text component={TextVariants.h1}>\n              {consumerGroupDetail && consumerGroupDetail.id}\n            </Text>\n          </TextContent>\n        </span>\n        <DrawerActions>\n          <DrawerCloseButton onClick={onCloseClick} />\n        </DrawerActions>\n      </DrawerHead>\n      <DrawerPanelBody>\n        <TextContent>\n          <Flex>\n            <FlexItem>\n              <Text component={TextVariants.h4} size={50}>\n                Active members\n              </Text>\n              <Text component={TextVariants.h2}>\n                {consumerGroupDetail && consumerGroupDetail.members}\n              </Text>\n            </FlexItem>\n            <FlexItem>\n              <Text component={TextVariants.h4}>Unconsumed partitions</Text>\n              <Text component={TextVariants.h2}>\n                {consumerGroupDetail && consumerGroupDetail.partitions}\n              </Text>\n            </FlexItem>\n            <FlexItem>\n              <Text component={TextVariants.h4}>State</Text>\n              <Text component={TextVariants.h2}>\n                {consumerGroupDetail && consumerGroupDetail.state}\n              </Text>\n            </FlexItem>\n          </Flex>\n        </TextContent>\n      </DrawerPanelBody>\n\n      <Table\n        aria-label='Compact Table'\n        variant={TableVariant.compact}\n        cells={columns}\n        rows={rows}\n      >\n        <TableHeader />\n        <TableBody />\n      </Table>\n    </DrawerPanelContent>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  InputGroup,\n  SearchInput,\n  Button,\n  ButtonVariant,\n} from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport { ConsumerGroupDataByTopics } from './ConsumerDataByTopics';\n\nexport interface IConsumerGroupByTopic {\n  id: string;\n  members: number;\n  partitions: number;\n  state: string;\n}\nexport interface ISearchConsumerGroupsByTopicsProps {\n  setTableData: (value: IConsumerGroupByTopic[]) => void;\n}\nexport const SearchConsumerGroupsByTopics: React.FunctionComponent<ISearchConsumerGroupsByTopicsProps> = ({\n  setTableData,\n}) => {\n  const [searchText, setSearchText] = useState('');\n\n  const onChangeInput = (value: string) => {\n    setSearchText(value);\n  };\n\n  const onConfirm = () => {\n    setTableData(\n      ConsumerGroupDataByTopics.filter(\n        (row) => row.id.toLowerCase().indexOf(searchText.toLowerCase()) > -1\n      )\n    );\n  };\n  const onClear = () => {\n    setSearchText('');\n    setTableData(ConsumerGroupDataByTopics);\n  };\n  return (\n    <InputGroup>\n      <SearchInput\n        name='searchName'\n        id='searchText-consumer-groups-by-topic-input'\n        type='searchText'\n        aria-label='searchText input'\n        placeholder='Search'\n        value={searchText}\n        onChange={onChangeInput}\n        onClear={onClear}\n      />\n      <Button\n        variant={ButtonVariant.control}\n        aria-label='searchText button for searchText input'\n        onClick={onConfirm}\n        id='searchText-consumer-groups-by-topic-button'\n      >\n        <SearchIcon />\n      </Button>\n    </InputGroup>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  Label,\n  Card,\n  Divider,\n  Pagination,\n  Toolbar,\n  Button,\n  ToolbarContent,\n  Drawer,\n  DrawerContent,\n  ToolbarItem,\n  Title,\n} from '@patternfly/react-core';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n} from '@patternfly/react-table';\nimport { ConsumerGroupDataByTopics } from './ConsumerDataByTopics';\nimport { ConsumerGroupsByTopicDrawer } from './ConsumerGroupsByTopicsDrawer.patternfly';\nimport {\n  SearchConsumerGroupsByTopics,\n  IConsumerGroupByTopic,\n} from './SearchConsumerGroupsByTopics.patternfly';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-circle-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport { EmptySearch } from '../../../TopicList/Components/EmptySearch';\n\nexport const ConsumerGroupByTopicList: React.FunctionComponent = () => {\n  const [page, setPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(10);\n  const [offset, setOffset] = useState(0);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [\n    consumerGroupDetail,\n    setConsumerGroupDetail,\n  ] = useState<IConsumerGroupByTopic>();\n  const [tableData, setTableData] = useState(ConsumerGroupDataByTopics);\n\n  const onSetPage = (_event, pageNumber: number) => {\n    setPage(pageNumber);\n    setOffset(page * perPage);\n  };\n\n  const onPerPageSelect = (_event, perPage: number) => {\n    setPerPage(perPage);\n  };\n\n  const onClickConsumerGroup = (\n    id: string,\n    members: number,\n    partitions: number,\n    state: string\n  ) => {\n    const consumerDetail = { id, members, partitions, state };\n    setConsumerGroupDetail(consumerDetail);\n    setIsExpanded(true);\n  };\n  const panelContent = (\n    <ConsumerGroupsByTopicDrawer\n      consumerGroupDetail={consumerGroupDetail}\n      isExpanded={setIsExpanded}\n    />\n  );\n\n  const tableColumns = [\n    { title: 'Consumer group ID' },\n    { title: 'Active members for this topic' },\n    { title: 'Unconsumed partitions for this topic' },\n    { title: 'State' },\n  ];\n  const rowData = tableData.map((ConsumerGroupByTopic) => [\n    {\n      title: (\n        <Button\n          variant='link'\n          onClick={() =>\n            onClickConsumerGroup(\n              ConsumerGroupByTopic.id,\n              ConsumerGroupByTopic.members,\n              ConsumerGroupByTopic.partitions,\n              ConsumerGroupByTopic.state\n            )\n          }\n        >\n          {ConsumerGroupByTopic.id}\n        </Button>\n      ),\n    },\n    ConsumerGroupByTopic?.members,\n    ConsumerGroupByTopic?.partitions,\n    {\n      title: (\n        <Label\n          color={ConsumerGroupByTopic.state === 'Stable' ? 'green' : 'red'}\n          icon={\n            ConsumerGroupByTopic.state === 'Stable' ? (\n              <CheckCircleIcon />\n            ) : (\n              <ExclamationCircleIcon />\n            )\n          }\n        >\n          {ConsumerGroupByTopic.state}\n        </Label>\n      ),\n    },\n  ]);\n\n  return (\n    <>\n      <Card>\n        <Title headingLevel='h4'> </Title>\n        <Drawer isExpanded={isExpanded}>\n          <DrawerContent panelContent={panelContent}>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem>\n                  <SearchConsumerGroupsByTopics setTableData={setTableData} />\n                </ToolbarItem>\n\n                <ToolbarItem variant='pagination'>\n                  <Pagination\n                    itemCount={rowData.length}\n                    perPage={perPage}\n                    page={page}\n                    onSetPage={onSetPage}\n                    widgetId='pagination-options-menu-top'\n                    onPerPageSelect={onPerPageSelect}\n                  />\n                </ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n            <Divider />\n\n            <Table\n              aria-label='Compact Table'\n              variant={TableVariant.compact}\n              cells={tableColumns}\n              rows={\n                page != 1\n                  ? rowData.slice(offset, offset + perPage)\n                  : rowData.slice(0, perPage)\n              }\n            >\n              <TableHeader />\n              <TableBody />\n            </Table>\n\n            {rowData.length > 0 ? (\n              <Pagination\n                itemCount={rowData.length}\n                perPage={perPage}\n                page={page}\n                onSetPage={onSetPage}\n                widgetId='pagination-options-menu-top'\n                onPerPageSelect={onPerPageSelect}\n                offset={0}\n              />\n            ) : (\n              <EmptySearch />\n            )}\n          </DrawerContent>\n        </Drawer>\n      </Card>\n    </>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { AlertVariant } from '@patternfly/react-core';\nimport '../../CreateTopic/Components/CreateTopicWizard.css';\nimport { TopicAdvanceConfig } from '../../CreateTopic/Components/TopicAdvanceConfig';\nimport { getTopic, updateTopicModel } from '../../../../Services/index';\nimport { ConfigEntry, TopicSettings } from '../../../../OpenApi/api';\nimport { DeleteTopics } from '../../TopicList/Components/DeleteTopicsModal';\nimport { AlertContext } from '../../../../Contexts/Alert';\nimport { ConfigContext } from '../../../../Contexts';\nimport { IAdvancedTopic } from '../../CreateTopic/Components/CreateTopicWizard';\nimport { convertUnits } from '../../CreateTopic/utils';\n\nexport type UpdateTopicViewProps = {\n  topicName: string;\n  onCancelUpdateTopic: () => void;\n  onDeleteTopic: () => void;\n  onSaveTopic: () => void;\n  onError?: (errorCode: number, message: string) => void;\n};\nexport const UpdateTopicView: React.FunctionComponent<UpdateTopicViewProps> = ({\n  topicName,\n  onCancelUpdateTopic,\n  onDeleteTopic,\n  onSaveTopic,\n  onError,\n}) => {\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  const [topicData, setTopicData] = useState<IAdvancedTopic>({\n    name: topicName,\n    numPartitions: '',\n    'retention.ms': '',\n    'retention.ms.unit': 'milliseconds',\n    'retention.bytes': '',\n    'retention.bytes.unit': 'bytes',\n    'cleanup.policy': '',\n  });\n  const config = useContext(ConfigContext);\n  const { addAlert } = useContext(AlertContext);\n  const fetchTopic = async (topicName) => {\n    const topicRes = await getTopic(topicName, config);\n\n    const configEntries: any = {};\n    topicRes.config?.forEach((configItem) => {\n      configEntries[configItem.key || ''] = configItem.value || '';\n    });\n\n    setTopicData({\n      ...topicData,\n      numPartitions: topicRes?.partitions?.length.toString() || '',\n      'cleanup.policy': configEntries['cleanup.policy'] || 'delete',\n      'retention.bytes': configEntries['retention.bytes'] || '-1',\n      'retention.ms': configEntries['retention.ms'] || '604800000',\n    });\n  };\n\n  useEffect(() => {\n    (async function () {\n      fetchTopic(topicName);\n    })();\n  }, []);\n\n  const saveTopic = async () => {\n    const { name, ...configEntries } = convertUnits(topicData);\n\n    const newConfig: ConfigEntry[] = [];\n\n    for (const key in configEntries) {\n      // TODO Remove check when API supports setting the number of partition\n      if (key && key !== 'numPartitions') {\n        newConfig.push({\n          key,\n          value: configEntries[key].toString().toLowerCase(),\n        });\n      }\n    }\n\n    const topicSettings: TopicSettings = {\n      // TODO Re-enable when the API supports setting the number of partition\n      // numPartitions: Number(topicData.numPartitions),\n      config: newConfig,\n    };\n\n    try {\n      const updateStatus = await updateTopicModel(name, topicSettings, config);\n\n      if (updateStatus === 200) {\n        addAlert(\n          'The topic was successfully updated in the Kafka instance',\n          AlertVariant.success\n        );\n        onSaveTopic();\n      }\n    } catch (err) {\n      if (onError) {\n        onError(err.response.data.code, err.response.data.error);\n      }\n      addAlert(err.response.data.error, AlertVariant.danger);\n    }\n  };\n\n  return (\n    <>\n      <TopicAdvanceConfig\n        isCreate={false}\n        saveTopic={saveTopic}\n        handleCancel={onCancelUpdateTopic}\n        topicData={topicData}\n        setTopicData={setTopicData}\n      />\n      <br />\n      <br />\n      {deleteModal && (\n        <DeleteTopics\n          deleteModal={deleteModal}\n          setDeleteModal={setDeleteModal}\n          topicName={topicName}\n          onDeleteTopic={onDeleteTopic}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  Tabs,\n  Tab,\n  TabTitleText,\n  PageSection,\n  PageSectionVariants,\n} from '@patternfly/react-core';\nimport { ConsumerGroupByTopicList } from '../TopicDetails/Components/ConsumerGroupsByTopic/ConsumerGroupsListByTopic.patternfly';\nimport { UpdateTopicView } from './Components/UpdateTopicView';\nimport { TopicDetailHead } from '../TopicDetails/Components/TopicDetailHead';\n\nexport interface UpdateTopicPageProps {\n  topicName: string;\n  getTopicListPath: () => string;\n  onClickTopicList: () => void;\n  onCancelUpdateTopic: () => void;\n  onDeleteTopic: () => void;\n  onSaveTopic: () => void;\n  onError?: (errorCode: number, message: string) => void;\n}\n\nexport const UpdateTopicPage: React.FunctionComponent<UpdateTopicPageProps> = ({\n  topicName,\n  getTopicListPath,\n  onClickTopicList,\n  onCancelUpdateTopic,\n  onDeleteTopic,\n  onSaveTopic,\n  onError,\n}) => {\n  return (\n    <>\n      <TopicDetailHead\n        topicName={topicName}\n        getTopicListPath={getTopicListPath}\n        onClickTopicList={onClickTopicList}\n      />\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: 'noPadding' }}\n      >\n        {/* <div> */}\n        <Tabs\n          activeKey={1}\n          onSelect={() => {\n            return;\n          }}\n          isBox={false}\n          className='tab-padding'\n        >\n          <Tab\n            eventKey={0}\n            title={<TabTitleText>Consumer Groups</TabTitleText>}\n          >\n            <ConsumerGroupByTopicList />\n          </Tab>\n          <Tab eventKey={1} title={<TabTitleText>Properties</TabTitleText>}>\n            <PageSection variant='light'>\n              <UpdateTopicView\n                topicName={topicName}\n                onCancelUpdateTopic={onCancelUpdateTopic}\n                onDeleteTopic={onDeleteTopic}\n                onSaveTopic={onSaveTopic}\n                onError={onError}\n              />\n            </PageSection>\n          </Tab>\n        </Tabs>\n      </PageSection>\n    </>\n  );\n};\n"],"sourceRoot":""}