{"version":3,"sources":["webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js","webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/search-icon.js","webpack://kafka-ui/./src/Contexts/Alert/Context.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/SearchTopics.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/EmptyTopics.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/EmptySearch.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/TopicsList.tsx","webpack://kafka-ui/./src/Panels/Topics/FederatedMainView.tsx"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","AlertContext","createContext","SearchTopics","search","setSearch","onClear","InputGroup","SearchInput","id","type","placeholder","value","onChange","EmptyTopics","onCreateTopic","Bullseye","EmptyState","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","Button","variant","className","onClick","EmptySearch","TopicsListComponent","getTopicDetailsPath","onClickTopic","onDeleteTopic","onError","useState","loading","setLoading","page","setPage","perPage","setPerPage","offset","setOffset","topics","setTopics","filteredTopics","setFilteredTopics","deleteModal","setDeleteModal","topicName","setTopicName","addAlert","useContext","config","fetchTopic","topicsList","response","data","code","error_message","AlertVariant","useEffect","onSetPage","_event","pageNumber","onPerPageSelect","tableColumns","title","transforms","sortable","rowData","items","map","topic","byte","convertedByteValue","milliseconds","convertedValue","Link","to","e","preventDefault","partitions","length","Number","filter","element","key","Math","round","abs","trim","topicsFiltered","includes","prevState","undefined","actions","_","rowId","onDelete","onEdit","Loading","Card","Toolbar","ToolbarContent","ToolbarItem","Pagination","itemCount","widgetId","Table","TableVariant","cells","rows","slice","TableHeader","TableBody","Divider","PaginationVariant","FederatedMainView","mainBreadcrumbs","getToken","activeTab","apiBasePath","kafkaName","kafkaPageLink","onDeleteConsumer","alertContext","activeTabKey","setActiveTabKey","contentRefTopics","contentRefConsumers","BrowserRouter","I18nextProvider","i18n","basePath","Breadcrumb","BreadcrumbItem","isActive","PageSection","Level","PageSectionVariants","isWidthLimited","padding","default","Tabs","activeKey","onSelect","event","tabIndex","Tab","TabTitleText","eventKey","tabContentId","tabContentRef","TabContent","ref","hidden","onDeleteConsumerGroup","consumerGroupByTopic"],"mappings":"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","file":"527.0547aa8b.bundle.js","sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PlusCircleIcon = require('../createIcon').createIcon(exports.PlusCircleIconConfig);\nexports[\"default\"] = exports.PlusCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.SearchIconConfig = {\n  name: 'SearchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.SearchIcon = require('../createIcon').createIcon(exports.SearchIconConfig);\nexports[\"default\"] = exports.SearchIcon;","import React, { createContext, useEffect, useState } from 'react';\nimport { AlertVariant } from '@patternfly/react-core';\nimport { ServerAlertGroup } from '../../Components/ServerAlertGroup/ServerAlertGroup';\nimport { AlertType, AlertContextProps, TimeOut } from './Alert.types';\n\nexport const AlertContext = createContext<AlertContextProps>(\n  {} as AlertContextProps\n);\n\nexport const AlertProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [timers, setTimers] = useState<TimeOut[]>([]);\n\n  useEffect(() => {\n    const timersKeys = timers.map((timer) => timer?.key);\n    const timeOuts = alerts\n      .filter((alert) => !timersKeys.includes(alert.key))\n      .map((alert) => {\n        const timeOut = setTimeout(() => hideAlert(alert.key), 8000);\n        return { key: alert.key, timeOut };\n      });\n    setTimers([...timers, ...timeOuts]);\n    return () => timers.forEach((timer) => clearTimeout(timer.timeOut));\n  }, [alerts]);\n\n  const hideAlert = (key: number) => {\n    setAlerts((alerts) => [...alerts.filter((el) => el.key !== key)]);\n    setTimers((timers) => [...timers.filter((timer) => timer.key === key)]);\n  };\n\n  const createId = () => new Date().getTime();\n\n  const addAlert = (\n    message: string,\n    variant: AlertVariant = AlertVariant.default\n  ) => {\n    setAlerts([...alerts, { key: createId(), message, variant }]);\n  };\n\n  return (\n    <AlertContext.Provider value={{ addAlert }}>\n      <ServerAlertGroup alerts={alerts} onCloseAlert={hideAlert} />\n      {children}\n    </AlertContext.Provider>\n  );\n};\n","import React from 'react';\nimport { InputGroup, SearchInput } from '@patternfly/react-core';\n\nexport interface ISearchTopicsProps {\n  setSearch: (value: string) => void;\n  search: string;\n  onClear: () => void;\n}\nconst SearchTopics: React.FunctionComponent<ISearchTopicsProps> = ({\n  search,\n  setSearch,\n  onClear,\n}) => {\n  const onChangeInput = (value: string) => {\n    setSearch(value);\n  };\n\n  const onClearHandler = () => {\n    onClear();\n    setSearch('');\n  };\n  return (\n    <InputGroup>\n      <SearchInput\n        name='searchName'\n        id='search-topics-input'\n        type='search'\n        aria-label='search input '\n        placeholder='Search'\n        value={search}\n        onChange={onChangeInput}\n        onClear={onClearHandler}\n      />\n    </InputGroup>\n  );\n};\nexport { SearchTopics };\n","import React from 'react';\nimport {\n  Bullseye,\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Title,\n} from '@patternfly/react-core';\nimport PlusIcon from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\n\nexport interface IEmptyTopic {\n  onCreateTopic?: () => void;\n}\n\nexport const EmptyTopics: React.FunctionComponent<IEmptyTopic> = ({\n  onCreateTopic,\n}) => {\n  return (\n    <Bullseye>\n      <EmptyState>\n        <EmptyStateIcon icon={PlusIcon} />\n        <Title headingLevel='h5' size='lg'>\n          You don&apos;t have any topics yet\n        </Title>\n        <EmptyStateBody>\n          Create a topic by clicking the button below to get started\n        </EmptyStateBody>\n        <Button\n          variant='primary'\n          className='topics-empty-page'\n          onClick={onCreateTopic}\n        >\n          Create Topic\n        </Button>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Title,\n} from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\n\nexport const EmptySearch: React.FunctionComponent = () => {\n  return (\n    <EmptyState>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel='h5' size='lg'>\n        No results found\n      </Title>\n      <EmptyStateBody>\n        No result match the filter criteria. Remove filter or clear all filters\n        to show results\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  AlertVariant,\n  Button,\n  Card,\n  Divider,\n  Pagination,\n  PaginationVariant,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  sortable,\n} from '@patternfly/react-table';\nimport { useTimeout } from '../../../../Hooks/useTimeOut';\nimport { SearchTopics } from './SearchTopics';\nimport { EmptyTopics } from './EmptyTopics';\nimport { EmptySearch } from './EmptySearch';\nimport { getTopics } from '../../../../Services';\nimport { DeleteTopics } from './DeleteTopicsModal';\nimport { ConfigContext } from '../../../../Contexts';\nimport { TopicsList } from '../../../../OpenApi';\nimport { Loading } from '../../../../Components/Loading/Loading';\nimport { AlertContext } from '../../../../Contexts/Alert';\nimport { Link } from 'react-router-dom';\n\nimport './TopicList.css';\n\nexport interface ITopic {\n  name: string;\n  replicas: number;\n  partitions: number;\n}\n\nexport interface ITopicProps {\n  rows: ITopic[];\n}\n\nexport interface ITopicList {\n  onCreateTopic: () => void;\n  onClickTopic: (topicName: string | undefined) => void;\n  getTopicDetailsPath: (topic: string | undefined) => string;\n  onDeleteTopic: () => void;\n  onError?: (errorCode: number, message: string) => void;\n}\n\nexport const TopicsListComponent: React.FunctionComponent<ITopicList> = ({\n  onCreateTopic,\n  getTopicDetailsPath,\n  onClickTopic,\n  onDeleteTopic,\n  onError,\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(10);\n  const [offset, setOffset] = useState<number>(0);\n  const [search, setSearch] = useState('');\n  const [topics, setTopics] = useState<TopicsList>();\n  const [filteredTopics, setFilteredTopics] = useState<TopicsList>();\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [topicName, setTopicName] = useState<string | undefined>();\n\n  const { addAlert } = useContext(AlertContext);\n\n  const config = useContext(ConfigContext);\n\n  const fetchTopic = async () => {\n    try {\n      const topicsList = await getTopics(config);\n      if (topicsList) {\n        setTopics(topicsList);\n        setFilteredTopics(topicsList);\n      }\n    } catch (err) {\n      //TODO: Update the api to allow suppress alerts if the application does not want to show them as well.\n      if (onError && err.response.data.code === 401) {\n        onError(err.response.data.code, err.response.data.error_message);\n      } else {\n        addAlert(err.response.data.error_message, AlertVariant.danger);\n      }\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetchTopic();\n  }, [deleteModal]);\n\n  useTimeout(() => fetchTopic(), 5000);\n\n  const onSetPage = (_event, pageNumber: number) => {\n    setPage(pageNumber);\n    setOffset(page * perPage);\n  };\n\n  const onPerPageSelect = (_event, perPage: number) => {\n    setPerPage(perPage);\n  };\n\n  const tableColumns = [\n    { title: 'Name' },\n    { title: 'Partitions', transforms: [sortable] },\n    { title: 'Retention Time', transforms: [sortable] },\n    { title: 'Retention Size', transforms: [sortable] },\n  ];\n  const convertRetentionTime = (milliseconds: number) => {\n    let convertedValue;\n    if (milliseconds === -1) {\n      return 'Unlimited';\n    } else if (milliseconds < 60000) {\n      if (milliseconds === 1) return milliseconds + ' ' + 'millisecond';\n      else return milliseconds + ' ' + 'milliseconds';\n    } else if (milliseconds >= 60000 && milliseconds < 3.6e6) {\n      convertedValue = milliseconds / 60000;\n      convertedValue = Math.round(convertedValue * 100) / 100;\n      if (convertedValue === 1) return convertedValue + ' ' + 'minute';\n      else return convertedValue + ' ' + 'minutes';\n    } else if (milliseconds >= 3.6e6 && milliseconds < 1.728e8) {\n      convertedValue = milliseconds / 3.6e6;\n      convertedValue = Math.round(convertedValue * 100) / 100;\n      if (convertedValue === 1) return convertedValue + ' ' + 'hour';\n      else return convertedValue + ' ' + 'hours';\n    } else if (milliseconds >= 1.728e8) {\n      convertedValue = milliseconds / 8.64e7;\n      convertedValue = Math.round(convertedValue * 100) / 100;\n      return convertedValue + ' ' + 'days';\n    }\n  };\n\n  const convertRetentionSize = (byte: number) => {\n    let convertedByteValue;\n    if (byte === -1) {\n      return 'Unlimited';\n    } else if (Math.abs(byte) < 1000) {\n      if (byte === 1) return byte + ' ' + 'byte';\n      else return byte + ' ' + 'bytes';\n    } else if (Math.abs(byte) >= 1000 && Math.abs(byte) < 1000000) {\n      convertedByteValue = byte / 1000;\n      if (convertedByteValue === 1)\n        return convertedByteValue + ' ' + 'kilobyte';\n      else return convertedByteValue + ' ' + 'kilobytes';\n    } else if (Math.abs(byte) >= 1000000 && Math.abs(byte) < 1000000000) {\n      convertedByteValue = byte / 1000000;\n      if (convertedByteValue === 1)\n        return convertedByteValue + ' ' + 'megabyte';\n      else return convertedByteValue + ' ' + 'megabytes';\n    } else if (Math.abs(byte) >= 1000000000 && Math.abs(byte) < 1000000000000) {\n      convertedByteValue = byte / 1000000000;\n      if (convertedByteValue === 1)\n        return convertedByteValue + ' ' + 'gigabyte';\n      else return convertedByteValue + ' ' + 'gigabytes';\n    } else if (Math.abs(byte) >= 1000000000000) {\n      convertedByteValue = byte / 1000000000000;\n      if (convertedByteValue === 1)\n        return convertedByteValue + ' ' + 'terabyte';\n      else return convertedByteValue + ' ' + 'terabytes';\n    }\n  };\n  const rowData =\n    filteredTopics?.items?.map((topic) => [\n      {\n        title: (\n          <Link\n            data-testid='tableTopics-linkTopic'\n            to={getTopicDetailsPath(topic.name)}\n            onClick={(e) => {\n              e.preventDefault();\n              onClickTopic(topic.name);\n            }}\n          >\n            {topic?.name}\n          </Link>\n        ),\n      },\n      topic.partitions?.length,\n\n      convertRetentionTime(\n        Number(\n          topic.config?.filter((element) => element.key === 'retention.ms')[0]\n            ?.value || 0\n        )\n      ),\n\n      convertRetentionSize(\n        Number(\n          topic.config?.filter(\n            (element) => element.key === 'retention.bytes'\n          )[0]?.value || 0\n        )\n      ),\n    ]) || [];\n\n  useEffect(() => {\n    if (\n      search &&\n      search.trim() != '' &&\n      topics?.items &&\n      topics.items.length > 0\n    ) {\n      const filterSearch = topics?.items.filter(\n        (topicsFiltered) =>\n          topicsFiltered?.name && topicsFiltered.name.includes(search)\n      );\n      setFilteredTopics((prevState) =>\n        prevState\n          ? {\n              ...prevState,\n              items: filterSearch,\n            }\n          : undefined\n      );\n    } else {\n      setFilteredTopics(topics);\n    }\n  }, [search, topics]);\n\n  const onClear = () => {\n    setFilteredTopics(topics);\n  };\n  const onDelete = (rowId: any) => {\n    if (filteredTopics?.items) {\n      setTopicName(filteredTopics.items[rowId].name);\n    }\n    setDeleteModal(true);\n  };\n\n  const onEdit = (rowId: any) => {\n    if (filteredTopics?.items) {\n      onClickTopic(filteredTopics.items[rowId].name);\n    }\n  };\n\n  const actions = [\n    {\n      title: 'Delete',\n      ['data-testid']: 'tableTopics-actionDelete',\n      onClick: (_, rowId) => onDelete(rowId),\n    },\n    {\n      title: 'Edit',\n      ['data-testid']: 'tableTopics-actionEdit',\n      onClick: (_, rowId) => onEdit(rowId),\n    },\n  ];\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <>\n      {deleteModal && (\n        <DeleteTopics\n          topicName={topicName}\n          setDeleteModal={setDeleteModal}\n          deleteModal={deleteModal}\n          onDeleteTopic={onDeleteTopic}\n        />\n      )}\n      <Card className='kafka-ui-m-full-height'>\n        {rowData.length < 1 && search.length < 1 ? (\n          <EmptyTopics onCreateTopic={onCreateTopic} />\n        ) : (\n          <>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem className='pf-c-toolbar-item--search'>\n                  <SearchTopics\n                    onClear={onClear}\n                    search={search}\n                    setSearch={setSearch}\n                  />\n                </ToolbarItem>\n                <ToolbarItem>\n                  <Button\n                    id='topic-list-create-topic-button'\n                    className='topics-per-page'\n                    data-testid='tabTopics-actionCreate'\n                    onClick={() => {\n                      onCreateTopic();\n                    }}\n                  >\n                    Create topic\n                  </Button>\n                </ToolbarItem>\n                <ToolbarItem variant='pagination'>\n                  <Pagination\n                    itemCount={rowData.length}\n                    perPage={perPage}\n                    page={page}\n                    onSetPage={onSetPage}\n                    widgetId='topic-list-pagination-top'\n                    onPerPageSelect={onPerPageSelect}\n                  />\n                </ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n\n            <Table\n              aria-label='Compact Table'\n              variant={TableVariant.compact}\n              cells={tableColumns}\n              rows={\n                page != 1\n                  ? rowData.slice(offset, offset + perPage)\n                  : rowData.slice(0, perPage)\n              }\n              actions={actions}\n            >\n              <TableHeader />\n              <TableBody />\n            </Table>\n          </>\n        )}\n        <Divider />\n        {rowData.length < 1 && search.length > 1 && <EmptySearch />}\n        {rowData.length > 1 && (\n          <Pagination\n            itemCount={rowData.length}\n            perPage={perPage}\n            page={page}\n            onSetPage={onSetPage}\n            widgetId='topic-list-pagination-bottom'\n            onPerPageSelect={onPerPageSelect}\n            offset={0}\n            variant={PaginationVariant.bottom}\n          />\n        )}\n      </Card>\n    </>\n  );\n};\n","import React, { FunctionComponent, useState } from 'react';\nimport './style.scss';\nimport { TopicsListComponent } from '../../Modules/Topics/TopicList/Components/TopicsList';\nimport { ConfigContext } from '../../Contexts';\nimport {\n  AlertVariant,\n  Breadcrumb,\n  BreadcrumbItem,\n  Title,\n  Tabs,\n  Level,\n  Tab,\n  TabTitleText,\n  PageSection,\n  PageSectionVariants,\n  TabContent,\n} from '@patternfly/react-core';\nimport kafkai18n from '../../i18n';\nimport { I18nextProvider } from 'react-i18next';\nimport { AlertContext, AlertContextProps } from '../../Contexts/Alert';\nimport { BrowserRouter } from 'react-router-dom';\nimport { FederatedProps } from '../../Utils';\nimport { ConsumerGroupsList } from '../../Modules/ConsumerGroups/ConsumerGroupList/Components/ConsumerGroupList';\n\nexport interface FederatedMainViewProps extends FederatedProps {\n  getToken: () => Promise<string>;\n  apiBasePath: string;\n  activeTab?: number;\n  kafkaName?: string;\n  kafkaPageLink?: string;\n  onCreateTopic: () => void;\n  onClickTopic: (topicName: string | undefined) => void;\n  getTopicDetailsPath: (topic: string | undefined) => string;\n  addAlert: (message: string, variant?: AlertVariant) => void;\n  onDeleteConsumer: () => void;\n  onDeleteTopic: () => void;\n}\n\nconst FederatedMainView: FunctionComponent<FederatedMainViewProps> = ({\n  getToken,\n  activeTab = 0,\n  apiBasePath,\n  kafkaName,\n  kafkaPageLink,\n  onCreateTopic,\n  getTopicDetailsPath,\n  onClickTopic,\n  addAlert,\n  onDeleteConsumer,\n  onDeleteTopic,\n  onError,\n}) => {\n  const alertContext = {\n    addAlert,\n  } as AlertContextProps;\n\n  const [activeTabKey, setActiveTabKey] = useState(activeTab);\n\n  const contentRefTopics = React.createRef<HTMLElement>();\n  const contentRefConsumers = React.createRef<HTMLElement>();\n\n  const handleTabClick = (event, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  const buildMainView = () => {\n    const mainBreadcrumbs = (\n      <Breadcrumb>\n        <BreadcrumbItem to={kafkaPageLink ? kafkaPageLink : '#'}>\n          Kafka Instances\n        </BreadcrumbItem>\n        <BreadcrumbItem to='#' isActive>\n          {kafkaName ? kafkaName : 'Kafka Instance Name'}\n        </BreadcrumbItem>\n      </Breadcrumb>\n    );\n\n    return (\n      <>\n        <section className='pf-c-page__main-breadcrumb'>\n          {mainBreadcrumbs}\n        </section>\n        <PageSection variant='light' className='foobarfoobar'>\n          <Level>\n            <Title headingLevel='h1'>\n              {kafkaName ? kafkaName : 'Kafka Instance Name'}\n            </Title>\n            {/* TODO: Add this back once we get the options available to us for this menu <Button variant='plain' iconPosition='right'>\n            <EllipsisVIcon />\n          </Button> */}\n          </Level>\n        </PageSection>\n\n        <PageSection\n          variant={PageSectionVariants.light}\n          className='pf-c-page__main-tabs'\n          isWidthLimited\n          padding={{ default: 'noPadding' }}\n        >\n          <Tabs\n            activeKey={activeTabKey}\n            onSelect={handleTabClick}\n            className='pf-m-page-insets'\n          >\n            <Tab\n              title={<TabTitleText>Topics</TabTitleText>}\n              eventKey={0}\n              id='topics-tab-section'\n              aria-label='Topics Tab.'\n              data-testid='pageKafka-tabTopics'\n              tabContentId='kafka-ui-TabcontentTopics'\n              tabContentRef={contentRefTopics}\n            />\n            <Tab\n              title={<TabTitleText>Consumer groups</TabTitleText>}\n              eventKey={1}\n              id='consumer-groups-tab-section'\n              aria-label='Consumer Groups Tab.'\n              data-testid='pageKafka-tabConsumers'\n              tabContentId='kafka-ui-TabcontentConsumers'\n              tabContentRef={contentRefConsumers}\n              className={activeTabKey === 1 ? 'kafka-ui--consumer-content' : ''}\n            />\n          </Tabs>\n        </PageSection>\n        <PageSection\n          variant={\n            activeTabKey === 1\n              ? PageSectionVariants.default\n              : PageSectionVariants.default\n          }\n        >\n          <TabContent\n            eventKey={0}\n            id='kafka-ui-TabcontentTopics'\n            ref={contentRefTopics}\n            className='kafka-ui-m-full-height'\n            aria-label='Topics.'\n          >\n            <TopicsListComponent\n              onCreateTopic={onCreateTopic}\n              onClickTopic={onClickTopic}\n              getTopicDetailsPath={getTopicDetailsPath}\n              onDeleteTopic={onDeleteTopic}\n              onError={onError}\n            />\n          </TabContent>\n          <TabContent\n            eventKey={1}\n            id='kafka-ui-TabcontentConsumers'\n            ref={contentRefConsumers}\n            className='kafka-ui-m-full-height'\n            aria-label='Consumer groups.'\n            hidden\n          >\n            <ConsumerGroupsList\n              onDeleteConsumerGroup={onDeleteConsumer}\n              consumerGroupByTopic={false}\n            />\n          </TabContent>\n        </PageSection>\n      </>\n    );\n  };\n\n  return (\n    // TODO don't add BrowserRouter here - see  https://github.com/bf2fc6cc711aee1a0c2a/mk-ui-frontend/issues/74\n    <BrowserRouter>\n      <I18nextProvider i18n={kafkai18n}>\n        <ConfigContext.Provider value={{ basePath: apiBasePath, getToken }}>\n          <AlertContext.Provider value={alertContext}>\n            {buildMainView()}\n          </AlertContext.Provider>\n        </ConfigContext.Provider>\n      </I18nextProvider>\n    </BrowserRouter>\n  );\n};\n\nexport { FederatedMainView };\n\nexport default FederatedMainView;\n"],"sourceRoot":""}