{"version":3,"file":"3380.3675461c.js","mappings":"qGAIO,SAASA,KAAOC,GAEnB,MAAMC,EAAU,GACVC,EAAS,GAAGC,eAoBlB,OAnBAH,EAAKI,OAAOC,SAASC,SAASC,IAC1B,MAAMC,SAAiBD,EACvB,GAAgB,WAAZC,GAAoC,WAAZA,EACxBP,EAAQQ,KAAKF,QAEZ,GAAIG,MAAMC,QAAQJ,IAAQA,EAAIK,OAAQ,CACvC,MAAMC,EAAQd,KAAOQ,GACjBM,GACAZ,EAAQQ,KAAKI,QAGhB,GAAgB,WAAZL,EACL,IAAK,MAAMM,KAAOP,EACVL,EAAOa,KAAKR,EAAKO,IAAQP,EAAIO,IAC7Bb,EAAQQ,KAAKK,MAKtBb,EAAQe,KAAK,K,soBCXlBC,GAA0B,IAAAC,eAA4C,CAC1EC,UAAW,GACXC,WAAY,WAAM,UAClBC,aAAc,KAGHC,EAA2BL,EAAwBM,SAEnDC,EAAmB,SAC9BC,GAEM,OAA2C,IAAAC,YAC/CT,GADME,EAAS,YAAEC,EAAU,aAAEO,EAAa,gBAGtC,EAAgDF,GAAmB,GAAjEG,EAAK,QAAEC,EAAS,YAAEC,EAAQ,WAAEC,EAAG,MAAKC,EAAK,IAA3C,wCACEC,GAAaH,GAAY,IAAE,SAC7B,EAA+BC,GAAO,GAApCG,EAAU,aAAEC,EAAY,eAEhC,OACE,wCACeR,EACbS,SAAU,EACVC,IAAsB,mBAAVT,OAAuBU,EAAYV,EAC/CC,WAAW,IAAA9B,KACT8B,EACA,uBACAV,GACEA,KAAcgB,MAAAA,OAAY,EAAZA,EAAcI,QAC5B,iCAEJC,YAAuBF,IAAfJ,IAA6BA,EACrCO,QAAS,SAACC,GAAU,OAAAtB,GAAcA,EAAWsB,EAAOT,EAAUF,KAC1DC,K,4hBCvBJW,EAA6C,SAAC,G,IAClDC,EAAU,aACVC,EAAgB,mBAChBC,EAAc,iBACdC,EAAQ,WACR5B,EAAS,YACTC,EAAU,aACVO,EAAa,gBACbN,EAAY,eAGV2B,EAUEJ,EAAU,MATZK,EASEL,EAAU,KARZM,EAQEN,EAAU,eAPZO,EAOEP,EAAU,OANZQ,EAMER,EAAU,OALES,EAKZT,EAAU,cAJZU,EAIEV,EAAU,QAHZf,EAGEe,EAAU,UAFZ,EAEEA,EAAU,8BAFZW,OAA6B,IAAG,GAAK,EAClCC,EAAS,EACVZ,EAXE,wHAoBN,OAJIW,IACFC,EAAsB,WAAIhC,GAI1B,kBAACF,EAAwB,CACvBmC,MAAO,CACLtC,UAAS,EACTC,WAAU,EACVO,cAAa,EACbN,aAAY,IAGd,kBAAC,QAAO,GACNQ,WAAW,IAAA9B,KACTwD,GAAiC,yBACjC1B,GAEFmB,MAAOA,EACPM,QAASA,EACTL,KAAMA,EAAI,aACEI,EACZH,eAAgBA,EAChBC,OAAQA,EACRC,OAAQA,GACJI,GAEJ,kBAAC,EAAAE,YAAW,KAAKb,IACjB,kBAAC,EAAAc,UAAS,KAAKb,IACdC,M,gmBC3DHa,EAAuD,SAAC,G,IAC5DC,EAAY,eACZC,EAAgB,mBAChBC,EAAY,eACZC,EAAgB,mBAGdC,EAKEJ,EAAY,GAJdK,EAIEL,EAAY,gBAHd,EAGEA,EAAY,gCAHdM,OAA+B,IAAG,OAAI,EACtCC,EAEEP,EAAY,MADXQ,EAAgB,EACjBR,EANE,oEAQN,OACE,oCACE,kBAAC,EAAAS,QAAO,GACNL,GAAIA,EACJC,gBAAiBA,EACjBE,MAAOA,EACPD,gCAAiCA,GAC7BE,GAEJ,kBAAC,EAAAE,eAAc,KACZT,GACC,kBAAC,EAAAU,mBAAkB,KACbV,EAAgB,CACpBW,WAAYX,EAAiBW,aAE5BT,GAGJD,MAAAA,OAAY,EAAZA,EAAcW,KAAI,SAACC,EAAaC,GAE7B,MAOED,EAAW,IAPb7D,OAAG,IAAG,QAAK,EACXwC,EAMEqB,EAAW,QALb9C,EAKE8C,EAAW,UAJbV,EAIEU,EAAW,GAHbE,EAGEF,EAAW,UAFbG,EAEEH,EAAW,KADVI,EAAa,EACdJ,EARE,uDASN,OACE,kBAAC,EAAAK,YAAW,GACVlE,IAAK,UAAGA,EAAG,YAAI8D,GACftB,QAASA,EACTzB,UAAWA,EACXoC,GAAIA,EACJY,UAAWA,GACPE,GAEHD,W,4MCnDXG,EAA8C,SAAC,G,IACnD,IAAAC,MAAAA,OAAK,IAAG,IAAC,EACTC,EAAI,OACJC,EAAO,UACPC,EAAgB,mBAChB,IAAAC,cAAAA,OAAa,IAAG,KAAE,EAClBC,EAAa,gBAELC,GAAM,IAAAC,kBAAgB,EACxB,GAAwC,IAAAC,UAAiB,IAAxDC,EAAe,KAAEC,EAAkB,KAmBpC5B,EACJ,oCACE,kBAAC,EAAA6B,cAAa,CACZC,MAAOR,EAAgB,CAACA,GAAiB,GACzCS,WARe,WACnBV,EAAiB,KAQbW,aAAc,IAEd,kBAAC,EAAAC,WAAU,KACT,kBAAC,EAAAC,UAAS,CACRC,KAAK,aACLlC,GAAG,sBACHmC,KAAK,SAAQ,aACDZ,EAAE,4BACda,YAAab,EAAE,iBACf/B,MAAOkC,EACPW,SA5BY,SAAC7C,GACrBmC,EAAmBnC,MA6Bb,kBAAC,EAAA8C,OAAM,CACLjD,QAAS,EAAAkD,cAAA,QACTC,YAAYd,EAAgB/E,OAC5B6B,QA7BO,WACf4C,EAAiBM,GACjBC,EAAmB,KA2BM,aACLJ,EAAE,uBAEd,kBAAC,EAAAkB,WAAU,UAMf3C,EAAmC,CACvC,CACEe,KACE,kBAAC,EAAAyB,OAAM,CACLtC,GAAG,iCACHpC,UAAU,kBAAiB,cACf,oBACZY,QAAS8C,GAERC,EAAE,yBA+BX,OAzBIN,EAAQ,GACVnB,EAAatD,KAAK,CAChBqE,KACE,kBAAC6B,EAAA,GAAa,CACZC,SAAS,6CACTC,UAAW3B,EACXC,KAAMA,EACNC,QAASA,EACT0B,OAAQ,CACNC,gBAAiBvB,EAAE,6BACnBwB,cAAexB,EAAE,0BACjByB,YAAazB,EAAE,wBACf0B,eAAgB1B,EAAE,2BAClB2B,WAAY3B,EAAE,uBACd4B,WAAY5B,EAAE,uBACd6B,cAAe7B,EAAE,yBACjB8B,SAAU9B,EAAE,uBAIlBlC,QAAS,aACTuB,UAAW,CAAE0C,QAAS,gBAKxB,kBAAC3D,EAAA,EAAU,CACTC,aAAc,CACZI,GAAI,mBACJC,gBA1FU,WACdmB,EAAiB,KA0FblB,gCAAiC,KACjCC,MAAO,CAAEoD,GAAI,YAEf1D,iBAAkB,CAAEW,WAAY,GAAIgD,WAAY,MAChDzD,iBAAkBA,EAClBD,aAAcA,K,WC9Fd2D,EAA0C,SAAC,G,IAoEvCC,EAnERzC,EAAK,QACLC,EAAI,OACJC,EAAO,UACPC,EAAgB,mBAChBC,EAAa,gBACbC,EAAa,gBACbqC,EAAU,aACVjG,EAAa,gBACbkG,EAAM,SACNC,EAAa,gBACbC,EAAa,gBACb5E,EAAM,SACNC,EAAM,SAEEoC,GAAM,IAAAC,kBAAgB,EACtBuC,GAAc,IAAAC,YAAsC,UAEtDC,GAAWC,IADO,IAAAC,gBAAiB,CAAED,YAAa,WAAM,YAAI,eAG5DE,EAAe,CACnB,CAAEC,MAAO9C,EAAE,gBACX,CAAE8C,MAAO9C,EAAE,qBAAsB+C,WAAY,CAAC,EAAAC,WAC9C,CAAEF,MAAO9C,EAAE,wBAAyB+C,WAAY,CAAC,EAAAC,WACjD,CAAEF,MAAO9C,EAAE,wBAAyB+C,WAAY,CAAC,EAAAC,YAW7CC,EAA8B,SAElCtG,EACAuG,GAEQ,IAbQC,EAaR,EAAcxG,EAAY,KAA1BgE,OAAI,IAAG,KAAE,EACF,WAAXuC,GAdYC,EAeLxC,EAdX6B,EAAU,EAAAY,UAAA,iBAA4B,CACpCD,UAAS,EACTb,cAAa,EACbC,cAAa,KAYO,SAAXW,GACTb,GAAUA,EAAO1B,IA4DflD,GApCE0E,EAAgD,GACtDC,MAAAA,GAAAA,EAAYlD,KAAI,SAAC3C,G,QACPoE,EAA6BpE,EAAG,KAA1B8G,EAAuB9G,EAAG,WAAd+G,EAAW/G,EAAG,OAExC4F,EAASlH,KAAK,CACZuC,MAAO,CACL,CACEsF,MACE,kBAAC,EAAAS,KAAI,eACS,wBACZC,GAAI,UAAGd,EAAQ,mBAAW/B,IAEzBA,IAIP0C,MAAAA,OAAU,EAAVA,EAAYjI,QACZ,OACEqI,QACgE,QAA9D,EAAAH,MAAAA,OAAM,EAANA,EAAQ1I,QAAO,SAAC8I,GAAY,MAAgB,iBAAhBA,EAAQpI,OAAwB,UAAE,eAC1D2C,QAAS,KAGjB,OACEwF,QACmE,QAAjE,EAAAH,MAAAA,OAAM,EAANA,EAAQ1I,QAAO,SAAC8I,GAAY,MAAgB,oBAAhBA,EAAQpI,OAA2B,UAAE,eAC7D2C,QAAS,KAInBtB,aAAcJ,OAGX4F,GAKT,OACE,oCACE,kBAAC1C,EAAa,CACZC,MAAOA,EACPC,KAAMA,EACNC,QAASA,EACTG,cAAeA,EACfF,iBAAkBA,EAClBC,cAAeA,IAEjB,kBAAC3C,EAAA,EAAQ,CACPC,WAAY,CACVI,MAAOqF,EACPpF,KAAI,EACJ,aAAcuC,EAAE,0BAChBtC,eAvEe,SAACiG,G,QAChBhH,EAAsBgH,EAAQhH,aAapC,MAZiB,E,GAEbmG,MAAO9C,EAAE,kBACT,EAAC,eAAgB,2BACjB,EAAA/C,QAAS,WAAM,OAAAgG,EAA4BtG,EAAc,W,OAGzDmG,MAAO9C,EAAE,gBACT,EAAC,eAAgB,yBACjB,EAAA/C,QAAS,WAAM,OAAAgG,EAA4BtG,EAAc,S,KA6DvDoB,+BAA+B,EAC/BD,QAAS,EAAA8F,aAAA,QACTjG,OAAM,EACNC,OAAM,GAERzB,cAAeA,GAAiB,qBAEjCiG,MAAAA,OAAU,EAAVA,EAAYhH,QAAS,GAAK0E,EAAc1E,OAAS,GAChD,kBAACyI,EAAA,EAAU,CACTC,gBAAiB,CACfhG,QAAS,cAEXiG,WAAY,CACVjB,MAAO9C,EAAE,4BAEXgE,oBAAqB,CACnBC,KAAMjE,EAAE,6BAIbN,EAAQ,GACP,kBAACyB,EAAA,GAAa,CACZC,SAAS,gDACTC,UAAW3B,EACX5B,QAAS,EAAAoG,kBAAA,OACTvE,KAAMA,EACNC,QAASA,EACT0B,OAAQ,CACNC,gBAAiBvB,EAAE,0BACnBwB,cAAexB,EAAE,0BACjByB,YAAazB,EAAE,wBACf0B,eAAgB1B,EAAE,2BAClB2B,WAAY3B,EAAE,uBACd4B,WAAY5B,EAAE,uBACd6B,cAAe7B,EAAE,yBACjB8B,SAAU9B,EAAE,yB,i4CC5JlBmE,EAAmB,WACf,IAAAC,IAAY,UAAkB,IAAE,QAChCpE,GAAM,IAAAC,kBAAgB,EACtBoE,IAAa,IAAAC,aAAc,CACjCD,SAAU,eAGX,SACKf,GAAS,IAAApH,YAAW,KACpB,GAA6B,WAAyB,GAApD,IAAAyD,KAAAA,OAAI,IAAG,IAAC,EAAE,IAAAC,QAAAA,OAAO,IAAG,KAAE,EACxB2E,GAAU,IAAAC,cAEV9B,GAAWC,IADO,IAAAC,gBAAiB,CAAED,YAAa,WAAM,YAAI,eAG5D,GAA8B,IAAAzC,YAA7BkC,EAAU,KAAEqC,EAAa,KAC1B,GAAwC,IAAAvE,UAAiB,IAAxDwE,EAAe,KAAEC,EAAkB,KACpC,GAAsB,IAAAzE,UAAiB,GAAtC0E,EAAM,KAAEC,EAAS,KAClB,GAAoB,IAAA3E,YAAnB4E,EAAK,KAAEC,EAAQ,KAChB,GAA0B,IAAA7E,YAAzB8E,EAAQ,KAAEC,EAAW,KACtB,GAAsB,IAAA/E,UAAkB,CAAEd,MAAO,EAAG8F,UAAW,QAA9DtH,EAAM,KAAEuH,EAAS,MAExB,IAAAC,YAAU,WACRC,MACC,CAACX,EAAiBI,EAAOE,KAE5B,QAAW,WAAM,OAAAK,MAAc,MAE/B,IAAAD,YAAU,WAERP,EADejF,GAAWD,EAAO,MAEhC,CAACA,EAAMC,IAEV,IAAM0F,EAAqB,WACzBf,EAAQtJ,KAAK,UAAGyH,EAAQ,mBAGpB6C,EAAc,SAACpC,GACnBoB,EAAQtJ,KAAK,UAAGyH,EAAQ,yBAAiBS,KAGrCd,EAAS,SAACc,GACdoC,GAAeA,EAAYpC,IAGvBxF,EAAiB,SAAC6H,EAAQpG,EAAO8F,GAQrCD,EAPqB,CACnB,EAAK,OACL,EAAK,aACL,EAAK,eACL,EAAK,mBAGkB7F,IACzB2F,EAASG,GACTC,EAAU,CAAE/F,MAAK,EAAE8F,UAAS,KAGxBG,EAAa,qD,gEAEf,O,sBAAA,IAAM,QACJ/B,EACA,IACA1D,EACA8E,EACAE,EACAE,EACAE,GACAS,MAAK,SAACC,GACNjB,EAAciB,MAAAA,OAAQ,EAARA,EAAUC,W,cAT1B,S,+BAaIC,OAAO,EACPC,OAAI,EACJ,IAAO,OAAa,KACtBA,EAAmB,QAAZ,IAAIH,gBAAQ,eAAEI,KAAKD,KAC1BD,EAAsB,QAAZ,IAAIF,gBAAQ,eAAEI,KAAKC,eAE3B3B,GAAoB,MAATyB,EACbzB,EAAQyB,EAAMD,GAEdvB,EAAS,CACPvB,MAAO8C,GAAW,GAClB9H,QAAS,EAAAkI,aAAA,S,+BA6DjB,OACE,oCACE,kBAAC,EAAAC,KAAI,CAAC5J,UAAU,yBAAwB,oBAAmB,oBAxD1CS,IAAfsF,EAEA,kBAAC,EAAA8D,YAAW,CACV7J,UAAU,yBACVyB,QAAS,EAAAqI,oBAAA,MACTC,QAAS,CAAErE,QAAS,cAEpB,kBAACsE,EAAA,EAAU,OAGNjE,EAAWhH,OAAS,GAAKsJ,EAAgBtJ,OAAS,EAEzD,kBAACyI,EAAA,EAAU,CACTC,gBAAiB,CACfhG,QAAS,YACT,oBAAqB,oBAEvBiG,WAAY,CACVjB,MAAO9C,EAAE,6BAEXgE,oBAAqB,CACnBC,KAAMjE,EAAE,4BAEVsG,YAAa,CACXxD,MAAO9C,EAAE,sBACT/C,QAASqI,EACT,cAAe,uBAIZlD,EAEP,kBAACF,EAAW,CACVxC,MAAO0C,EAAWhH,QAAU,EAC5BuE,KAAMA,EACNC,QAASA,EACTG,cAAeuF,EACflD,WACEsC,EACItC,MAAAA,OAAU,EAAVA,EAAYmE,MAAM,EAAG3G,GACrBwC,MAAAA,OAAU,EAAVA,EAAYmE,MAAM3B,EAAQA,EAAShF,GAEzCE,cAAe4E,EACf7E,iBAAkB8E,EAClBpC,cAAe8C,EACfhD,OAAQA,EACR1E,OAAQA,EACRC,OAAQA,IAIP,wCAaX,W,0EChLY4I,E,o2CAAZ,SAAYA,GACV,cACA,0BACA,6BACA,kCAJF,CAAYA,IAAAA,EAAQ,KAOb,IAAMC,EAAY,SACvBnD,EACAoD,EACAC,EACA/L,EACAgK,EACAE,EACAE,G,YADA,IAAAF,IAAAA,EAAyB,EAAA8B,gBAAA,K,gBAExBC,SAAO,W,wDACY,SAAMvD,MAAAA,OAAM,EAANA,EAAQwD,Y,OAQU,OARtCC,EAAc,SAQwB,GANhC,IAAI,EAAAC,UACd,IAAI,EAAAC,cAAc,CAChBF,YAAW,EACXG,SAAU5D,MAAAA,OAAM,EAANA,EAAQ4D,YAGgCT,UACpD7B,EACA8B,EACAC,EACA/L,OACAkC,EACAgI,EACAE,I,OAEF,MAAO,CAAP,EAT4C,SAS5Bc,cAGLqB,EAAiB,SAC5BhE,EACAG,GAAkC,uBACjCuD,SAAO,W,0DACY,SAAMvD,MAAAA,OAAM,EAANA,EAAQwD,Y,OAQjB,OARXC,EAAc,SAQH,GANL,IAAI,EAAAC,UACd,IAAI,EAAAC,cAAc,CAChBF,YAAW,EACXG,SAAU5D,MAAAA,OAAM,EAANA,EAAQ4D,YAGKE,SAASjE,I,OAEpC,OAFQ2C,EAAS,SAA6B,KAEvC,CAAP,EAAOuB,EAAqBvB,YAGxBuB,EAAuB,SAACC,G,UACtBC,EAA2B,CAAE5G,KAAM,GAAI6G,cAAe,KAe5D,OAdIF,GAASA,EAAM3G,OAAM4G,EAAS5G,KAAO2G,EAAM3G,MAEnC,QAAZ,EAAA2G,EAAMhE,cAAM,SAAExI,SAAQ,SAACwI,GACjBA,EAAOhI,MACTiM,EAASjE,EAAOhI,KAAOgI,EAAOrF,UAIlCsJ,EAASC,eAAiC,QAAjB,EAAAF,MAAAA,OAAK,EAALA,EAAOjE,kBAAU,eAAEjI,OAAOqM,aAAc,IAEjEF,EAASG,mBACNJ,MAAAA,OAAK,EAALA,EAAOjE,cAA2C,QAA7B,EAAAiE,MAAAA,OAAK,EAALA,EAAOjE,WAAW,GAAGsE,gBAAQ,eAAEvM,OAAOqM,aAC5D,IAEKF,GAGIK,EAAmB,SAC9BzE,EACA0E,EACAvE,GAAkC,uBACjCuD,SAAO,W,wDACY,SAAMvD,MAAAA,OAAM,EAANA,EAAQwD,Y,OAQK,OARjCC,EAAc,SAQmB,GAN3B,IAAI,EAAAC,UACd,IAAI,EAAAC,cAAc,CAChBF,YAAW,EACXG,SAAU5D,MAAAA,OAAM,EAANA,EAAQ4D,YAG2BY,YAC/C3E,EACA0E,I,OAEF,MAAO,CAAP,EAJuC,SAIvBE,gBAGLX,EAAW,SACtBjE,EACAG,GAAkC,uBACjCuD,SAAO,W,kEACY,SAAMvD,MAAAA,OAAM,EAANA,EAAQwD,Y,OAQjB,OARXC,EAAc,SAQH,GANL,IAAI,EAAAC,UACd,IAAI,EAAAC,cAAc,CAChBF,YAAW,EACXG,SAAU5D,MAAAA,OAAM,EAANA,EAAQ4D,YAGKE,SAASjE,I,OAapC,OAbMuC,EAAW,UAEXsC,EAAStC,EAASI,MACjBxC,OAAS0E,EAAO1E,QAAW,GAClC0E,EAAO1E,OAAOrI,KAAK,CACjBK,IAAK,oBACL2C,MAIG,QAJI,EAAyB,QAAzB,EAAa,QAAb,EAAAyH,EAASI,YAAI,eAAEzC,kBAAU,eAC5BnE,KAAI,SAAC+I,GAAC,MAAK,OAAU,QAAV,EAAAA,EAAEN,gBAAQ,eAAEvM,UACxB8M,QACC,SAACC,EAAmBC,GAAqB,YAAxC,IAAAD,IAAAA,EAAA,QAAmB,IAAAC,IAAAA,EAAA,GAAqBD,EAAgBC,YAC1D,eACCX,aAEC,CAAP,EAAO/B,EAASI,cAGLuC,EAAc,SACzBlF,EACAG,GAAkC,uBACjCuD,SAAO,W,wDACY,SAAMvD,MAAAA,OAAM,EAANA,EAAQwD,Y,OAQlC,OARMC,EAAc,SAQpB,GANY,IAAI,EAAAC,UACd,IAAI,EAAAC,cAAc,CAChBF,YAAW,EACXG,SAAU5D,MAAAA,OAAM,EAANA,EAAQ4D,YAGZmB,YAAYlF,I,OACtB,OADA,SACA,a,gCC3IK,IAAMmF,EAAe,SAC1BC,GAEA,YAA4CzL,IAApCyL,I,yCCNH,IAAMC,EAAuB,SAACC,GACnC,IAAIC,EACJ,OAAsB,IAAlBD,EACK,YACEA,EAAe,IACH,IAAjBA,EAA2BA,EAAAA,eACnBA,EAAAA,gBACHA,GAAgB,KAASA,EAAe,MACjDC,EAAiBD,EAAe,IAET,KADvBC,EAAiBC,KAAKC,MAAuB,IAAjBF,GAAwB,KACnBA,EAAAA,UACrBA,EAAAA,YACHD,GAAgB,MAASA,EAAe,QACjDC,EAAiBD,EAAe,KAET,KADvBC,EAAiBC,KAAKC,MAAuB,IAAjBF,GAAwB,KACnBA,EAAAA,QACrBA,EAAAA,UACHD,GAAgB,QACzBC,EAAiBD,EAAe,OAChCC,EAAiBC,KAAKC,MAAuB,IAAjBF,GAAwB,KAC7CA,SAEFD,EAAahB,YAGToB,EAAuB,SAACC,GACnC,IAAIC,EACJ,OAAc,IAAVD,EACK,YACEH,KAAKK,IAAIF,GAAQ,KACb,IAATA,EAAmBA,EAAAA,QACXA,EAAAA,SACHH,KAAKK,IAAIF,IAAS,MAAQH,KAAKK,IAAIF,GAAQ,QAEzB,KAD3BC,EAAqBD,EAAO,MACSC,EAAAA,YACzBA,EAAAA,aACHJ,KAAKK,IAAIF,IAAS,SAAWH,KAAKK,IAAIF,GAAQ,WAE5B,KAD3BC,EAAqBD,EAAO,SACSC,EAAAA,YACzBA,EAAAA,aACHJ,KAAKK,IAAIF,IAAS,YAAcH,KAAKK,IAAIF,GAAQ,WAE/B,KAD3BC,EAAqBD,EAAO,YACSC,EAAAA,YACzBA,EAAAA,aACHJ,KAAKK,IAAIF,IAAS,WAEA,KAD3BC,EAAqBD,EAAO,YACSC,EAAAA,YACzBA,EAAAA,aAEPD,EAAKrB","sources":["webpack://kafka-ui/./node_modules/@patternfly/react-styles/dist/esm/index.js","webpack://kafka-ui/./src/components/MASTable/CustomRowWrapper.tsx","webpack://kafka-ui/./src/components/MASTable/MASTable.tsx","webpack://kafka-ui/./src/components/MASToolbar/MASToolbar.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicsTable/TopicsToolbar.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicsTable/TopicsTable.tsx","webpack://kafka-ui/./src/modules/Topics/Topics.tsx","webpack://kafka-ui/./src/services/topics.ts","webpack://kafka-ui/./src/utils/axios.ts","webpack://kafka-ui/./src/utils/common.ts"],"sourcesContent":["/** Joins args into a className string\n *\n * @param {any} args list of objects, string, or arrays to reduce\n */\nexport function css(...args) {\n    // Adapted from https://github.com/JedWatson/classnames/blob/master/index.js\n    const classes = [];\n    const hasOwn = {}.hasOwnProperty;\n    args.filter(Boolean).forEach((arg) => {\n        const argType = typeof arg;\n        if (argType === 'string' || argType === 'number') {\n            classes.push(arg);\n        }\n        else if (Array.isArray(arg) && arg.length) {\n            const inner = css(...arg);\n            if (inner) {\n                classes.push(inner);\n            }\n        }\n        else if (argType === 'object') {\n            for (const key in arg) {\n                if (hasOwn.call(arg, key) && arg[key]) {\n                    classes.push(key);\n                }\n            }\n        }\n    });\n    return classes.join(' ');\n}\n//# sourceMappingURL=index.js.map","import React, { createContext, useContext } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport './CustomRowWrapper.css';\nimport { IRowData, RowWrapperProps } from '@patternfly/react-table';\n\nexport type CustomRowWrapperContextProps = {\n  activeRow?: string;\n  onRowClick?: (\n    event: React.MouseEvent<HTMLTableRowElement, MouseEvent>,\n    rowIndex?: number,\n    row?: IRowData\n  ) => void;\n  rowDataTestId?: string;\n  loggedInUser?: string;\n};\n\nconst CustomRowWrapperContext = createContext<CustomRowWrapperContextProps>({\n  activeRow: '',\n  onRowClick: () => '',\n  loggedInUser: '',\n});\n\nexport const CustomRowWrapperProvider = CustomRowWrapperContext.Provider;\n\nexport const CustomRowWrapper = (\n  rowWrapperProps: RowWrapperProps\n): JSX.Element => {\n  const { activeRow, onRowClick, rowDataTestId } = useContext(\n    CustomRowWrapperContext\n  );\n  const { trRef, className, rowProps, row, ...props } = rowWrapperProps || {};\n  const { rowIndex } = rowProps || {};\n  const { isExpanded, originalData } = row || {};\n\n  return (\n    <tr\n      data-testid={rowDataTestId}\n      tabIndex={0}\n      ref={typeof trRef === 'function' ? undefined : trRef}\n      className={css(\n        className,\n        'pf-c-table-row__item',\n        activeRow &&\n          activeRow === originalData?.rowId &&\n          'pf-m-selected pf-m-selectable'\n      )}\n      hidden={isExpanded !== undefined && !isExpanded}\n      onClick={(event) => onRowClick && onRowClick(event, rowIndex, row)}\n      {...props}\n    />\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport {\n  TableHeader,\n  Table as PFTable,\n  TableBody,\n  TableProps as PFTableProps,\n  HeaderProps,\n  TableBodyProps,\n} from '@patternfly/react-table';\nimport { css } from '@patternfly/react-styles';\nimport {\n  CustomRowWrapper,\n  CustomRowWrapperProvider,\n  CustomRowWrapperContextProps,\n} from './CustomRowWrapper';\n\nexport type MASTableProps = CustomRowWrapperContextProps & {\n  tableProps: Omit<PFTableProps, 'children'> & {\n    shouldDefaultCustomRowWrapper?: boolean;\n  };\n  tableHeaderProps?: Omit<HeaderProps, 'children'>;\n  tableBodyProps?: Omit<TableBodyProps, 'children'>;\n  children?: React.ReactNode;\n};\n\nconst MASTable: FunctionComponent<MASTableProps> = ({\n  tableProps,\n  tableHeaderProps,\n  tableBodyProps,\n  children,\n  activeRow,\n  onRowClick,\n  rowDataTestId,\n  loggedInUser,\n}) => {\n  const {\n    cells,\n    rows,\n    actionResolver,\n    onSort,\n    sortBy,\n    'aria-label': ariaLabel,\n    variant,\n    className,\n    shouldDefaultCustomRowWrapper = false,\n    ...restProps\n  } = tableProps;\n\n  /**\n   * Handle CustomRowWrapper\n   */\n  if (shouldDefaultCustomRowWrapper) {\n    restProps['rowWrapper'] = CustomRowWrapper;\n  }\n\n  return (\n    <CustomRowWrapperProvider\n      value={{\n        activeRow,\n        onRowClick,\n        rowDataTestId,\n        loggedInUser,\n      }}\n    >\n      <PFTable\n        className={css(\n          shouldDefaultCustomRowWrapper && 'mas--table-view__table',\n          className\n        )}\n        cells={cells}\n        variant={variant}\n        rows={rows}\n        aria-label={ariaLabel}\n        actionResolver={actionResolver}\n        onSort={onSort}\n        sortBy={sortBy}\n        {...restProps}\n      >\n        <TableHeader {...tableHeaderProps} />\n        <TableBody {...tableBodyProps} />\n        {children}\n      </PFTable>\n    </CustomRowWrapperProvider>\n  );\n};\n\nexport { MASTable };\n","import React from 'react';\nimport {\n  ToolbarContent,\n  Toolbar,\n  ToolbarProps,\n  ToolbarItemProps as PFToolbarItemProps,\n  ToolbarToggleGroup,\n  ToolbarItem,\n  ToolbarToggleGroupProps,\n} from '@patternfly/react-core';\n\nexport type ToolbarItemProps = Omit<PFToolbarItemProps, 'children'> & {\n  item: React.ReactElement;\n};\nexport type MASToolbarProps = {\n  toolbarProps: Omit<ToolbarProps, 'children' | 'ref'>;\n  toggleGroupProps?: Omit<ToolbarToggleGroupProps, 'children'>;\n  toggleGroupItems?: React.ReactNode;\n  toolbarItems?: ToolbarItemProps[];\n};\n\nconst MASToolbar: React.FunctionComponent<MASToolbarProps> = ({\n  toolbarProps,\n  toggleGroupProps,\n  toolbarItems,\n  toggleGroupItems,\n}) => {\n  const {\n    id,\n    clearAllFilters,\n    collapseListedFiltersBreakpoint = 'md',\n    inset,\n    ...restToolbarProps\n  } = toolbarProps;\n\n  return (\n    <>\n      <Toolbar\n        id={id}\n        clearAllFilters={clearAllFilters}\n        inset={inset}\n        collapseListedFiltersBreakpoint={collapseListedFiltersBreakpoint}\n        {...restToolbarProps}\n      >\n        <ToolbarContent>\n          {toggleGroupProps && (\n            <ToolbarToggleGroup\n              {...toggleGroupProps}\n              toggleIcon={toggleGroupProps.toggleIcon}\n            >\n              {toggleGroupItems}\n            </ToolbarToggleGroup>\n          )}\n          {toolbarItems?.map((toolbarItem, index) => {\n            const {\n              key = 'mas',\n              variant,\n              className,\n              id,\n              alignment,\n              item,\n              ...restItemProps\n            } = toolbarItem;\n            return (\n              <ToolbarItem\n                key={`${key}-${index}`}\n                variant={variant}\n                className={className}\n                id={id}\n                alignment={alignment}\n                {...restItemProps}\n              >\n                {item}\n              </ToolbarItem>\n            );\n          })}\n        </ToolbarContent>\n      </Toolbar>\n    </>\n  );\n};\n\nexport { MASToolbar };\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button,\n  ButtonVariant,\n  InputGroup,\n  TextInput,\n  ToolbarFilter,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { MASToolbar, ToolbarItemProps, MASPagination } from '@app/components';\n\nexport type TopicsToolbarProps = {\n  total: number;\n  page: number;\n  perPage: number;\n  setFilteredValue: (value: string) => void;\n  filteredValue: string;\n  onCreateTopic?: () => void;\n};\n\nconst TopicsToolbar: React.FC<TopicsToolbarProps> = ({\n  total = 0,\n  page,\n  perPage,\n  setFilteredValue,\n  filteredValue = '',\n  onCreateTopic,\n}) => {\n  const { t } = useTranslation();\n  const [topicInputValue, setTopicInputValue] = useState<string>('');\n\n  const onClear = () => {\n    setFilteredValue('');\n  };\n\n  const onChangeInput = (value: string) => {\n    setTopicInputValue(value);\n  };\n\n  const onSearch = () => {\n    setFilteredValue(topicInputValue);\n    setTopicInputValue('');\n  };\n\n  const onDeleteChip = () => {\n    setFilteredValue('');\n  };\n\n  const toggleGroupItems = (\n    <>\n      <ToolbarFilter\n        chips={filteredValue ? [filteredValue] : []}\n        deleteChip={onDeleteChip}\n        categoryName={''}\n      >\n        <InputGroup>\n          <TextInput\n            name='searchName'\n            id='search-topics-input'\n            type='search'\n            aria-label={t('topic.topic_search_input')}\n            placeholder={t('common.search')}\n            value={topicInputValue}\n            onChange={onChangeInput}\n          />\n          <Button\n            variant={ButtonVariant.control}\n            isDisabled={topicInputValue.length ? false : true}\n            onClick={onSearch}\n            aria-label={t('topic.topic_search')}\n          >\n            <SearchIcon />\n          </Button>\n        </InputGroup>\n      </ToolbarFilter>\n    </>\n  );\n  const toolbarItems: ToolbarItemProps[] = [\n    {\n      item: (\n        <Button\n          id='topic-list-create-topic-button'\n          className='topics-per-page'\n          data-testid='actionCreateTopic'\n          onClick={onCreateTopic}\n        >\n          {t('topic.create_topic')}\n        </Button>\n      ),\n    },\n  ];\n\n  if (total > 0) {\n    toolbarItems.push({\n      item: (\n        <MASPagination\n          widgetId='consumer-group-pagination-options-menu-top'\n          itemCount={total}\n          page={page}\n          perPage={perPage}\n          titles={{\n            paginationTitle: t('common.minimal_pagination'),\n            perPageSuffix: t('common.per_page_suffix'),\n            toFirstPage: t('common.to_first_page'),\n            toPreviousPage: t('common.to_previous_page'),\n            toLastPage: t('common.to_last_page'),\n            toNextPage: t('common.to_next_page'),\n            optionsToggle: t('common.options_toggle'),\n            currPage: t('common.curr_page'),\n          }}\n        />\n      ),\n      variant: 'pagination',\n      alignment: { default: 'alignRight' },\n    });\n  }\n\n  return (\n    <MASToolbar\n      toolbarProps={{\n        id: 'instance-toolbar',\n        clearAllFilters: onClear,\n        collapseListedFiltersBreakpoint: 'md',\n        inset: { xl: 'insetLg' },\n      }}\n      toggleGroupProps={{ toggleIcon: '', breakpoint: 'md' }}\n      toggleGroupItems={toggleGroupItems}\n      toolbarItems={toolbarItems}\n    />\n  );\n};\n\nexport { TopicsToolbar };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { PaginationVariant } from '@patternfly/react-core';\nimport {\n  TableVariant,\n  sortable,\n  IRowData,\n  OnSort,\n  ISortBy,\n} from '@patternfly/react-table';\nimport { useBasename } from '@rhoas/app-services-ui-shared';\nimport {\n  MASTable,\n  MASPagination,\n  EmptyState,\n  MASEmptyStateVariant,\n} from '@app/components';\nimport { Topic } from '@rhoas/kafka-instance-sdk';\nimport { TopicsToolbar, TopicsToolbarProps } from './TopicsToolbar';\nimport { convertRetentionSize, convertRetentionTime } from '@app/utils';\nimport { ModalType, useModal } from '@rhoas/app-services-ui-shared';\n\nexport type TopicsTableProps = TopicsToolbarProps & {\n  topicItems: Topic[];\n  rowDataTestId?: string;\n  filteredValue: string;\n  onEdit?: (topicName?: string | undefined) => void;\n  onDeleteTopic?: () => void;\n  refreshTopics: () => void;\n  onSort: OnSort;\n  sortBy: ISortBy;\n};\n\nconst TopicsTable: React.FC<TopicsTableProps> = ({\n  total,\n  page,\n  perPage,\n  setFilteredValue,\n  filteredValue,\n  onCreateTopic,\n  topicItems,\n  rowDataTestId,\n  onEdit,\n  onDeleteTopic,\n  refreshTopics,\n  onSort,\n  sortBy,\n}) => {\n  const { t } = useTranslation();\n  const { showModal } = useModal<ModalType.KafkaDeleteTopic>();\n  const { getBasename } = useBasename() || { getBasename: () => '' };\n  const basename = getBasename();\n\n  const tableColumns = [\n    { title: t('common.name') },\n    { title: t('common.partitions'), transforms: [sortable] },\n    { title: t('topic.retention_time'), transforms: [sortable] },\n    { title: t('topic.retention_size'), transforms: [sortable] },\n  ];\n\n  const onDelete = (topicName: string) => {\n    showModal(ModalType.KafkaDeleteTopic, {\n      topicName,\n      onDeleteTopic,\n      refreshTopics,\n    });\n  };\n\n  const onSelectKebabDropdownOption = (\n    //event: React.MouseEvent<HTMLElement>,\n    originalData: Topic,\n    action: string\n  ) => {\n    const { name = '' } = originalData;\n    if (action === 'delete') {\n      onDelete(name);\n    } else if (action === 'edit') {\n      onEdit && onEdit(name);\n    }\n    // Set focus back on previous selected element i.e. kebab button\n    //event?.target?.parentElement?.parentElement?.previousSibling?.focus();\n  };\n\n  const actionResolver = (rowData: IRowData) => {\n    const originalData: Topic = rowData.originalData;\n    const resolver = [\n      {\n        title: t('common.delete'),\n        ['data-testid']: 'tableTopics-actionDelete',\n        onClick: () => onSelectKebabDropdownOption(originalData, 'delete'),\n      },\n      {\n        title: t('common.edit'),\n        ['data-testid']: 'tableTopics-actionEdit',\n        onClick: () => onSelectKebabDropdownOption(originalData, 'edit'),\n      },\n    ];\n    return resolver;\n  };\n\n  const preparedTableCells = () => {\n    const tableRow: (IRowData | string[])[] | undefined = [];\n    topicItems?.map((row: IRowData) => {\n      const { name, partitions, config } = row;\n\n      tableRow.push({\n        cells: [\n          {\n            title: (\n              <Link\n                data-testid='tableTopics-linkTopic'\n                to={`${basename}/topics/${name}`}\n              >\n                {name}\n              </Link>\n            ),\n          },\n          partitions?.length,\n          convertRetentionTime(\n            Number(\n              config?.filter((element) => element.key === 'retention.ms')[0]\n                ?.value || 0\n            )\n          ),\n          convertRetentionSize(\n            Number(\n              config?.filter((element) => element.key === 'retention.bytes')[0]\n                ?.value || 0\n            )\n          ),\n        ],\n        originalData: row,\n      });\n    });\n    return tableRow;\n  };\n\n  const rows = preparedTableCells();\n\n  return (\n    <>\n      <TopicsToolbar\n        total={total}\n        page={page}\n        perPage={perPage}\n        onCreateTopic={onCreateTopic}\n        setFilteredValue={setFilteredValue}\n        filteredValue={filteredValue}\n      />\n      <MASTable\n        tableProps={{\n          cells: tableColumns,\n          rows,\n          'aria-label': t('topic.topic_list_table'),\n          actionResolver: actionResolver,\n          shouldDefaultCustomRowWrapper: true,\n          variant: TableVariant.compact,\n          onSort,\n          sortBy,\n        }}\n        rowDataTestId={rowDataTestId || 'tableTopics-row'}\n      />\n      {topicItems?.length < 1 && filteredValue.length > 0 && (\n        <EmptyState\n          emptyStateProps={{\n            variant: MASEmptyStateVariant.NoResult,\n          }}\n          titleProps={{\n            title: t('common.no_results_title'),\n          }}\n          emptyStateBodyProps={{\n            body: t('common.no_results_body'),\n          }}\n        />\n      )}\n      {total > 0 && (\n        <MASPagination\n          widgetId='consumer-group-pagination-options-menu-bottom'\n          itemCount={total}\n          variant={PaginationVariant.bottom}\n          page={page}\n          perPage={perPage}\n          titles={{\n            paginationTitle: t('common.full_pagination'),\n            perPageSuffix: t('common.per_page_suffix'),\n            toFirstPage: t('common.to_first_page'),\n            toPreviousPage: t('common.to_previous_page'),\n            toLastPage: t('common.to_last_page'),\n            toNextPage: t('common.to_next_page'),\n            optionsToggle: t('common.options_toggle'),\n            currPage: t('common.curr_page'),\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport { TopicsTable };\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n  AlertVariant,\n  Card,\n  PageSection,\n  PageSectionVariants,\n} from '@patternfly/react-core';\nimport { useTimeout } from '@app/hooks/useTimeOut';\nimport { TopicsTable } from './components';\nimport {\n  EmptyState,\n  MASEmptyStateVariant,\n  MASLoading,\n  usePaginationParams,\n} from '@app/components';\nimport { getTopics, OrderKey } from '@app/services';\nimport { ConfigContext, useFederated } from '@app/contexts';\nimport { Topic } from '@rhoas/kafka-instance-sdk';\nimport { useAlert, useBasename } from '@rhoas/app-services-ui-shared';\nimport './Topics.css';\nimport { ISortBy, OnSort, SortByDirection } from '@patternfly/react-table';\nimport { isAxiosError } from '@app/utils/axios';\n\nexport type ITopic = {\n  name: string;\n  replicas: number;\n  partitions: number;\n};\n\nexport type ITopicProps = {\n  rows: ITopic[];\n};\n\nconst Topics: React.FC = () => {\n  const { onError } = useFederated() || {};\n  const { t } = useTranslation();\n  const { addAlert } = useAlert() || {\n    addAlert: () => {\n      // No-op\n    },\n  };\n  const config = useContext(ConfigContext);\n  const { page = 1, perPage = 10 } = usePaginationParams() || {};\n  const history = useHistory();\n  const { getBasename } = useBasename() || { getBasename: () => '' };\n  const basename = getBasename();\n\n  const [topicItems, setTopicItems] = useState<Topic[]>();\n  const [searchTopicName, setSearchTopicName] = useState<string>('');\n  const [offset, setOffset] = useState<number>(0);\n  const [order, setOrder] = useState<SortByDirection>();\n  const [orderKey, setOrderKey] = useState<OrderKey>();\n  const [sortBy, setSortBy] = useState<ISortBy>({ index: 0, direction: 'asc' });\n\n  useEffect(() => {\n    fetchTopic();\n  }, [searchTopicName, order, orderKey]);\n\n  useTimeout(() => fetchTopic(), 5000);\n\n  useEffect(() => {\n    const offset = perPage * (page - 1);\n    setOffset(offset);\n  }, [page, perPage]);\n\n  const onClickCreateTopic = () => {\n    history.push(`${basename}/topic/create`);\n  };\n\n  const onEditTopic = (topicName: string | undefined) => {\n    history.push(`${basename}/topic/update/${topicName}`);\n  };\n\n  const onEdit = (topicName: string | undefined) => {\n    onEditTopic && onEditTopic(topicName);\n  };\n\n  const onSort: OnSort = (_event, index, direction) => {\n    const sortableCols = {\n      '0': 'name',\n      '1': 'partitions',\n      '2': 'retention.ms',\n      '3': 'retention.bytes',\n    };\n\n    setOrderKey(sortableCols[index]);\n    setOrder(direction);\n    setSortBy({ index, direction });\n  };\n\n  const fetchTopic = async () => {\n    try {\n      await getTopics(\n        config,\n        100,\n        perPage,\n        searchTopicName,\n        offset,\n        order,\n        orderKey\n      ).then((response) => {\n        setTopicItems(response?.items);\n      });\n    } catch (err) {\n      //TODO: Update the api to allow suppress alerts if the application does not want to show them as well.\n      let message: string | undefined;\n      let code: number | undefined;\n      if (err && isAxiosError(err)) {\n        code = err.response?.data.code;\n        message = err.response?.data.error_message;\n      }\n      if (onError && code === 401) {\n        onError(code, message);\n      } else {\n        addAlert({\n          title: message || '',\n          variant: AlertVariant.danger,\n        });\n      }\n    }\n  };\n\n  const renderTopicsTable = () => {\n    if (topicItems === undefined) {\n      return (\n        <PageSection\n          className='kafka-ui-m-full-height'\n          variant={PageSectionVariants.light}\n          padding={{ default: 'noPadding' }}\n        >\n          <MASLoading />\n        </PageSection>\n      );\n    } else if (topicItems.length < 1 && searchTopicName.length < 1) {\n      return (\n        <EmptyState\n          emptyStateProps={{\n            variant: MASEmptyStateVariant.NoItems,\n            'data-ouia-page-id': 'emptyStateTopics',\n          }}\n          titleProps={{\n            title: t('topic.empty_topics_title'),\n          }}\n          emptyStateBodyProps={{\n            body: t('topic.empty_topics_body'),\n          }}\n          buttonProps={{\n            title: t('topic.create_topic'),\n            onClick: onClickCreateTopic,\n            'data-testid': 'actionCreateTopic',\n          }}\n        />\n      );\n    } else if (topicItems) {\n      return (\n        <TopicsTable\n          total={topicItems.length || 0}\n          page={page}\n          perPage={perPage}\n          onCreateTopic={onClickCreateTopic}\n          topicItems={\n            searchTopicName\n              ? topicItems?.slice(0, perPage)\n              : topicItems?.slice(offset, offset + perPage)\n          }\n          filteredValue={searchTopicName}\n          setFilteredValue={setSearchTopicName}\n          refreshTopics={fetchTopic}\n          onEdit={onEdit}\n          onSort={onSort}\n          sortBy={sortBy}\n        />\n      );\n    }\n    return <></>;\n  };\n\n  return (\n    <>\n      <Card className='kafka-ui-m-full-height' data-ouia-page-id='tableTopics'>\n        {renderTopicsTable()}\n      </Card>\n    </>\n  );\n};\n\nexport { Topics };\nexport default Topics;\n","import { AxiosResponse } from 'axios';\nimport {\n  ConfigEntry,\n  TopicsApi,\n  Topic,\n  TopicSettings,\n  TopicsList,\n} from '@rhoas/kafka-instance-sdk';\nimport { Configuration } from '@rhoas/kafka-instance-sdk';\nimport { IConfiguration } from '@app/contexts';\nimport { IAdvancedTopic } from '@app/modules/Topics/components/CreateTopicWizard/CreateTopicWizard';\nimport { SortByDirection } from '@patternfly/react-table';\n\nexport enum OrderKey {\n  name = 'name',\n  partitions = 'partitions',\n  retentionMs = 'retention.ms',\n  retentionSize = 'retention.bytes',\n}\n\nexport const getTopics = async (\n  config: IConfiguration | undefined,\n  limit?: number,\n  size?: number,\n  filter?: string,\n  offset?: number | undefined,\n  order: SortByDirection = SortByDirection.asc,\n  orderKey?: OrderKey\n): Promise<TopicsList> => {\n  const accessToken = await config?.getToken();\n\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<TopicsList> = await api.getTopics(\n    offset,\n    limit,\n    size,\n    filter,\n    undefined,\n    order,\n    orderKey\n  );\n  return response.data;\n};\n\nexport const getTopicDetail = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<IAdvancedTopic> => {\n  const accessToken = await config?.getToken();\n\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const { data } = await api.getTopic(topicName);\n\n  return convertTopicResponse(data);\n};\n\nconst convertTopicResponse = (topic: Topic): IAdvancedTopic => {\n  const topicObj: IAdvancedTopic = { name: '', numPartitions: '0' };\n  if (topic && topic.name) topicObj.name = topic.name;\n\n  topic.config?.forEach((config) => {\n    if (config.key) {\n      topicObj[config.key] = config.value;\n    }\n  });\n\n  topicObj.numPartitions = topic?.partitions?.length.toString() || '0';\n\n  topicObj.replicationFactor =\n    (topic?.partitions && topic?.partitions[0].replicas?.length.toString()) ||\n    '0';\n\n  return topicObj;\n};\n\nexport const updateTopicModel = async (\n  topicName: string,\n  topicSettings: TopicSettings,\n  config: IConfiguration | undefined\n): Promise<number> => {\n  const accessToken = await config?.getToken();\n\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<Topic> = await api.updateTopic(\n    topicName,\n    topicSettings\n  );\n  return response.status;\n};\n\nexport const getTopic = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<Topic> => {\n  const accessToken = await config?.getToken();\n\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response = await api.getTopic(topicName);\n\n  const answer = response.data;\n  answer.config = answer.config || ([] as ConfigEntry[]);\n  answer.config.push({\n    key: 'replicationFactor',\n    value: response.data?.partitions\n      ?.map((p) => p.replicas?.length)\n      .reduce(\n        (previousValue = 0, currentValue = 0) => previousValue + currentValue\n      )\n      ?.toString(),\n  });\n  return response.data;\n};\n\nexport const deleteTopic = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<void> => {\n  const accessToken = await config?.getToken();\n\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  await api.deleteTopic(topicName);\n  return;\n};\n","import { AxiosError } from 'axios';\n\nexport type ErrorData = {\n  code: number;\n  error_message: string;\n};\n\nexport const isAxiosError = (\n  error: unknown\n): error is AxiosError<ErrorData> => {\n  return (error as AxiosError<ErrorData>) !== undefined;\n};\n","export interface FederatedProps {\n  onError: (errorCode: number, message: string) => void;\n}\n\nexport const convertRetentionTime = (milliseconds: number): string => {\n  let convertedValue;\n  if (milliseconds === -1) {\n    return 'Unlimited';\n  } else if (milliseconds < 60000) {\n    if (milliseconds === 1) return milliseconds + ' ' + 'millisecond';\n    else return milliseconds + ' ' + 'milliseconds';\n  } else if (milliseconds >= 60000 && milliseconds < 3.6e6) {\n    convertedValue = milliseconds / 60000;\n    convertedValue = Math.round(convertedValue * 100) / 100;\n    if (convertedValue === 1) return convertedValue + ' ' + 'minute';\n    else return convertedValue + ' ' + 'minutes';\n  } else if (milliseconds >= 3.6e6 && milliseconds < 1.728e8) {\n    convertedValue = milliseconds / 3.6e6;\n    convertedValue = Math.round(convertedValue * 100) / 100;\n    if (convertedValue === 1) return convertedValue + ' ' + 'hour';\n    else return convertedValue + ' ' + 'hours';\n  } else if (milliseconds >= 1.728e8) {\n    convertedValue = milliseconds / 8.64e7;\n    convertedValue = Math.round(convertedValue * 100) / 100;\n    return convertedValue + ' ' + 'days';\n  }\n  return milliseconds.toString();\n};\n\nexport const convertRetentionSize = (byte: number): string => {\n  let convertedByteValue;\n  if (byte === -1) {\n    return 'Unlimited';\n  } else if (Math.abs(byte) < 1024) {\n    if (byte === 1) return byte + ' ' + 'byte';\n    else return byte + ' ' + 'bytes';\n  } else if (Math.abs(byte) >= 1024 && Math.abs(byte) < 1048576) {\n    convertedByteValue = byte / 1024;\n    if (convertedByteValue === 1) return convertedByteValue + ' ' + 'kibibyte';\n    else return convertedByteValue + ' ' + 'kibibytes';\n  } else if (Math.abs(byte) >= 1048576 && Math.abs(byte) < 1073741824) {\n    convertedByteValue = byte / 1048576;\n    if (convertedByteValue === 1) return convertedByteValue + ' ' + 'mebibyte';\n    else return convertedByteValue + ' ' + 'mebibytes';\n  } else if (Math.abs(byte) >= 1073741824 && Math.abs(byte) < 1.0995116e12) {\n    convertedByteValue = byte / 1073741824;\n    if (convertedByteValue === 1) return convertedByteValue + ' ' + 'gibibyte';\n    else return convertedByteValue + ' ' + 'gibibytes';\n  } else if (Math.abs(byte) >= 1.0995116e12) {\n    convertedByteValue = byte / 1.0995116e12;\n    if (convertedByteValue === 1) return convertedByteValue + ' ' + 'tebibyte';\n    else return convertedByteValue + ' ' + 'tebibytes';\n  }\n  return byte.toString();\n};\n"],"names":["css","args","classes","hasOwn","hasOwnProperty","filter","Boolean","forEach","arg","argType","push","Array","isArray","length","inner","key","call","join","CustomRowWrapperContext","createContext","activeRow","onRowClick","loggedInUser","CustomRowWrapperProvider","Provider","CustomRowWrapper","rowWrapperProps","useContext","rowDataTestId","trRef","className","rowProps","row","props","rowIndex","isExpanded","originalData","tabIndex","ref","undefined","rowId","hidden","onClick","event","MASTable","tableProps","tableHeaderProps","tableBodyProps","children","cells","rows","actionResolver","onSort","sortBy","ariaLabel","variant","shouldDefaultCustomRowWrapper","restProps","value","TableHeader","TableBody","MASToolbar","toolbarProps","toggleGroupProps","toolbarItems","toggleGroupItems","id","clearAllFilters","collapseListedFiltersBreakpoint","inset","restToolbarProps","Toolbar","ToolbarContent","ToolbarToggleGroup","toggleIcon","map","toolbarItem","index","alignment","item","restItemProps","ToolbarItem","TopicsToolbar","total","page","perPage","setFilteredValue","filteredValue","onCreateTopic","t","useTranslation","useState","topicInputValue","setTopicInputValue","ToolbarFilter","chips","deleteChip","categoryName","InputGroup","TextInput","name","type","placeholder","onChange","Button","ButtonVariant","isDisabled","SearchIcon","MASPagination","widgetId","itemCount","titles","paginationTitle","perPageSuffix","toFirstPage","toPreviousPage","toLastPage","toNextPage","optionsToggle","currPage","default","xl","breakpoint","TopicsTable","tableRow","topicItems","onEdit","onDeleteTopic","refreshTopics","showModal","useModal","basename","getBasename","useBasename","tableColumns","title","transforms","sortable","onSelectKebabDropdownOption","action","topicName","ModalType","partitions","config","Link","to","Number","element","rowData","TableVariant","EmptyState","emptyStateProps","titleProps","emptyStateBodyProps","body","PaginationVariant","Topics","onError","addAlert","useAlert","history","useHistory","setTopicItems","searchTopicName","setSearchTopicName","offset","setOffset","order","setOrder","orderKey","setOrderKey","direction","setSortBy","useEffect","fetchTopic","onClickCreateTopic","onEditTopic","_event","then","response","items","message","code","data","error_message","AlertVariant","Card","PageSection","PageSectionVariants","padding","MASLoading","buttonProps","slice","OrderKey","getTopics","limit","size","SortByDirection","Promise","getToken","accessToken","TopicsApi","Configuration","basePath","getTopicDetail","getTopic","convertTopicResponse","topic","topicObj","numPartitions","toString","replicationFactor","replicas","updateTopicModel","topicSettings","updateTopic","status","answer","p","reduce","previousValue","currentValue","deleteTopic","isAxiosError","error","convertRetentionTime","milliseconds","convertedValue","Math","round","convertRetentionSize","byte","convertedByteValue","abs"],"sourceRoot":""}