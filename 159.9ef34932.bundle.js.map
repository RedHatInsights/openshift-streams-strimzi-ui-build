{"version":3,"sources":["webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/ellipsis-v-icon.js","webpack://kafka-ui/./src/modules/Topics/components/TopicsTable/TopicsToolbar.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicsTable/TopicsTable.tsx","webpack://kafka-ui/./src/modules/Topics/Topics.tsx","webpack://kafka-ui/./src/modules/Topics/pages/MainView/MainView.tsx"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","TopicsToolbar","total","page","perPage","setFilteredValue","filteredValue","onCreateTopic","t","useTranslation","useState","topicInputValue","setTopicInputValue","toggleGroupItems","ToolbarFilter","chips","deleteChip","categoryName","InputGroup","TextInput","id","type","placeholder","value","onChange","Button","variant","ButtonVariant","isDisabled","length","onClick","SearchIcon","toolbarItems","item","className","push","MASPagination","widgetId","itemCount","titles","paginationTitle","perPageSuffix","toFirstPage","toPreviousPage","toLastPage","toNextPage","optionsToggle","currPage","alignment","default","MASToolbar","toolbarProps","clearAllFilters","collapseListedFiltersBreakpoint","inset","xl","toggleGroupProps","toggleIcon","breakpoint","TopicsTable","tableRow","topicItems","rowDataTestId","onEdit","onDeleteTopic","refreshTopics","showModal","onConnectToRoute","getConnectToRoutePath","tableColumns","title","transforms","sortable","onSelectKebabDropdownOption","event","originalData","action","topicName","target","parentElement","previousSibling","focus","rows","map","row","partitions","config","cells","Link","to","e","preventDefault","Number","filter","element","key","MASTable","tableProps","actionResolver","rowData","shouldDefaultCustomRowWrapper","TableVariant","EmptyState","emptyStateProps","titleProps","emptyStateBodyProps","body","PaginationVariant","Topics","onEditTopic","dispatchKafkaAction","onError","addAlert","useAlert","useContext","location","useLocation","searchParams","URLSearchParams","search","parseInt","get","topics","setTopics","setTopicItems","searchTopicName","setSearchTopicName","offset","setOffset","useEffect","fetchTopic","then","response","items","data","code","error_message","AlertVariant","Card","undefined","PageSection","PageSectionVariants","padding","MASLoading","buttonProps","count","slice","MainView","activeTab","kafkaPageLink","kafkaName","activeTabKey","setActiveTabKey","contentRefConsumerGroups","contentRefTopics","mainBreadcrumbs","Breadcrumb","BreadcrumbItem","isActive","Level","Title","headingLevel","iconPosition","Tabs","activeKey","onSelect","_event","tabIndex","Tab","TabTitleText","eventKey","tabContentRef","tabContentId","isFilled","TabContent","ref","hidden","ConsumerGroups","consumerGroupByTopic"],"mappings":"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","file":"159.9ef34932.bundle.js","sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.EllipsisVIconConfig = {\n  name: 'EllipsisVIcon',\n  height: 512,\n  width: 192,\n  svgPath: 'M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.EllipsisVIcon = require('../createIcon').createIcon(exports.EllipsisVIconConfig);\nexports[\"default\"] = exports.EllipsisVIcon;","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Button,\n  ButtonVariant,\n  InputGroup,\n  TextInput,\n  ToolbarFilter,\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport { MASToolbar, ToolbarItemProps, MASPagination } from \"@app/components\";\n\nexport type TopicsToolbarProps = {\n  total: number;\n  page: number;\n  perPage: number;\n  setFilteredValue: (value: string) => void;\n  filteredValue: string;\n  onCreateTopic?: () => void;\n};\n\nconst TopicsToolbar: React.FC<TopicsToolbarProps> = ({\n  total = 0,\n  page,\n  perPage,\n  setFilteredValue,\n  filteredValue = \"\",\n  onCreateTopic,\n}) => {\n  const { t } = useTranslation();\n  const [topicInputValue, setTopicInputValue] = useState<string>(\"\");\n\n  const onClear = () => {\n    setFilteredValue(\"\");\n  };\n\n  const onChangeInput = (value: string) => {\n    setTopicInputValue(value);\n  };\n\n  const onSearch = () => {\n    setFilteredValue(topicInputValue);\n    setTopicInputValue(\"\");\n  };\n\n  const onDeleteChip = () => {\n    setFilteredValue(\"\");\n  };\n\n  const toggleGroupItems = (\n    <>\n      <ToolbarFilter\n        chips={filteredValue ? [filteredValue] : []}\n        deleteChip={onDeleteChip}\n        categoryName={\"\"}\n      >\n        <InputGroup>\n          <TextInput\n            name=\"searchName\"\n            id=\"search-topics-input\"\n            type=\"search\"\n            aria-label={t(\"topic.topic_search_input\")}\n            placeholder={t(\"common.search\")}\n            value={topicInputValue}\n            onChange={onChangeInput}\n          />\n          <Button\n            variant={ButtonVariant.control}\n            isDisabled={topicInputValue.length ? false : true}\n            onClick={onSearch}\n            aria-label={t(\"topic.topic_search\")}\n          >\n            <SearchIcon />\n          </Button>\n        </InputGroup>\n      </ToolbarFilter>\n    </>\n  );\n\n  const toolbarItems: ToolbarItemProps[] = [\n    {\n      item: (\n        <Button\n          id=\"topic-list-create-topic-button\"\n          className=\"topics-per-page\"\n          data-testid=\"tabTopics-actionCreate\"\n          onClick={onCreateTopic}\n        >\n          {t(\"topic.create_topic\")}\n        </Button>\n      ),\n    },\n  ];\n\n  if (total > 0) {\n    toolbarItems.push({\n      item: (\n        <MASPagination\n          widgetId=\"consumer-group-pagination-options-menu-top\"\n          itemCount={total}\n          page={page}\n          perPage={perPage}\n          titles={{\n            paginationTitle: t(\"common.minimal_pagination\"),\n            perPageSuffix: t(\"common.per_page_suffix\"),\n            toFirstPage: t(\"common.to_first_page\"),\n            toPreviousPage: t(\"common.to_previous_page\"),\n            toLastPage: t(\"common.to_last_page\"),\n            toNextPage: t(\"common.to_next_page\"),\n            optionsToggle: t(\"common.options_toggle\"),\n            currPage: t(\"common.curr_page\"),\n          }}\n        />\n      ),\n      variant: \"pagination\",\n      alignment: { default: \"alignRight\" },\n    });\n  }\n\n  return (\n    <MASToolbar\n      toolbarProps={{\n        id: \"instance-toolbar\",\n        clearAllFilters: onClear,\n        collapseListedFiltersBreakpoint: \"md\",\n        inset: { xl: \"insetLg\" },\n      }}\n      toggleGroupProps={{ toggleIcon: \"\", breakpoint: \"md\" }}\n      toggleGroupItems={toggleGroupItems}\n      toolbarItems={toolbarItems}\n    />\n  );\n};\n\nexport { TopicsToolbar };\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { PaginationVariant } from \"@patternfly/react-core\";\nimport { TableVariant, sortable, IRowData } from \"@patternfly/react-table\";\nimport {\n  MASTable,\n  MASPagination,\n  EmptyState,\n  MASEmptyStateVariant,\n} from \"@app/components\";\nimport { Topic } from \"@app/openapi\";\nimport { useFederated } from \"@app/contexts\";\nimport { TopicsToolbar, TopicsToolbarProps } from \"./TopicsToolbar\";\nimport { convertRetentionSize, convertRetentionTime } from \"@app/utils\";\nimport { useRootModalContext, MODAL_TYPES } from \"@app/components\";\n\nexport type TopicsTableProps = TopicsToolbarProps & {\n  topicItems: Topic[];\n  rowDataTestId?: string;\n  filteredValue: string;\n  onEdit?: (topicName?: string | undefined) => void;\n  onDeleteTopic?: () => void;\n  refreshTopics: () => void;\n};\n\nconst TopicsTable: React.FC<TopicsTableProps> = ({\n  total,\n  page,\n  perPage,\n  setFilteredValue,\n  filteredValue,\n  onCreateTopic,\n  topicItems,\n  rowDataTestId,\n  onEdit,\n  onDeleteTopic,\n  refreshTopics,\n}) => {\n  const { t } = useTranslation();\n  const { showModal } = useRootModalContext();\n  const { onConnectToRoute, getConnectToRoutePath } = useFederated();\n\n  const tableColumns = [\n    { title: t(\"common.name\") },\n    { title: t(\"common.partitions\"), transforms: [sortable] },\n    { title: t(\"topic.retention_time\"), transforms: [sortable] },\n    { title: t(\"topic.retention_size\"), transforms: [sortable] },\n  ];\n\n  const onDelete = (topicName: string) => {\n    showModal(MODAL_TYPES.DELETE_TOPIC, {\n      topicName,\n      onDeleteTopic,\n      refreshTopics,\n    });\n  };\n\n  const onSelectKebabDropdownOption = (\n    event: any,\n    originalData: Topic,\n    action: string\n  ) => {\n    const { name = \"\" } = originalData;\n    if (action === \"delete\") {\n      onDelete(name);\n    } else if (action === \"edit\") {\n      onEdit && onEdit(name);\n    }\n    // Set focus back on previous selected element i.e. kebab button\n    event?.target?.parentElement?.parentElement?.previousSibling?.focus();\n  };\n\n  const actionResolver = (rowData: IRowData) => {\n    const originalData: Topic = rowData.originalData;\n    const resolver = [\n      {\n        title: t(\"common.delete\"),\n        [\"data-testid\"]: \"tableTopics-actionDelete\",\n        onClick: (event: any) =>\n          onSelectKebabDropdownOption(event, originalData, \"delete\"),\n      },\n      {\n        title: t(\"common.edit\"),\n        [\"data-testid\"]: \"tableTopics-actionEdit\",\n        onClick: (event: any) =>\n          onSelectKebabDropdownOption(event, originalData, \"edit\"),\n      },\n    ];\n    return resolver;\n  };\n\n  const preparedTableCells = () => {\n    const tableRow: (IRowData | string[])[] | undefined = [];\n    topicItems?.map((row: IRowData) => {\n      const { name, partitions, config } = row;\n      tableRow.push({\n        cells: [\n          {\n            title: (\n              <Link\n                data-testid=\"tableTopics-linkTopic\"\n                to={\n                  (getConnectToRoutePath &&\n                    getConnectToRoutePath(`topics/${name}`, name)) ||\n                  \"\"\n                }\n                onClick={(e) => {\n                  e.preventDefault();\n                  onConnectToRoute && onConnectToRoute(`topics/${name}`);\n                }}\n              >\n                {name}\n              </Link>\n            ),\n          },\n          partitions?.length,\n          convertRetentionTime(\n            Number(\n              config?.filter((element) => element.key === \"retention.ms\")[0]\n                ?.value || 0\n            )\n          ),\n          convertRetentionSize(\n            Number(\n              config?.filter((element) => element.key === \"retention.bytes\")[0]\n                ?.value || 0\n            )\n          ),\n        ],\n        originalData: row,\n      });\n    });\n    return tableRow;\n  };\n\n  const rows = preparedTableCells();\n\n  return (\n    <>\n      <TopicsToolbar\n        total={total}\n        page={page}\n        perPage={perPage}\n        onCreateTopic={onCreateTopic}\n        setFilteredValue={setFilteredValue}\n        filteredValue={filteredValue}\n      />\n      <MASTable\n        tableProps={{\n          cells: tableColumns,\n          rows,\n          \"aria-label\": t(\"topic.topic_list_table\"),\n          actionResolver: actionResolver,\n          shouldDefaultCustomRowWrapper: true,\n          variant: TableVariant.compact,\n        }}\n        rowDataTestId={rowDataTestId || \"tableTopics-row\"}\n      />\n      {topicItems?.length < 1 && filteredValue.length > 0 && (\n        <EmptyState\n          emptyStateProps={{\n            variant: MASEmptyStateVariant.NoResult,\n          }}\n          titleProps={{\n            title: t(\"common.no_results_title\"),\n          }}\n          emptyStateBodyProps={{\n            body: t(\"common.no_results_body\"),\n          }}\n        />\n      )}\n      {total > 0 && (\n        <MASPagination\n          widgetId=\"consumer-group-pagination-options-menu-bottom\"\n          itemCount={total}\n          variant={PaginationVariant.bottom}\n          page={page}\n          perPage={perPage}\n          titles={{\n            paginationTitle: t(\"common.full_pagination\"),\n            perPageSuffix: t(\"common.per_page_suffix\"),\n            toFirstPage: t(\"common.to_first_page\"),\n            toPreviousPage: t(\"common.to_previous_page\"),\n            toLastPage: t(\"common.to_last_page\"),\n            toNextPage: t(\"common.to_next_page\"),\n            optionsToggle: t(\"common.options_toggle\"),\n            currPage: t(\"common.curr_page\"),\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport { TopicsTable };\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  AlertVariant,\n  Card,\n  PageSectionVariants,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { useTimeout } from \"@app/hooks/useTimeOut\";\nimport { TopicsTable } from \"./components\";\nimport { EmptyState, MASEmptyStateVariant, MASLoading } from \"@app/components\";\nimport { getTopics } from \"@app/services\";\nimport { ConfigContext, useFederated } from \"@app/contexts\";\nimport { TopicsList, Topic } from \"@app/openapi\";\nimport { KafkaActions } from \"@app/utils\";\nimport { useAlert } from \"@bf2/ui-shared\";\nimport \"./Topics.css\";\n\nexport type ITopic = {\n  name: string;\n  replicas: number;\n  partitions: number;\n};\n\nexport type ITopicProps = {\n  rows: ITopic[];\n};\n\nexport type TopicsProps = {\n  onCreateTopic?: () => void;\n  onEditTopic?: (topicName?: string | undefined) => void;\n};\n\nexport const Topics: React.FC<TopicsProps> = ({\n  onCreateTopic,\n  onEditTopic,\n}) => {\n  const { dispatchKafkaAction, onError } = useFederated();\n  const { t } = useTranslation();\n  const { addAlert } = useAlert();\n  const config = useContext(ConfigContext);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const page = parseInt(searchParams.get(\"page\") || \"\", 10) || 1;\n  const perPage = parseInt(searchParams.get(\"perPage\") || \"\", 10) || 10;\n\n  const [topics, setTopics] = useState<TopicsList>();\n  const [topicItems, setTopicItems] = useState<Topic[]>();\n  const [searchTopicName, setSearchTopicName] = useState<string>(\"\");\n  const [offset, setOffset] = useState<number>(0);\n\n  useEffect(() => {\n    fetchTopic();\n  }, [searchTopicName]);\n\n  useTimeout(() => fetchTopic(), 5000);\n\n  useEffect(() => {\n    const offset = Number(perPage) * Number(page - 1);\n    setOffset(offset);\n  }, [page, perPage]);\n\n  const onClickCreateTopic = () => {\n    onCreateTopic && onCreateTopic();\n    dispatchKafkaAction && dispatchKafkaAction(KafkaActions.CreateTopic);\n  };\n\n  const fetchTopic = async () => {\n    try {\n      await getTopics(config, searchTopicName).then((response) => {\n        setTopics(response);\n        setTopicItems(response?.items);\n      });\n    } catch (err) {\n      //TODO: Update the api to allow suppress alerts if the application does not want to show them as well.\n      if (onError && err.response.data.code === 401) {\n        onError(err.response.data.code, err.response.data.error_message);\n      } else {\n        addAlert({\n          title: err.response.data.error_message,\n          variant: AlertVariant.danger,\n        });\n      }\n    }\n  };\n\n  const renderTopicsTable = () => {\n    if (topicItems === undefined) {\n      return (\n        <PageSection\n          className=\"kafka-ui-m-full-height\"\n          variant={PageSectionVariants.light}\n          padding={{ default: \"noPadding\" }}\n        >\n          <MASLoading />\n        </PageSection>\n      );\n    } else if (topicItems.length < 1 && searchTopicName.length < 1) {\n      return (\n        <Card className=\"kafka-ui-m-full-height\">\n          <EmptyState\n            emptyStateProps={{\n              variant: MASEmptyStateVariant.NoItems,\n            }}\n            titleProps={{\n              title: t(\"topic.empty_topics_title\"),\n            }}\n            emptyStateBodyProps={{\n              body: t(\"topic.empty_topics_body\"),\n            }}\n            buttonProps={{\n              title: t(\"topic.create_topic\"),\n              onClick: onClickCreateTopic,\n            }}\n          />\n        </Card>\n      );\n    } else if (topicItems) {\n      return (\n        <TopicsTable\n          total={topics?.count || 0}\n          page={page}\n          perPage={perPage}\n          onCreateTopic={onCreateTopic}\n          topicItems={\n            searchTopicName\n              ? topicItems?.slice(0, perPage)\n              : topicItems?.slice(offset, offset + perPage)\n          }\n          filteredValue={searchTopicName}\n          setFilteredValue={setSearchTopicName}\n          refreshTopics={fetchTopic}\n          onEdit={onEditTopic}\n        />\n      );\n    }\n    return <></>;\n  };\n\n  return (\n    <>\n      <Card className=\"kafka-ui-m-full-height\">{renderTopicsTable()}</Card>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  PageSection,\n  PageSectionVariants,\n  Title,\n  Tabs,\n  Level,\n  Tab,\n  TabTitleText,\n  TabContent,\n} from \"@patternfly/react-core\";\nimport EllipsisVIcon from \"@patternfly/react-icons/dist/js/icons/ellipsis-v-icon\";\nimport { Topics, TopicsProps } from \"@app/modules/Topics/Topics\";\nimport { ConsumerGroups } from \"@app/modules/ConsumerGroups\";\nimport { useFederated } from \"@app/contexts\";\nimport \"../style.css\";\n\nexport type MainViewProps = TopicsProps & {\n  activeTab?: number;\n};\n\nexport const MainView: React.FC<MainViewProps> = ({\n  onCreateTopic,\n  onEditTopic,\n  activeTab,\n}) => {\n  const { t } = useTranslation();\n  const { kafkaPageLink, kafkaName } = useFederated();\n\n  const [activeTabKey, setActiveTabKey] = useState(activeTab);\n  const contentRefConsumerGroups = React.createRef<HTMLElement>();\n  const contentRefTopics = React.createRef<HTMLElement>();\n\n  const handleTabClick = (_event, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  const mainBreadcrumbs = (\n    <Breadcrumb>\n      <BreadcrumbItem to={kafkaPageLink || \"#\"}>\n        {t(\"common.kafka_instance\")}\n      </BreadcrumbItem>\n      <BreadcrumbItem to=\"#\" isActive>\n        {kafkaName || t(\"common.kafka_instance_name\")}\n      </BreadcrumbItem>\n    </Breadcrumb>\n  );\n\n  return (\n    <>\n      <section className=\"pf-c-page__main-breadcrumb\">\n        {mainBreadcrumbs}\n      </section>\n\n      <PageSection variant={PageSectionVariants.light}>\n        <Level>\n          <Title headingLevel=\"h1\">\n            {kafkaName ? kafkaName : t(\"common.kafka_instance_name\")}\n          </Title>\n          <Button variant=\"plain\" iconPosition=\"right\">\n            <EllipsisVIcon />\n          </Button>\n        </Level>\n      </PageSection>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: \"noPadding\" }}\n        className=\"pf-c-page__main-tabs\"\n      >\n        <Tabs\n          activeKey={activeTabKey}\n          onSelect={handleTabClick}\n          data-testid=\"pageKafka-tabProperties\"\n          className=\"pf-m-page-insets\"\n        >\n          <Tab\n            title={<TabTitleText>{t(\"topic.topics\")}</TabTitleText>}\n            eventKey={1}\n            data-testid=\"pageKafka-tabTopics\"\n            id=\"topics-tab-section\"\n            aria-label={t(\"topic.topics\")}\n            tabContentRef={contentRefTopics}\n            tabContentId=\"kafka-ui-TabcontentTopicsList\"\n            // className=\"kafka-ui-m-full-height\"\n          ></Tab>\n          <Tab\n            title={\n              <TabTitleText>{t(\"consumerGroup.consumer_groups\")}</TabTitleText>\n            }\n            eventKey={2}\n            data-testid=\"pageKafka-tabConsumers\"\n            id=\"consumer-groups-tab-section\"\n            aria-label={t(\"consumerGroup.consumer_groups\")}\n            tabContentRef={contentRefConsumerGroups}\n            tabContentId=\"kafka-ui-TabcontentConsumersList\"\n            // className='kafka-ui-m-full-height'\n          ></Tab>\n        </Tabs>\n      </PageSection>\n      <PageSection isFilled>\n        <TabContent\n          eventKey={1}\n          ref={contentRefTopics}\n          id=\"kafka-ui-TabcontentTopicsList\"\n          className=\"kafka-ui-m-full-height\"\n          aria-label={t(\"topic.topics\")}\n        >\n          <Topics onCreateTopic={onCreateTopic} onEditTopic={onEditTopic} />\n        </TabContent>\n        <TabContent\n          eventKey={2}\n          ref={contentRefConsumerGroups}\n          id=\"kafka-ui-TabcontentConsumersList\"\n          className=\"kafka-ui-m-full-height\"\n          aria-label={t(\"consumerGroup.consumer_groups\")}\n          hidden\n        >\n          <ConsumerGroups consumerGroupByTopic={false} />\n        </TabContent>\n      </PageSection>\n    </>\n  );\n};\n"],"sourceRoot":""}