{"version":3,"file":"315.5259efaa.bundle.js","mappings":"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","sources":["webpack://kafka-ui/./node_modules/@patternfly/react-styles/dist/esm/index.js","webpack://kafka-ui/./src/components/MASPagination/MASPagination.tsx","webpack://kafka-ui/./src/components/MASTable/CustomRowWrapper.tsx","webpack://kafka-ui/./src/components/MASTable/MASTable.tsx","webpack://kafka-ui/./src/components/MASToolbar/MASToolbar.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicsTable/TopicsToolbar.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicsTable/TopicsTable.tsx","webpack://kafka-ui/./src/modules/Topics/Topics.tsx","webpack://kafka-ui/./src/services/topics.ts"],"sourcesContent":["/** Joins args into a className string\n *\n * @param {any} args list of objects, string, or arrays to reduce\n */\nexport function css(...args) {\n    // Adapted from https://github.com/JedWatson/classnames/blob/master/index.js\n    const classes = [];\n    const hasOwn = {}.hasOwnProperty;\n    args.filter(Boolean).forEach((arg) => {\n        const argType = typeof arg;\n        if (argType === 'string' || argType === 'number') {\n            classes.push(arg);\n        }\n        else if (Array.isArray(arg) && arg.length) {\n            const inner = css(...arg);\n            if (inner) {\n                classes.push(inner);\n            }\n        }\n        else if (argType === 'object') {\n            for (const key in arg) {\n                if (hasOwn.call(arg, key) && arg[key]) {\n                    classes.push(key);\n                }\n            }\n        }\n    });\n    return classes.join(' ');\n}\n//# sourceMappingURL=index.js.map","import React, { useCallback, FunctionComponent } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport {\n  Pagination as PFPagination,\n  PaginationProps as PFPaginationProps,\n  PaginationVariant,\n} from '@patternfly/react-core';\n\nexport type PaginationProps = Omit<PFPaginationProps, 'children' | 'ref'>;\n\nconst MASPagination: FunctionComponent<PaginationProps> = ({\n  page,\n  perPage = 10,\n  itemCount,\n  variant = PaginationVariant.top,\n  isCompact,\n  titles,\n  ...restProps\n}) => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const setSearchParam = useCallback(\n    (name: string, value: string) => {\n      searchParams.set(name, value.toString());\n    },\n    [searchParams]\n  );\n\n  const onSetPage = useCallback(\n    (_: unknown, newPage: number) => {\n      setSearchParam('page', newPage.toString());\n      history.push({\n        search: searchParams.toString(),\n      });\n    },\n    [setSearchParam, history, searchParams]\n  );\n\n  const onPerPageSelect = useCallback(\n    (_: unknown, newPerPage: number) => {\n      setSearchParam('page', '1');\n      setSearchParam('perPage', newPerPage.toString());\n      history.push({\n        search: searchParams.toString(),\n      });\n    },\n    [setSearchParam, history, searchParams]\n  );\n\n  return (\n    <PFPagination\n      itemCount={itemCount}\n      perPage={perPage}\n      page={page}\n      onSetPage={onSetPage}\n      variant={variant}\n      onPerPageSelect={onPerPageSelect}\n      isCompact={isCompact}\n      {...restProps}\n      titles={titles}\n    />\n  );\n};\n\nexport { MASPagination };\n","import React, { createContext, useContext } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport './CustomRowWrapper.css';\n\nexport type CustomRowWrapperContextProps = {\n  activeRow?: string;\n  onRowClick?: (event: MouseEvent, rowIndex: number, row: any) => void;\n  rowDataTestId?: string;\n  loggedInUser?: string;\n};\n\nconst CustomRowWrapperContext = createContext<CustomRowWrapperContextProps>({\n  activeRow: '',\n  onRowClick: () => '',\n  loggedInUser: '',\n});\n\nexport const CustomRowWrapperProvider = CustomRowWrapperContext.Provider;\n\nexport const CustomRowWrapper = (rowWrapperProps) => {\n  const { activeRow, onRowClick, rowDataTestId } = useContext(\n    CustomRowWrapperContext\n  );\n  const { trRef, className, rowProps, row, ...props } = rowWrapperProps || {};\n  const { rowIndex } = rowProps;\n  const { isExpanded, originalData } = row;\n\n  return (\n    <tr\n      data-testid={rowDataTestId}\n      tabIndex={0}\n      ref={trRef}\n      className={css(\n        className,\n        'pf-c-table-row__item',\n        activeRow &&\n          activeRow === originalData?.rowId &&\n          'pf-m-selected pf-m-selectable'\n      )}\n      hidden={isExpanded !== undefined && !isExpanded}\n      onClick={(event: MouseEvent) =>\n        onRowClick && onRowClick(event, rowIndex, row)\n      }\n      {...props}\n    />\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport {\n  TableHeader,\n  Table as PFTable,\n  TableBody,\n  TableProps as PFTableProps,\n  HeaderProps,\n  TableBodyProps,\n} from '@patternfly/react-table';\nimport { css } from '@patternfly/react-styles';\nimport {\n  CustomRowWrapper,\n  CustomRowWrapperProvider,\n  CustomRowWrapperContextProps,\n} from './CustomRowWrapper';\n\nexport type MASTableProps = CustomRowWrapperContextProps & {\n  tableProps: Omit<PFTableProps, 'children'> & {\n    shouldDefaultCustomRowWrapper?: boolean;\n  };\n  tableHeaderProps?: Omit<HeaderProps, 'children'>;\n  tableBodyProps?: Omit<TableBodyProps, 'children'>;\n  children?: React.ReactNode;\n};\n\nconst MASTable: FunctionComponent<MASTableProps> = ({\n  tableProps,\n  tableHeaderProps,\n  tableBodyProps,\n  children,\n  activeRow,\n  onRowClick,\n  rowDataTestId,\n  loggedInUser,\n}) => {\n  const {\n    cells,\n    rows,\n    actionResolver,\n    onSort,\n    sortBy,\n    'aria-label': ariaLabel,\n    variant,\n    className,\n    shouldDefaultCustomRowWrapper = false,\n    ...restProps\n  } = tableProps;\n\n  /**\n   * Handle CustomRowWrapper\n   */\n  if (shouldDefaultCustomRowWrapper) {\n    restProps['rowWrapper'] = CustomRowWrapper;\n  }\n\n  return (\n    <CustomRowWrapperProvider\n      value={{\n        activeRow,\n        onRowClick,\n        rowDataTestId,\n        loggedInUser,\n      }}\n    >\n      <PFTable\n        className={css(\n          shouldDefaultCustomRowWrapper && 'mas--table-view__table',\n          className\n        )}\n        cells={cells}\n        variant={variant}\n        rows={rows}\n        aria-label={ariaLabel}\n        actionResolver={actionResolver}\n        onSort={onSort}\n        sortBy={sortBy}\n        {...restProps}\n      >\n        <TableHeader {...tableHeaderProps} />\n        <TableBody {...tableBodyProps} />\n        {children}\n      </PFTable>\n    </CustomRowWrapperProvider>\n  );\n};\n\nexport { MASTable };\n","import React from 'react';\nimport {\n  ToolbarContent,\n  Toolbar,\n  ToolbarProps,\n  ToolbarItemProps as PFToolbarItemProps,\n  ToolbarToggleGroup,\n  ToolbarItem,\n  ToolbarToggleGroupProps,\n} from '@patternfly/react-core';\n\nexport type ToolbarItemProps = Omit<PFToolbarItemProps, 'children'> & {\n  item: React.ReactElement;\n};\nexport type MASToolbarProps = {\n  toolbarProps: Omit<ToolbarProps, 'children' | 'ref'>;\n  toggleGroupProps?: Omit<ToolbarToggleGroupProps, 'children'>;\n  toggleGroupItems?: any;\n  toolbarItems?: ToolbarItemProps[];\n};\n\nconst MASToolbar: React.FunctionComponent<MASToolbarProps> = ({\n  toolbarProps,\n  toggleGroupProps,\n  toolbarItems,\n  toggleGroupItems,\n}) => {\n  const {\n    id,\n    clearAllFilters,\n    collapseListedFiltersBreakpoint = 'md',\n    inset,\n    ...restToolbarProps\n  } = toolbarProps;\n\n  return (\n    <>\n      <Toolbar\n        id={id}\n        clearAllFilters={clearAllFilters}\n        inset={inset}\n        collapseListedFiltersBreakpoint={collapseListedFiltersBreakpoint}\n        {...restToolbarProps}\n      >\n        <ToolbarContent>\n          {toggleGroupProps && (\n            <ToolbarToggleGroup\n              toggleIcon={toggleGroupProps.toggleIcon}\n              {...toggleGroupProps}\n            >\n              {toggleGroupItems}\n            </ToolbarToggleGroup>\n          )}\n          {toolbarItems?.map((toolbarItem, index) => {\n            const {\n              key = 'mas',\n              variant,\n              className,\n              id,\n              alignment,\n              item,\n              ...restItemProps\n            } = toolbarItem;\n            return (\n              <ToolbarItem\n                key={`${key}-${index}`}\n                variant={variant}\n                className={className}\n                id={id}\n                alignment={alignment}\n                {...restItemProps}\n              >\n                {item}\n              </ToolbarItem>\n            );\n          })}\n        </ToolbarContent>\n      </Toolbar>\n    </>\n  );\n};\n\nexport { MASToolbar };\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button,\n  ButtonVariant,\n  InputGroup,\n  TextInput,\n  ToolbarFilter,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { MASToolbar, ToolbarItemProps, MASPagination } from '@app/components';\n\nexport type TopicsToolbarProps = {\n  total: number;\n  page: number;\n  perPage: number;\n  setFilteredValue: (value: string) => void;\n  filteredValue: string;\n  onCreateTopic?: () => void;\n};\n\nconst TopicsToolbar: React.FC<TopicsToolbarProps> = ({\n  total = 0,\n  page,\n  perPage,\n  setFilteredValue,\n  filteredValue = '',\n  onCreateTopic,\n}) => {\n  const { t } = useTranslation();\n  const [topicInputValue, setTopicInputValue] = useState<string>('');\n\n  const onClear = () => {\n    setFilteredValue('');\n  };\n\n  const onChangeInput = (value: string) => {\n    setTopicInputValue(value);\n  };\n\n  const onSearch = () => {\n    setFilteredValue(topicInputValue);\n    setTopicInputValue('');\n  };\n\n  const onDeleteChip = () => {\n    setFilteredValue('');\n  };\n\n  const toggleGroupItems = (\n    <>\n      <ToolbarFilter\n        chips={filteredValue ? [filteredValue] : []}\n        deleteChip={onDeleteChip}\n        categoryName={''}\n      >\n        <InputGroup>\n          <TextInput\n            name='searchName'\n            id='search-topics-input'\n            type='search'\n            aria-label={t('topic.topic_search_input')}\n            placeholder={t('common.search')}\n            value={topicInputValue}\n            onChange={onChangeInput}\n          />\n          <Button\n            variant={ButtonVariant.control}\n            isDisabled={topicInputValue.length ? false : true}\n            onClick={onSearch}\n            aria-label={t('topic.topic_search')}\n          >\n            <SearchIcon />\n          </Button>\n        </InputGroup>\n      </ToolbarFilter>\n    </>\n  );\n\n  const toolbarItems: ToolbarItemProps[] = [\n    {\n      item: (\n        <Button\n          id='topic-list-create-topic-button'\n          className='topics-per-page'\n          data-testid='actionCreateTopic'\n          onClick={onCreateTopic}\n        >\n          {t('topic.create_topic')}\n        </Button>\n      ),\n    },\n  ];\n\n  if (total > 0) {\n    toolbarItems.push({\n      item: (\n        <MASPagination\n          widgetId='consumer-group-pagination-options-menu-top'\n          itemCount={total}\n          page={page}\n          perPage={perPage}\n          titles={{\n            paginationTitle: t('common.minimal_pagination'),\n            perPageSuffix: t('common.per_page_suffix'),\n            toFirstPage: t('common.to_first_page'),\n            toPreviousPage: t('common.to_previous_page'),\n            toLastPage: t('common.to_last_page'),\n            toNextPage: t('common.to_next_page'),\n            optionsToggle: t('common.options_toggle'),\n            currPage: t('common.curr_page'),\n          }}\n        />\n      ),\n      variant: 'pagination',\n      alignment: { default: 'alignRight' },\n    });\n  }\n\n  return (\n    <MASToolbar\n      toolbarProps={{\n        id: 'instance-toolbar',\n        clearAllFilters: onClear,\n        collapseListedFiltersBreakpoint: 'md',\n        inset: { xl: 'insetLg' },\n      }}\n      toggleGroupProps={{ toggleIcon: '', breakpoint: 'md' }}\n      toggleGroupItems={toggleGroupItems}\n      toolbarItems={toolbarItems}\n    />\n  );\n};\n\nexport { TopicsToolbar };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { PaginationVariant } from '@patternfly/react-core';\nimport {\n  TableVariant,\n  sortable,\n  IRowData,\n  OnSort,\n  ISortBy,\n} from '@patternfly/react-table';\nimport {\n  MASTable,\n  MASPagination,\n  EmptyState,\n  MASEmptyStateVariant,\n} from '@app/components';\nimport { Topic } from '@rhoas/kafka-instance-sdk';\nimport { useFederated } from '@app/contexts';\nimport { TopicsToolbar, TopicsToolbarProps } from './TopicsToolbar';\nimport { convertRetentionSize, convertRetentionTime } from '@app/utils';\nimport { useModal, ModalType } from '@app/components';\n\nexport type TopicsTableProps = TopicsToolbarProps & {\n  topicItems: Topic[];\n  rowDataTestId?: string;\n  filteredValue: string;\n  onEdit?: (topicName?: string | undefined) => void;\n  onDeleteTopic?: () => void;\n  refreshTopics: () => void;\n  onSort: OnSort;\n  sortBy: ISortBy;\n};\n\nconst TopicsTable: React.FC<TopicsTableProps> = ({\n  total,\n  page,\n  perPage,\n  setFilteredValue,\n  filteredValue,\n  onCreateTopic,\n  topicItems,\n  rowDataTestId,\n  onEdit,\n  onDeleteTopic,\n  refreshTopics,\n  onSort,\n  sortBy,\n}) => {\n  const { t } = useTranslation();\n  const { showModal } = useModal<ModalType.DeleteTopic>();\n  const { onConnectToRoute, getConnectToRoutePath } = useFederated();\n\n  const tableColumns = [\n    { title: t('common.name') },\n    { title: t('common.partitions'), transforms: [sortable] },\n    { title: t('topic.retention_time'), transforms: [sortable] },\n    { title: t('topic.retention_size'), transforms: [sortable] },\n  ];\n\n  const onDelete = (topicName: string) => {\n    showModal(ModalType.DeleteTopic, {\n      topicName,\n      onDeleteTopic,\n      refreshTopics,\n    });\n  };\n\n  const onSelectKebabDropdownOption = (\n    event: any,\n    originalData: Topic,\n    action: string\n  ) => {\n    const { name = '' } = originalData;\n    if (action === 'delete') {\n      onDelete(name);\n    } else if (action === 'edit') {\n      onEdit && onEdit(name);\n    }\n    // Set focus back on previous selected element i.e. kebab button\n    event?.target?.parentElement?.parentElement?.previousSibling?.focus();\n  };\n\n  const actionResolver = (rowData: IRowData) => {\n    const originalData: Topic = rowData.originalData;\n    const resolver = [\n      {\n        title: t('common.delete'),\n        ['data-testid']: 'tableTopics-actionDelete',\n        onClick: (event: any) =>\n          onSelectKebabDropdownOption(event, originalData, 'delete'),\n      },\n      {\n        title: t('common.edit'),\n        ['data-testid']: 'tableTopics-actionEdit',\n        onClick: (event: any) =>\n          onSelectKebabDropdownOption(event, originalData, 'edit'),\n      },\n    ];\n    return resolver;\n  };\n\n  const preparedTableCells = () => {\n    const tableRow: (IRowData | string[])[] | undefined = [];\n    topicItems?.map((row: IRowData) => {\n      const { name, partitions, config } = row;\n      tableRow.push({\n        cells: [\n          {\n            title: (\n              <Link\n                data-testid='tableTopics-linkTopic'\n                to={\n                  (getConnectToRoutePath &&\n                    getConnectToRoutePath(`topics/${name}`, name)) ||\n                  ''\n                }\n                onClick={(e) => {\n                  e.preventDefault();\n                  onConnectToRoute && onConnectToRoute(`topics/${name}`);\n                }}\n              >\n                {name}\n              </Link>\n            ),\n          },\n          partitions?.length,\n          convertRetentionTime(\n            Number(\n              config?.filter((element) => element.key === 'retention.ms')[0]\n                ?.value || 0\n            )\n          ),\n          convertRetentionSize(\n            Number(\n              config?.filter((element) => element.key === 'retention.bytes')[0]\n                ?.value || 0\n            )\n          ),\n        ],\n        originalData: row,\n      });\n    });\n    return tableRow;\n  };\n\n  const rows = preparedTableCells();\n\n  return (\n    <>\n      <TopicsToolbar\n        total={total}\n        page={page}\n        perPage={perPage}\n        onCreateTopic={onCreateTopic}\n        setFilteredValue={setFilteredValue}\n        filteredValue={filteredValue}\n      />\n      <MASTable\n        tableProps={{\n          cells: tableColumns,\n          rows,\n          'aria-label': t('topic.topic_list_table'),\n          actionResolver: actionResolver,\n          shouldDefaultCustomRowWrapper: true,\n          variant: TableVariant.compact,\n          onSort,\n          sortBy,\n        }}\n        rowDataTestId={rowDataTestId || 'tableTopics-row'}\n      />\n      {topicItems?.length < 1 && filteredValue.length > 0 && (\n        <EmptyState\n          emptyStateProps={{\n            variant: MASEmptyStateVariant.NoResult,\n          }}\n          titleProps={{\n            title: t('common.no_results_title'),\n          }}\n          emptyStateBodyProps={{\n            body: t('common.no_results_body'),\n          }}\n        />\n      )}\n      {total > 0 && (\n        <MASPagination\n          widgetId='consumer-group-pagination-options-menu-bottom'\n          itemCount={total}\n          variant={PaginationVariant.bottom}\n          page={page}\n          perPage={perPage}\n          titles={{\n            paginationTitle: t('common.full_pagination'),\n            perPageSuffix: t('common.per_page_suffix'),\n            toFirstPage: t('common.to_first_page'),\n            toPreviousPage: t('common.to_previous_page'),\n            toLastPage: t('common.to_last_page'),\n            toNextPage: t('common.to_next_page'),\n            optionsToggle: t('common.options_toggle'),\n            currPage: t('common.curr_page'),\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport { TopicsTable };\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n  AlertVariant,\n  Card,\n  PageSectionVariants,\n  PageSection,\n} from '@patternfly/react-core';\nimport { useTimeout } from '@app/hooks/useTimeOut';\nimport { TopicsTable } from './components';\nimport { EmptyState, MASEmptyStateVariant, MASLoading } from '@app/components';\nimport { getTopics, OrderKey } from '@app/services';\nimport { ConfigContext, useFederated } from '@app/contexts';\nimport { TopicsList, Topic } from '@rhoas/kafka-instance-sdk';\nimport { KafkaActions } from '@app/utils';\nimport { useAlert } from '@bf2/ui-shared';\nimport './Topics.css';\nimport { ISortBy, OnSort, SortByDirection } from '@patternfly/react-table';\n\nexport type ITopic = {\n  name: string;\n  replicas: number;\n  partitions: number;\n};\n\nexport type ITopicProps = {\n  rows: ITopic[];\n};\n\nexport type TopicsProps = {\n  onCreateTopic?: () => void;\n  onEditTopic?: (topicName?: string | undefined) => void;\n};\n\nconst Topics: React.FC<TopicsProps> = ({ onCreateTopic, onEditTopic }) => {\n  const { dispatchKafkaAction, onError } = useFederated();\n  const { t } = useTranslation();\n  const { addAlert } = useAlert();\n  const config = useContext(ConfigContext);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const page = parseInt(searchParams.get('page') || '', 10) || 1;\n  const perPage = parseInt(searchParams.get('perPage') || '', 10) || 10;\n\n  const [topics, setTopics] = useState<TopicsList>();\n  const [topicItems, setTopicItems] = useState<Topic[]>();\n  const [searchTopicName, setSearchTopicName] = useState<string>('');\n  const [offset, setOffset] = useState<number>(0);\n  const [order, setOrder] = useState<SortByDirection>();\n  const [orderKey, setOrderKey] = useState<OrderKey>();\n  const [sortBy, setSortBy] = useState<ISortBy>({ index: 0, direction: 'asc' });\n\n  useEffect(() => {\n    fetchTopic();\n  }, [searchTopicName, order, orderKey]);\n\n  useTimeout(() => fetchTopic(), 5000);\n\n  useEffect(() => {\n    const offset = Number(perPage) * Number(page - 1);\n    setOffset(offset);\n  }, [page, perPage]);\n\n  const onClickCreateTopic = () => {\n    onCreateTopic && onCreateTopic();\n    dispatchKafkaAction && dispatchKafkaAction(KafkaActions.CreateTopic);\n  };\n\n  const onSort: OnSort = (_event, index, direction) => {\n    const sortableCols = {\n      '0': 'name',\n      '1': 'partitions',\n      '2': 'retention.ms',\n      '3': 'retention.bytes',\n    };\n\n    setOrderKey(sortableCols[index]);\n    setOrder(direction);\n    setSortBy({ index, direction });\n  };\n\n  const fetchTopic = async () => {\n    try {\n      await getTopics(\n        config,\n        100,\n        perPage,\n        searchTopicName,\n        offset,\n        order,\n        orderKey\n      ).then((response) => {\n        setTopics(response);\n        setTopicItems(response?.items);\n      });\n    } catch (err) {\n      //TODO: Update the api to allow suppress alerts if the application does not want to show them as well.\n      if (onError && err.response.data.code === 401) {\n        onError(err.response.data.code, err.response.data.error_message);\n      } else {\n        addAlert({\n          title: err.response.data.error_message,\n          variant: AlertVariant.danger,\n        });\n      }\n    }\n  };\n\n  const renderTopicsTable = () => {\n    if (topicItems === undefined) {\n      return (\n        <PageSection\n          className='kafka-ui-m-full-height'\n          variant={PageSectionVariants.light}\n          padding={{ default: 'noPadding' }}\n        >\n          <MASLoading />\n        </PageSection>\n      );\n    } else if (topicItems.length < 1 && searchTopicName.length < 1) {\n      return (\n        <EmptyState\n          emptyStateProps={{\n            variant: MASEmptyStateVariant.NoItems,\n            'data-ouia-page-id': 'emptyStateTopics',\n          }}\n          titleProps={{\n            title: t('topic.empty_topics_title'),\n          }}\n          emptyStateBodyProps={{\n            body: t('topic.empty_topics_body'),\n          }}\n          buttonProps={{\n            title: t('topic.create_topic'),\n            onClick: onClickCreateTopic,\n            'data-testid': 'actionCreateTopic',\n          }}\n        />\n      );\n    } else if (topicItems) {\n      return (\n        <TopicsTable\n          total={topicItems.length || 0}\n          page={page}\n          perPage={perPage}\n          onCreateTopic={onCreateTopic}\n          topicItems={\n            searchTopicName\n              ? topicItems?.slice(0, perPage)\n              : topicItems?.slice(offset, offset + perPage)\n          }\n          filteredValue={searchTopicName}\n          setFilteredValue={setSearchTopicName}\n          refreshTopics={fetchTopic}\n          onEdit={onEditTopic}\n          onSort={onSort}\n          sortBy={sortBy}\n        />\n      );\n    }\n    return <></>;\n  };\n\n  return (\n    <>\n      <Card className='kafka-ui-m-full-height' data-ouia-page-id='tableTopics'>\n        {renderTopicsTable()}\n      </Card>\n    </>\n  );\n};\n\nexport { Topics };\nexport default Topics;\n","import { AxiosResponse } from 'axios';\nimport {\n  ConfigEntry,\n  DefaultApi,\n  Topic,\n  TopicSettings,\n  TopicsList,\n} from '@rhoas/kafka-instance-sdk';\nimport { Configuration } from '@rhoas/kafka-instance-sdk';\nimport { IConfiguration } from '@app/contexts';\nimport { IAdvancedTopic } from '@app/modules/Topics/components/CreateTopicWizard/CreateTopicWizard';\nimport { SortByDirection } from '@patternfly/react-table';\n\nexport enum OrderKey {\n  name = 'name',\n  partitions = 'partitions',\n  retentionMs = 'retention.ms',\n  retentionSize = 'retention.bytes',\n}\n\nexport const getTopics = async (\n  config: IConfiguration | undefined,\n  limit?: number,\n  size?: number,\n  filter?: string,\n  offset?: number | undefined,\n  order: SortByDirection = SortByDirection.asc,\n  orderKey?: OrderKey\n): Promise<TopicsList> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<TopicsList> = await api.getTopics(\n    offset,\n    limit,\n    size,\n    filter,\n    undefined,\n    order,\n    orderKey\n  );\n  return response.data;\n};\n\nexport const getTopicDetail = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<IAdvancedTopic> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const { data } = await api.getTopic(topicName);\n\n  return convertTopicResponse(data);\n};\n\nconst convertTopicResponse = (topic: Topic): IAdvancedTopic => {\n  const topicObj: any = {};\n\n  topicObj.name = topic.name;\n\n  topic.config?.forEach((config) => {\n    if (config.key) {\n      topicObj[config.key] = config.value;\n    }\n  });\n\n  topicObj.numPartitions = topic?.partitions?.length || 0;\n\n  return topicObj;\n};\n\nexport const updateTopicModel = async (\n  topicName: string,\n  topicSettings: TopicSettings,\n  config: IConfiguration | undefined\n): Promise<number> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<Topic> = await api.updateTopic(\n    topicName,\n    topicSettings\n  );\n  return response.status;\n};\n\nexport const getTopic = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<Topic> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response = await api.getTopic(topicName);\n\n  const answer = response.data;\n  answer.config = answer.config || ([] as ConfigEntry[]);\n  answer.config.push({\n    key: 'replicationFactor',\n    value: response.data?.partitions\n      ?.map((p) => p.replicas?.length)\n      .reduce(\n        (previousValue = 0, currentValue = 0) => previousValue + currentValue\n      )\n      ?.toString(),\n  });\n  return response.data;\n};\n\nexport const deleteTopic = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<void> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  await api.deleteTopic(topicName);\n  return;\n};\n"],"names":["css","args","classes","hasOwn","hasOwnProperty","filter","Boolean","forEach","arg","argType","push","Array","isArray","length","inner","key","call","join","MASPagination","page","perPage","itemCount","variant","PaginationVariant","isCompact","titles","restProps","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","setSearchParam","useCallback","name","value","set","toString","onSetPage","_","newPage","onPerPageSelect","newPerPage","CustomRowWrapperContext","createContext","activeRow","onRowClick","loggedInUser","CustomRowWrapperProvider","Provider","CustomRowWrapper","rowWrapperProps","useContext","rowDataTestId","trRef","className","rowProps","row","props","rowIndex","isExpanded","originalData","tabIndex","ref","rowId","hidden","undefined","onClick","event","MASTable","tableProps","tableHeaderProps","tableBodyProps","children","cells","rows","actionResolver","onSort","sortBy","ariaLabel","shouldDefaultCustomRowWrapper","TableHeader","TableBody","MASToolbar","toolbarProps","toggleGroupProps","toolbarItems","toggleGroupItems","id","clearAllFilters","collapseListedFiltersBreakpoint","inset","restToolbarProps","Toolbar","ToolbarContent","ToolbarToggleGroup","toggleIcon","map","toolbarItem","index","alignment","item","restItemProps","ToolbarItem","TopicsToolbar","total","setFilteredValue","filteredValue","onCreateTopic","t","useTranslation","useState","topicInputValue","setTopicInputValue","ToolbarFilter","chips","deleteChip","categoryName","InputGroup","TextInput","type","placeholder","onChange","Button","ButtonVariant","isDisabled","SearchIcon","widgetId","paginationTitle","perPageSuffix","toFirstPage","toPreviousPage","toLastPage","toNextPage","optionsToggle","currPage","default","xl","breakpoint","TopicsTable","tableRow","topicItems","onEdit","onDeleteTopic","refreshTopics","showModal","onConnectToRoute","getConnectToRoutePath","tableColumns","title","transforms","sortable","onSelectKebabDropdownOption","action","topicName","target","parentElement","previousSibling","focus","partitions","config","Link","to","e","preventDefault","Number","element","rowData","TableVariant","EmptyState","emptyStateProps","titleProps","emptyStateBodyProps","body","Topics","onEditTopic","dispatchKafkaAction","onError","addAlert","useAlert","parseInt","get","setTopics","setTopicItems","searchTopicName","setSearchTopicName","offset","setOffset","order","setOrder","orderKey","setOrderKey","direction","setSortBy","useEffect","fetchTopic","onClickCreateTopic","_event","then","response","items","data","code","error_message","AlertVariant","Card","PageSection","PageSectionVariants","padding","MASLoading","buttonProps","slice","OrderKey","getTopics","limit","size","SortByDirection","getToken","accessToken","DefaultApi","Configuration","basePath","getTopicDetail","getTopic","convertTopicResponse","topic","topicObj","numPartitions","updateTopicModel","topicSettings","updateTopic","status","answer","p","replicas","reduce","previousValue","currentValue","deleteTopic"],"sourceRoot":""}