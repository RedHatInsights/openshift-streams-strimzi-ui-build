{"version":3,"file":"190.a3bdeaf0.bundle.js","mappings":"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","sources":["webpack://kafka-ui/./node_modules/@patternfly/react-styles/dist/esm/index.js","webpack://kafka-ui/./src/components/MASPagination/MASPagination.tsx","webpack://kafka-ui/./src/components/MASTable/CustomRowWrapper.tsx","webpack://kafka-ui/./src/components/MASTable/MASTable.tsx","webpack://kafka-ui/./src/components/MASToolbar/MASToolbar.tsx","webpack://kafka-ui/./src/modules/ConsumerGroups/components/ConsumerGroupsTable/ConsumerGroupToolbar.tsx","webpack://kafka-ui/./src/modules/ConsumerGroups/components/ConsumerGroupsTable/ConsumerGroupsTable.tsx"],"sourcesContent":["/** Joins args into a className string\n *\n * @param {any} args list of objects, string, or arrays to reduce\n */\nexport function css(...args) {\n    // Adapted from https://github.com/JedWatson/classnames/blob/master/index.js\n    const classes = [];\n    const hasOwn = {}.hasOwnProperty;\n    args.filter(Boolean).forEach((arg) => {\n        const argType = typeof arg;\n        if (argType === 'string' || argType === 'number') {\n            classes.push(arg);\n        }\n        else if (Array.isArray(arg) && arg.length) {\n            const inner = css(...arg);\n            if (inner) {\n                classes.push(inner);\n            }\n        }\n        else if (argType === 'object') {\n            for (const key in arg) {\n                if (hasOwn.call(arg, key) && arg[key]) {\n                    classes.push(key);\n                }\n            }\n        }\n    });\n    return classes.join(' ');\n}\n//# sourceMappingURL=index.js.map","import React, { useCallback, FunctionComponent } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport {\n  Pagination as PFPagination,\n  PaginationProps as PFPaginationProps,\n  PaginationVariant,\n} from '@patternfly/react-core';\n\nexport type PaginationProps = Omit<PFPaginationProps, 'children' | 'ref'>;\n\nconst MASPagination: FunctionComponent<PaginationProps> = ({\n  page,\n  perPage = 10,\n  itemCount,\n  variant = PaginationVariant.top,\n  isCompact,\n  titles,\n  ...restProps\n}) => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const setSearchParam = useCallback(\n    (name: string, value: string) => {\n      searchParams.set(name, value.toString());\n    },\n    [searchParams]\n  );\n\n  const onSetPage = useCallback(\n    (_: unknown, newPage: number) => {\n      setSearchParam('page', newPage.toString());\n      history.push({\n        search: searchParams.toString(),\n      });\n    },\n    [setSearchParam, history, searchParams]\n  );\n\n  const onPerPageSelect = useCallback(\n    (_: unknown, newPerPage: number) => {\n      setSearchParam('page', '1');\n      setSearchParam('perPage', newPerPage.toString());\n      history.push({\n        search: searchParams.toString(),\n      });\n    },\n    [setSearchParam, history, searchParams]\n  );\n\n  return (\n    <PFPagination\n      itemCount={itemCount}\n      perPage={perPage}\n      page={page}\n      onSetPage={onSetPage}\n      variant={variant}\n      onPerPageSelect={onPerPageSelect}\n      isCompact={isCompact}\n      {...restProps}\n      titles={titles}\n    />\n  );\n};\n\nexport { MASPagination };\n","import React, { createContext, useContext } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport './CustomRowWrapper.css';\n\nexport type CustomRowWrapperContextProps = {\n  activeRow?: string;\n  onRowClick?: (event: MouseEvent, rowIndex: number, row: any) => void;\n  rowDataTestId?: string;\n  loggedInUser?: string;\n};\n\nconst CustomRowWrapperContext = createContext<CustomRowWrapperContextProps>({\n  activeRow: '',\n  onRowClick: () => '',\n  loggedInUser: '',\n});\n\nexport const CustomRowWrapperProvider = CustomRowWrapperContext.Provider;\n\nexport const CustomRowWrapper = (rowWrapperProps) => {\n  const { activeRow, onRowClick, rowDataTestId } = useContext(\n    CustomRowWrapperContext\n  );\n  const { trRef, className, rowProps, row, ...props } = rowWrapperProps || {};\n  const { rowIndex } = rowProps;\n  const { isExpanded, originalData } = row;\n\n  return (\n    <tr\n      data-testid={rowDataTestId}\n      tabIndex={0}\n      ref={trRef}\n      className={css(\n        className,\n        'pf-c-table-row__item',\n        activeRow &&\n          activeRow === originalData?.rowId &&\n          'pf-m-selected pf-m-selectable'\n      )}\n      hidden={isExpanded !== undefined && !isExpanded}\n      onClick={(event: MouseEvent) =>\n        onRowClick && onRowClick(event, rowIndex, row)\n      }\n      {...props}\n    />\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport {\n  TableHeader,\n  Table as PFTable,\n  TableBody,\n  TableProps as PFTableProps,\n  HeaderProps,\n  TableBodyProps,\n} from '@patternfly/react-table';\nimport { css } from '@patternfly/react-styles';\nimport {\n  CustomRowWrapper,\n  CustomRowWrapperProvider,\n  CustomRowWrapperContextProps,\n} from './CustomRowWrapper';\n\nexport type MASTableProps = CustomRowWrapperContextProps & {\n  tableProps: Omit<PFTableProps, 'children'> & {\n    shouldDefaultCustomRowWrapper?: boolean;\n  };\n  tableHeaderProps?: Omit<HeaderProps, 'children'>;\n  tableBodyProps?: Omit<TableBodyProps, 'children'>;\n  children?: React.ReactNode;\n};\n\nconst MASTable: FunctionComponent<MASTableProps> = ({\n  tableProps,\n  tableHeaderProps,\n  tableBodyProps,\n  children,\n  activeRow,\n  onRowClick,\n  rowDataTestId,\n  loggedInUser,\n}) => {\n  const {\n    cells,\n    rows,\n    actionResolver,\n    onSort,\n    sortBy,\n    'aria-label': ariaLabel,\n    variant,\n    className,\n    shouldDefaultCustomRowWrapper = false,\n    ...restProps\n  } = tableProps;\n\n  /**\n   * Handle CustomRowWrapper\n   */\n  if (shouldDefaultCustomRowWrapper) {\n    restProps['rowWrapper'] = CustomRowWrapper;\n  }\n\n  return (\n    <CustomRowWrapperProvider\n      value={{\n        activeRow,\n        onRowClick,\n        rowDataTestId,\n        loggedInUser,\n      }}\n    >\n      <PFTable\n        className={css(\n          shouldDefaultCustomRowWrapper && 'mas--table-view__table',\n          className\n        )}\n        cells={cells}\n        variant={variant}\n        rows={rows}\n        aria-label={ariaLabel}\n        actionResolver={actionResolver}\n        onSort={onSort}\n        sortBy={sortBy}\n        {...restProps}\n      >\n        <TableHeader {...tableHeaderProps} />\n        <TableBody {...tableBodyProps} />\n        {children}\n      </PFTable>\n    </CustomRowWrapperProvider>\n  );\n};\n\nexport { MASTable };\n","import React from 'react';\nimport {\n  ToolbarContent,\n  Toolbar,\n  ToolbarProps,\n  ToolbarItemProps as PFToolbarItemProps,\n  ToolbarToggleGroup,\n  ToolbarItem,\n  ToolbarToggleGroupProps,\n} from '@patternfly/react-core';\n\nexport type ToolbarItemProps = Omit<PFToolbarItemProps, 'children'> & {\n  item: React.ReactElement;\n};\nexport type MASToolbarProps = {\n  toolbarProps: Omit<ToolbarProps, 'children' | 'ref'>;\n  toggleGroupProps?: Omit<ToolbarToggleGroupProps, 'children'>;\n  toggleGroupItems?: any;\n  toolbarItems?: ToolbarItemProps[];\n};\n\nconst MASToolbar: React.FunctionComponent<MASToolbarProps> = ({\n  toolbarProps,\n  toggleGroupProps,\n  toolbarItems,\n  toggleGroupItems,\n}) => {\n  const {\n    id,\n    clearAllFilters,\n    collapseListedFiltersBreakpoint = 'md',\n    inset,\n    ...restToolbarProps\n  } = toolbarProps;\n\n  return (\n    <>\n      <Toolbar\n        id={id}\n        clearAllFilters={clearAllFilters}\n        inset={inset}\n        collapseListedFiltersBreakpoint={collapseListedFiltersBreakpoint}\n        {...restToolbarProps}\n      >\n        <ToolbarContent>\n          {toggleGroupProps && (\n            <ToolbarToggleGroup\n              toggleIcon={toggleGroupProps.toggleIcon}\n              {...toggleGroupProps}\n            >\n              {toggleGroupItems}\n            </ToolbarToggleGroup>\n          )}\n          {toolbarItems?.map((toolbarItem, index) => {\n            const {\n              key = 'mas',\n              variant,\n              className,\n              id,\n              alignment,\n              item,\n              ...restItemProps\n            } = toolbarItem;\n            return (\n              <ToolbarItem\n                key={`${key}-${index}`}\n                variant={variant}\n                className={className}\n                id={id}\n                alignment={alignment}\n                {...restItemProps}\n              >\n                {item}\n              </ToolbarItem>\n            );\n          })}\n        </ToolbarContent>\n      </Toolbar>\n    </>\n  );\n};\n\nexport { MASToolbar };\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button,\n  ButtonVariant,\n  InputGroup,\n  TextInput,\n  ToolbarFilter,\n} from '@patternfly/react-core';\nimport { MASToolbar, ToolbarItemProps, MASPagination } from '@app/components';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nexport type ConsumerGroupToolbarProps = {\n  setSearch: (value: string) => void;\n  search: string;\n  total: number;\n  page: number;\n  perPage: number;\n};\n\nconst ConsumerGroupToolbar: React.FC<ConsumerGroupToolbarProps> = ({\n  search,\n  setSearch,\n  total,\n  page,\n  perPage,\n}) => {\n  const { t } = useTranslation();\n  const [searchInputValue, setSearchInputValue] = useState<string>('');\n\n  const onClear = () => {\n    setSearch('');\n  };\n\n  const onChangeInput = (value: string) => {\n    setSearchInputValue(value);\n  };\n\n  const onSearch = () => {\n    setSearch(searchInputValue);\n    setSearchInputValue('');\n  };\n\n  const onDeleteChip = () => {\n    setSearch('');\n  };\n\n  const toggleGroupItems = (\n    <>\n      <ToolbarFilter\n        chips={search ? [search] : []}\n        deleteChip={onDeleteChip}\n        categoryName={''}\n      >\n        <InputGroup>\n          <TextInput\n            name='searchConsumerGroups'\n            id='search-consumer-groups-input'\n            type='search'\n            aria-label={t('consumerGroup.consumer_group_search_input')}\n            placeholder={t('common.search')}\n            value={searchInputValue}\n            onChange={onChangeInput}\n          />\n          <Button\n            variant={ButtonVariant.control}\n            isDisabled={searchInputValue.length ? false : true}\n            onClick={onSearch}\n            aria-label={t('consumerGroup.consumer_group_search')}\n          >\n            <SearchIcon />\n          </Button>\n        </InputGroup>\n      </ToolbarFilter>\n    </>\n  );\n\n  const toolbarItems: ToolbarItemProps[] = [];\n\n  if (total && total > 0) {\n    toolbarItems.push({\n      item: (\n        <MASPagination\n          widgetId='consumer-group-pagination-options-menu-top'\n          itemCount={total}\n          page={page}\n          perPage={perPage}\n          titles={{\n            paginationTitle: t('common.minimal_pagination'),\n            perPageSuffix: t('common.per_page_suffix'),\n            toFirstPage: t('common.to_first_page'),\n            toPreviousPage: t('common.to_previous_page'),\n            toLastPage: t('common.to_last_page'),\n            toNextPage: t('common.to_next_page'),\n            optionsToggle: t('common.options_toggle'),\n            currPage: t('common.curr_page'),\n          }}\n        />\n      ),\n      variant: 'pagination',\n      alignment: { default: 'alignRight' },\n    });\n  }\n\n  return (\n    <MASToolbar\n      toolbarProps={{\n        id: 'instance-toolbar',\n        clearAllFilters: onClear,\n        collapseListedFiltersBreakpoint: 'md',\n        inset: { xl: 'insetLg' },\n      }}\n      toggleGroupProps={{ toggleIcon: '', breakpoint: 'md' }}\n      toggleGroupItems={toggleGroupItems}\n      toolbarItems={toolbarItems}\n    />\n  );\n};\n\nexport { ConsumerGroupToolbar };\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PaginationVariant } from '@patternfly/react-core';\nimport {\n  TableVariant,\n  IRowData,\n  OnSort,\n  ISortBy,\n  sortable,\n} from '@patternfly/react-table';\nimport { ConsumerGroup } from '@rhoas/kafka-instance-sdk';\nimport {\n  MASTable,\n  useModal,\n  ModalType,\n  MASPagination,\n  EmptyState,\n  MASEmptyStateVariant,\n} from '@app/components';\nimport {\n  ConsumerGroupToolbar,\n  ConsumerGroupToolbarProps,\n} from './ConsumerGroupToolbar';\n\nexport type ConsumerGroupsTableProps = ConsumerGroupToolbarProps & {\n  consumerGroups?: ConsumerGroup[];\n  rowDataTestId?: string;\n  isDrawerOpen?: boolean;\n  onViewConsumerGroup: (consumerGroup: ConsumerGroup) => void;\n  refreshConsumerGroups?: () => void;\n  consumerGroupByTopic: boolean;\n  onSort: OnSort;\n  sortBy: ISortBy;\n};\n\nconst ConsumerGroupsTable: React.FC<ConsumerGroupsTableProps> = ({\n  consumerGroups,\n  total,\n  page,\n  perPage,\n  search,\n  setSearch,\n  rowDataTestId,\n  isDrawerOpen,\n  onViewConsumerGroup,\n  refreshConsumerGroups,\n  consumerGroupByTopic,\n  onSort,\n  sortBy,\n}) => {\n  const { t } = useTranslation();\n  const { showModal } = useModal<ModalType.DeleteConsumerGroup>();\n  const [activeRow, setActiveRow] = useState<string>();\n\n  const tableColumns = [\n    { title: t('consumerGroup.consumer_group_id'), transforms: [sortable] },\n    { title: t('consumerGroup.active_members') },\n    { title: t('consumerGroup.partitions_with_lag') },\n  ];\n\n  useEffect(() => {\n    if (!isDrawerOpen) {\n      setActiveRow('');\n    }\n  }, [isDrawerOpen]);\n\n  const preparedTableCells = () => {\n    const tableRow: (IRowData | string[])[] | undefined = [];\n    consumerGroups?.map((row: IRowData) => {\n      const { groupId, consumers } = row;\n      tableRow.push({\n        cells: [\n          groupId,\n          consumers.reduce(function (prev, cur) {\n            return prev + (cur.partition != -1 ? 1 : 0);\n          }, 0),\n          consumers.reduce(function (prev, cur) {\n            return prev + (cur.lag > 0 ? 1 : 0);\n          }, 0),\n        ],\n        originalData: { ...row, rowId: groupId },\n      });\n    });\n    return tableRow;\n  };\n\n  const onSelectDeleteConsumerGroup = (groupId: string) => {\n    showModal(ModalType.DeleteConsumerGroup, {\n      consumerName: groupId,\n      refreshConsumerGroups,\n    });\n  };\n\n  const onSelectKebabDropdownOption = (\n    event: any,\n    originalData: ConsumerGroup\n  ) => {\n    const { groupId } = originalData;\n    //set selected row for view consumer group details\n    setActiveRow(groupId);\n    onSelectDeleteConsumerGroup(groupId);\n    // Set focus back on previous selected element i.e. kebab button\n    event?.target?.parentElement?.parentElement?.previousSibling?.focus();\n  };\n\n  const onClickDrawerButton = (row: IRowData) => {\n    const { originalData } = row;\n    onViewConsumerGroup(originalData);\n    setActiveRow(originalData?.groupId);\n  };\n\n  const actionResolver = (rowData: IRowData) => {\n    if (consumerGroupByTopic) {\n      return [];\n    }\n    const originalData: ConsumerGroup = rowData.originalData;\n    const resolver = [\n      {\n        title: t('common.delete'),\n        ['data-testid']: 'tableConsumers-actionDelete',\n        onClick: (event: any) =>\n          onSelectKebabDropdownOption(event, originalData),\n      },\n      {\n        title: t('consumerGroup.view_partitions_offsets'),\n        ['data-testid']: 'tableConsumers-actionOpenDrawer',\n        onClick: (_, __, row: IRowData) => onClickDrawerButton(row),\n      },\n    ];\n    return resolver;\n  };\n\n  const onRowClick = (event: any, rowIndex: number, row: IRowData) => {\n    const { originalData } = row;\n    const clickedEventType = event?.target?.type;\n    const tagName = event?.target?.tagName;\n    // Open modal on row click except kebab button click\n    if (clickedEventType !== 'button' && tagName?.toLowerCase() !== 'a') {\n      onViewConsumerGroup(originalData);\n      setActiveRow(originalData?.groupId);\n    }\n  };\n\n  return (\n    <>\n      <ConsumerGroupToolbar\n        search={search}\n        setSearch={setSearch}\n        total={total}\n        perPage={perPage}\n        page={page}\n      />\n      <MASTable\n        tableProps={{\n          cells: tableColumns,\n          rows: preparedTableCells(),\n          'aria-label': t('consumerGroup.consumer_group_list'),\n          actionResolver: actionResolver,\n          shouldDefaultCustomRowWrapper: true,\n          variant: TableVariant.compact,\n          onSort,\n          sortBy,\n        }}\n        activeRow={activeRow}\n        onRowClick={onRowClick}\n        rowDataTestId={rowDataTestId || 'tableConsumers-row'}\n      />\n      {total < 1 && search.length > 0 && (\n        <EmptyState\n          emptyStateProps={{\n            variant: MASEmptyStateVariant.NoResult,\n          }}\n          titleProps={{\n            title: t('common.no_results_title'),\n          }}\n          emptyStateBodyProps={{\n            body: t('common.no_results_body'),\n          }}\n        />\n      )}\n      {total > 0 && (\n        <MASPagination\n          widgetId='consumer-group-pagination-options-menu-bottom'\n          itemCount={total}\n          variant={PaginationVariant.bottom}\n          page={page}\n          perPage={perPage}\n          titles={{\n            paginationTitle: t('common.full_pagination'),\n            perPageSuffix: t('common.per_page_suffix'),\n            toFirstPage: t('common.to_first_page'),\n            toPreviousPage: t('common.to_previous_page'),\n            toLastPage: t('common.to_last_page'),\n            toNextPage: t('common.to_next_page'),\n            optionsToggle: t('common.options_toggle'),\n            currPage: t('common.curr_page'),\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport { ConsumerGroupsTable };\nexport default ConsumerGroupsTable;\n"],"names":["css","args","classes","hasOwn","hasOwnProperty","filter","Boolean","forEach","arg","argType","push","Array","isArray","length","inner","key","call","join","MASPagination","page","perPage","itemCount","variant","PaginationVariant","isCompact","titles","restProps","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","setSearchParam","useCallback","name","value","set","toString","onSetPage","_","newPage","onPerPageSelect","newPerPage","CustomRowWrapperContext","createContext","activeRow","onRowClick","loggedInUser","CustomRowWrapperProvider","Provider","CustomRowWrapper","rowWrapperProps","useContext","rowDataTestId","trRef","className","rowProps","row","props","rowIndex","isExpanded","originalData","tabIndex","ref","rowId","hidden","undefined","onClick","event","MASTable","tableProps","tableHeaderProps","tableBodyProps","children","cells","rows","actionResolver","onSort","sortBy","ariaLabel","shouldDefaultCustomRowWrapper","TableHeader","TableBody","MASToolbar","toolbarProps","toggleGroupProps","toolbarItems","toggleGroupItems","id","clearAllFilters","collapseListedFiltersBreakpoint","inset","restToolbarProps","Toolbar","ToolbarContent","ToolbarToggleGroup","toggleIcon","map","toolbarItem","index","alignment","item","restItemProps","ToolbarItem","ConsumerGroupToolbar","setSearch","total","t","useTranslation","useState","searchInputValue","setSearchInputValue","ToolbarFilter","chips","deleteChip","categoryName","InputGroup","TextInput","type","placeholder","onChange","Button","ButtonVariant","isDisabled","SearchIcon","widgetId","paginationTitle","perPageSuffix","toFirstPage","toPreviousPage","toLastPage","toNextPage","optionsToggle","currPage","default","xl","breakpoint","ConsumerGroupsTable","consumerGroups","isDrawerOpen","onViewConsumerGroup","refreshConsumerGroups","consumerGroupByTopic","showModal","setActiveRow","tableColumns","title","transforms","sortable","useEffect","tableRow","onSelectKebabDropdownOption","groupId","consumerName","onSelectDeleteConsumerGroup","target","parentElement","previousSibling","focus","consumers","reduce","prev","cur","partition","lag","rowData","__","onClickDrawerButton","TableVariant","clickedEventType","tagName","toLowerCase","EmptyState","emptyStateProps","titleProps","emptyStateBodyProps","body"],"sourceRoot":""}