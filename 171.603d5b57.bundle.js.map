{"version":3,"sources":["webpack://kafka-ui/./src/Modules/Topics/TopicDetails/Components/TopicDetailHead.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicDetails/Components/TopicDetailView.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicDetails/TopicDetailPage.tsx","webpack://kafka-ui/./src/Utils/axios.ts"],"names":["TopicDetailHead","topicName","kafkaName","kafkaInstanceLink","kafkaPageLink","t","useTranslation","className","Breadcrumb","BreadcrumbItem","to","PageSection","variant","PageSectionVariants","TextContent","Text","component","TextVariants","topic","deleteTopic","updateTopic","padding","default","Sidebar","hasGutter","SidebarPanel","JumpLinks","isVertical","label","scrollableSelector","offset","style","position","JumpLinksItem","key","href","SidebarContent","PageGroup","hasOverflowScroll","id","Split","SplitItem","isFilled","Form","FormSection","title","titleElement","TextWithLabelPopover","fieldId","btnAriaLabel","fieldLabel","fieldValue","name","popoverBody","popoverHeader","numPartitions","Number","showUnlimited","Divider","tabIndex","Button","onClick","TopicDetailGroup","onUpdateTopic","onClickTopicList","onDeleteTopic","onError","eventKey","useState","topicDetail","setTopicDetail","activeTabKey","setActiveTabKey","config","useContext","deleteModal","setDeleteModal","addAlert","history","contentRefConsumerGroup","contentRefProperties","useEffect","response","data","code","error_message","status","AlertVariant","fetchTopicDetail","Tabs","activeKey","onSelect","event","isBox","Tab","TabTitleText","tabContentId","tabContentRef","TabContent","ref","hidden","onDeleteConsumerGroup","push","consumerGroupByTopic","rowDataId","detailsDataId","isAxiosError","error","undefined"],"mappings":"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","file":"171.603d5b57.bundle.js","sourcesContent":["import {\n  Breadcrumb,\n  BreadcrumbItem,\n  TextContent,\n  Text,\n  TextVariants,\n  PageSection,\n  PageSectionVariants,\n} from '@patternfly/react-core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport './TopicDetailView.css';\n\nexport type TopicDetailHeadProps = {\n  topicName: string;\n  kafkaName?: string;\n  kafkaInstanceLink?: string;\n  kafkaPageLink?: string;\n};\n\nexport const TopicDetailHead: React.FC<TopicDetailHeadProps> = ({\n  topicName,\n  kafkaName,\n  kafkaInstanceLink,\n  kafkaPageLink,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <section className='pf-c-page__main-breadcrumb'>\n        <Breadcrumb>\n          <BreadcrumbItem to={kafkaPageLink ? kafkaPageLink : '#'}>\n            {t('common.kafka_instance')}\n          </BreadcrumbItem>\n          <BreadcrumbItem to={kafkaInstanceLink ? kafkaInstanceLink : '#'}>\n            {kafkaName ? kafkaName : t('common.kafka_instance_name')}\n          </BreadcrumbItem>\n          <BreadcrumbItem>{topicName}</BreadcrumbItem>\n        </Breadcrumb>\n      </section>\n      <PageSection variant={PageSectionVariants.light}>\n        <TextContent>\n          <Text component={TextVariants.h1}>{topicName}</Text>\n        </TextContent>\n      </PageSection>\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  PageSection,\n  PageGroup,\n  JumpLinks,\n  JumpLinksItem,\n  TextContent,\n  Text,\n  TextVariants,\n  Button,\n  Divider,\n  Sidebar,\n  SidebarContent,\n  SidebarPanel,\n  SplitItem,\n  Split,\n  Form,\n  FormSection,\n} from '@patternfly/react-core';\nimport {\n  DEFAULT_MESSAGE_TIMESTAMP_TYPE,\n  DEFAULT_DELETE_RETENTION_TIME,\n  DEFAULT_FILE_DELETE_DELAY,\n  DEFAULT_INDEX_INTERVAL_SIZE,\n  DEFAULT_LOG_SEGMENT_SIZE,\n  DEFAULT_MAXIMUM_MESSAGE_BYTES,\n  DEFAULT_MINIMUM_COMPACTION_LAG_TIME,\n  DEFAULT_MIN_CLEANBLE_RATIO,\n  DEFAULT_MIN_INSYNC_REPLICAS,\n  DEFAULT_REPLICAS,\n  DEFAULT_SEGMENT_INDEX_SIZE,\n  DEFAULT_SEGMENT_JITTER_TIME,\n  DEFAULT_SEGMENT_TIME,\n  DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF,\n  DEFAULT_FLUSH_INTERVAL_MESSAGES,\n  DEFAULT_FLUSH_INTERVAL_TIME\n} from '../../../../Constant';\nimport './TopicDetailView.css';\nimport { TextWithLabelPopover } from '../../../../Components/TextWithLabelPopover/TextWithLabelPopover';\nimport { useTranslation } from 'react-i18next';\nimport { IAdvancedTopic } from '../../CreateTopic/Components/CreateTopicWizard';\nimport { convertRetentionSize, convertRetentionTime } from '../../CreateTopic/utils';\n\nexport type TopicViewDetailProps = {\n  /** Topic details */\n  topic: IAdvancedTopic;\n  /** Method to delete topic */\n  deleteTopic: () => void;\n  /** Method to update topic */\n  updateTopic: () => void;\n};\n\nexport const TopicDetailView: React.FunctionComponent<TopicViewDetailProps> = ({\n  topic,\n  deleteTopic,\n  updateTopic,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <PageSection padding={{ default: \"noPadding\" }}>\n      <Sidebar hasGutter>\n        <SidebarPanel variant=\"sticky\">\n          <JumpLinks\n            isVertical\n            label={t(\"topic.jump_to_section\")}\n            scrollableSelector=\"#scrollablePageMain\"\n            offset={-164} // for header\n            style={{ position: \"sticky\" }}\n          >\n            <JumpLinksItem key={0} href=\"#core-configuration\">\n              {t(\"topic.core_configuration\")}\n            </JumpLinksItem>\n            <JumpLinksItem key={1} href=\"#messages\">\n              {t(\"topic.messages\")}\n            </JumpLinksItem>\n            <JumpLinksItem key={2} href=\"#log\">\n              {t(\"topic.log\")}\n            </JumpLinksItem>\n            <JumpLinksItem key={3} href=\"#replication\">\n              {t(\"topic.replication\")}\n            </JumpLinksItem>\n            <JumpLinksItem key={4} href=\"#cleanup\">\n              {t(\"common.cleanup\")}\n            </JumpLinksItem>\n            <JumpLinksItem key={5} href=\"#index\">\n              {t(\"topic.index\")}\n            </JumpLinksItem>\n            <JumpLinksItem key={6} href=\"#flush\">\n              {t(\"topic.flush\")}\n            </JumpLinksItem>\n            <JumpLinksItem key={7} href=\"#delete\">\n              {t(\"common.delete\")}\n            </JumpLinksItem>\n          </JumpLinks>\n        </SidebarPanel>\n        <SidebarContent>\n          <PageGroup hasOverflowScroll id=\"topic-detail-view\">\n            <PageSection padding={{ default: \"noPadding\" }}>\n              <Split>\n                <SplitItem isFilled>\n                  <Form>\n                    <FormSection\n                      title={t(\"topic.core_configuration\")}\n                      id=\"core-configuration\"\n                      titleElement={\"h2\"}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className=\"section-info\"\n                        >\n                          {t(\"topic.core_config_info\")}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId=\"topic-name\"\n                        btnAriaLabel={t(\"common.name\")}\n                        fieldLabel={t(\"topic.topic_name\")}\n                        fieldValue={topic.name}\n                        popoverBody={t(\"topic.topic_name_description\")}\n                        popoverHeader={t(\"topic.topic_name\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"partitions\"\n                        btnAriaLabel={t(\"topic.partitions\")}\n                        fieldLabel={t(\"topic.partitions\")}\n                        fieldValue={topic.numPartitions}\n                        popoverBody={t(\"topic.partitions_description\")}\n                        popoverHeader={t(\"topic.partitions\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"replicas\"\n                        btnAriaLabel={t(\"topic.replicas\")}\n                        fieldLabel={t(\"topic.replicas\")}\n                        fieldValue={DEFAULT_REPLICAS}\n                        popoverBody={t(\"topic.replicas_description\")}\n                        popoverHeader={t(\"topic.replicas\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"min-insync-replicas\"\n                        btnAriaLabel={t(\"topic.min_insync_replicas\")}\n                        fieldLabel={t(\"topic.min_insync_replicas\")}\n                        fieldValue={DEFAULT_MIN_INSYNC_REPLICAS}\n                        popoverBody={t(\"topic.min_insync_replicas_description\")}\n                        popoverHeader={t(\"topic.min_insync_replicas\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"retention-time\"\n                        btnAriaLabel={t(\"topic.retention_time\")}\n                        fieldLabel={t(\"topic.retention_time\")}\n                        fieldValue={convertRetentionTime(\n                          Number(topic[\"retention.ms\"])\n                        )}\n                        popoverBody={t(\"topic.retention_time_description\")}\n                        popoverHeader={t(\"topic.retention_time\")}\n                        showUnlimited={true}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"retention-size\"\n                        btnAriaLabel={t(\"topic.retention_size\")}\n                        fieldLabel={t(\"topic.retention_size\")}\n                        fieldValue={convertRetentionSize(\n                          Number(topic[\"retention.bytes\"])\n                        )}\n                        popoverHeader={t(\"topic.retention_size\")}\n                        popoverBody={t(\"topic.retention_size_description\")}\n                        showUnlimited={true}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t(\"topic.messages\")}\n                      id=\"messages\"\n                      titleElement={\"h2\"}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className=\"section-info\"\n                        >\n                          {t(\"topic.message_section_info\")}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId=\"max-message-size\"\n                        btnAriaLabel={t(\"topic.max_message_size\")}\n                        fieldLabel={t(\"topic.max_message_size\")}\n                        fieldValue={DEFAULT_MAXIMUM_MESSAGE_BYTES}\n                        popoverBody={t(\"topic.max_message_size_description\")}\n                        popoverHeader={t(\"topic.max_message_size\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"message-timestamp-type\"\n                        btnAriaLabel={t(\"topic.message_timestamp_type\")}\n                        fieldLabel={t(\"topic.message_timestamp_type\")}\n                        fieldValue={DEFAULT_MESSAGE_TIMESTAMP_TYPE}\n                        popoverBody={t(\n                          \"topic.message_timestamp_type_description\"\n                        )}\n                        popoverHeader={t(\"topic.message_timestamp_type\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"max-message-timestamp-diff\"\n                        btnAriaLabel={t(\"topic.max_message_timestamp_diff\")}\n                        fieldLabel={t(\"topic.max_message_timestamp_diff\")}\n                        fieldValue={DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF}\n                        popoverBody={t(\n                          \"topic.max_message_timestamp_diff_description\"\n                        )}\n                        popoverHeader={t(\"topic.max_message_timestamp_diff\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"compression-type\"\n                        btnAriaLabel={t(\"topic.compression_type\")}\n                        fieldLabel={t(\"topic.compression_type\")}\n                        fieldValue=\"Producer\"\n                        popoverBody={t(\"topic.compression_type_description\")}\n                        popoverHeader={t(\"topic.compression_type\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"message-format\"\n                        btnAriaLabel={t(\"topic.message_format\")}\n                        fieldLabel={t(\"topic.message_format\")}\n                        fieldValue=\"2.7-IV2\"\n                        popoverBody={t(\"topic.message_format_description\")}\n                        popoverHeader={t(\"topic.message_format\")}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t(\"topic.log\")}\n                      id=\"log\"\n                      titleElement={\"h2\"}\n                    >\n                      <TextContent>\n                        <Text component={TextVariants.p}>\n                          {t(\"topic.log_section_info\")}\n                          <Text\n                            component={TextVariants.small}\n                            className=\"section-info-note\"\n                          >\n                            {t(\"topic.log_section_info_note\")}\n                          </Text>\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId=\"cleanup-policy\"\n                        btnAriaLabel={t(\"topic.cleanup_policy\")}\n                        fieldLabel={t(\"topic.cleanup_policy\")}\n                        fieldValue={topic[\"cleanup.policy\"]}\n                        popoverBody={t(\"topic.cleanup_policy_description\")}\n                        popoverHeader={t(\"topic.cleanup_policy\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"delete-retention-time\"\n                        btnAriaLabel={t(\"topic.delete_retention_time\")}\n                        fieldLabel={t(\"topic.delete_retention_time\")}\n                        fieldValue={DEFAULT_DELETE_RETENTION_TIME}\n                        popoverBody={t(\n                          \"topic.delete_retention_time_description\"\n                        )}\n                        popoverHeader={t(\"topic.delete_retention_time\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"min-cleanable-ratio\"\n                        btnAriaLabel={t(\"topic.min_cleanable_ratio\")}\n                        fieldLabel={t(\"topic.min_cleanable_ratio\")}\n                        fieldValue={DEFAULT_MIN_CLEANBLE_RATIO}\n                        popoverBody={t(\"topic.min_cleanable_ratio_description\")}\n                        popoverHeader={t(\"topic.min_cleanable_ratio\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"min-compaction-lag-time\"\n                        btnAriaLabel={t(\"topic.min_compaction_lag_time\")}\n                        fieldLabel={t(\"topic.min_compaction_lag_time\")}\n                        fieldValue={DEFAULT_MINIMUM_COMPACTION_LAG_TIME}\n                        popoverBody={t(\n                          \"topic.min_compaction_lag_time_description\"\n                        )}\n                        popoverHeader={t(\"topic.min_compaction_lag_time\")}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t(\"topic.replication\")}\n                      id=\"replication\"\n                      titleElement={\"h2\"}\n                    >\n                      <TextContent>\n                        <Text component={TextVariants.p}>\n                          {t(\"topic.replication_section_info\")}\n                          <Text component={TextVariants.small}>\n                            {t(\"topic.replication_section_info_note\")}\n                          </Text>\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId=\"unclean-leader-election\"\n                        btnAriaLabel={t(\"topic.unclean_leader_election\")}\n                        fieldLabel={t(\"topic.unclean_leader_election\")}\n                        fieldValue={t(\"common.disabled\")}\n                        popoverBody={t(\n                          \"topic.unclean_leader_election_description\"\n                        )}\n                        popoverHeader={t(\"topic.unclean_leader_election\")}\n                      />\n                    </FormSection>\n\n                    <FormSection\n                      title={t(\"common.cleanup\")}\n                      id=\"cleanup\"\n                      titleElement={\"h2\"}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className=\"section-info\"\n                        >\n                          {t(\"topic.cleanup_section_info\")}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId=\"log-segment-size\"\n                        btnAriaLabel={t(\"topic.log_segment_size\")}\n                        fieldLabel={t(\"topic.log_segment_size\")}\n                        fieldValue={DEFAULT_LOG_SEGMENT_SIZE}\n                        popoverBody={t(\"topic.log_segment_size_description\")}\n                        popoverHeader={t(\"topic.log_segment_size\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"segement-time\"\n                        btnAriaLabel={t(\"topic.segement_time\")}\n                        fieldLabel={t(\"topic.segement_time\")}\n                        fieldValue={DEFAULT_SEGMENT_TIME}\n                        popoverBody={t(\"topic.segement_time_description\")}\n                        popoverHeader={t(\"topic.segement_time\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"segment-jitter-time\"\n                        btnAriaLabel={t(\"topic.segment_jitter_time\")}\n                        fieldLabel={t(\"topic.segment_jitter_time\")}\n                        fieldValue={DEFAULT_SEGMENT_JITTER_TIME}\n                        popoverBody={t(\"topic.segment_jitter_time_description\")}\n                        popoverHeader={t(\"topic.segment_jitter_time\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"file-delete-delay\"\n                        btnAriaLabel={t(\"topic.file_delete_delay\")}\n                        fieldLabel={t(\"topic.file_delete_delay\")}\n                        fieldValue={DEFAULT_FILE_DELETE_DELAY}\n                        popoverBody={t(\"topic.file_delete_delay_description\")}\n                        popoverHeader={t(\"topic.file_delete_delay\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"preallocate-log-segment-files\"\n                        btnAriaLabel={t(\"topic.preallocate_log_segment_files\")}\n                        fieldLabel={t(\"topic.preallocate_log_segment_files\")}\n                        fieldValue={t(\"common.disabled\")}\n                        popoverBody={t(\n                          \"topic.preallocate_log_segment_files_description\"\n                        )}\n                        popoverHeader={t(\"topic.preallocate_log_segment_files\")}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t(\"topic.index\")}\n                      id=\"index\"\n                      titleElement={\"h2\"}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className=\"section-info\"\n                        >\n                          {t(\"topic.index_section_info\")}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId=\"index-interval-size\"\n                        btnAriaLabel={t(\"topic.index_interval_size\")}\n                        fieldLabel={t(\"topic.index_interval_size\")}\n                        fieldValue={DEFAULT_INDEX_INTERVAL_SIZE}\n                        popoverBody={t(\"topic.index_interval_size_description\")}\n                        popoverHeader={t(\"topic.index_interval_size\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"segment-index-size\"\n                        btnAriaLabel={t(\"topic.segment_index_size\")}\n                        fieldLabel={t(\"topic.segment_index_size\")}\n                        fieldValue={DEFAULT_SEGMENT_INDEX_SIZE}\n                        popoverBody={t(\"topic.segment_index_size_description\")}\n                        popoverHeader={t(\"topic.segment_index_size\")}\n                      />\n                    </FormSection>\n                    <FormSection\n                      title={t(\"topic.flush\")}\n                      id=\"flush\"\n                      titleElement={\"h2\"}\n                    >\n                      <TextContent>\n                        <Text\n                          component={TextVariants.p}\n                          className=\"section-info\"\n                        >\n                          {t(\"topic.flush_section_info\")}\n                        </Text>\n                      </TextContent>\n\n                      <TextWithLabelPopover\n                        fieldId=\"flush-interval-messages\"\n                        btnAriaLabel={t(\"topic.flush_interval_messages\")}\n                        fieldLabel={t(\"topic.flush_interval_messages\")}\n                        fieldValue={DEFAULT_FLUSH_INTERVAL_MESSAGES}\n                        popoverBody={t(\n                          \"topic.flush_interval_messages_description\"\n                        )}\n                        popoverHeader={t(\"topic.flush_interval_messages\")}\n                      />\n\n                      <TextWithLabelPopover\n                        fieldId=\"flush-interval-time\"\n                        btnAriaLabel={t(\"topic.flush_interval_time\")}\n                        fieldLabel={t(\"topic.flush_interval_time\")}\n                        fieldValue={DEFAULT_FLUSH_INTERVAL_TIME}\n                        popoverBody={t(\"topic.flush_interval_time_description\")}\n                        popoverHeader={t(\"topic.flush_interval_time\")}\n                      />\n                    </FormSection>\n                  </Form>\n\n                  <Divider className='kafka-ui-divider__Margin' />\n\n                  <TextContent>\n                    <Text\n                      component={TextVariants.h2}\n                      tabIndex={-1}\n                      id='delete'\n                    >\n                      {t('topic.delete_topic')}\n                    </Text>\n                    <Text component={TextVariants.p} className='section-info'>\n                      {t('topic.delete_topic_info')}\n                    </Text>\n                    <Button\n                      variant='danger'\n                      onClick={deleteTopic}\n                      data-testid='tabProperties-actionDelete'\n                    >\n                      {t('common.delete_topic')}\n                    </Button>\n                  </TextContent>\n\n                </SplitItem>\n                <SplitItem>\n                  <Button\n                    variant='primary'\n                    onClick={updateTopic}\n                    data-testid='tabProperties-actionEdit'\n                  >\n                    {t('common.edit_props')}\n                  </Button>\n                </SplitItem>\n              </Split>\n            </PageSection>\n          </PageGroup>\n        </SidebarContent>\n      </Sidebar>\n    </PageSection>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { TopicDetailHead } from '../../../Modules/Topics/TopicDetails/Components/TopicDetailHead';\nimport { TopicDetailView } from './Components/TopicDetailView';\nimport {\n  AlertVariant,\n  PageSection,\n  PageSectionVariants,\n  Tab,\n  TabContent,\n  Tabs,\n  TabTitleText,\n} from '@patternfly/react-core';\nimport { getTopicDetail } from '../../../Services';\nimport { ConfigContext } from '../../../Contexts';\nimport { ConsumerGroupsList } from '../../ConsumerGroups/ConsumerGroupList/Components/ConsumerGroupList';\nimport { DeleteTopics } from '../TopicList/Components/DeleteTopicsModal';\nimport { isAxiosError } from '../../../Utils/axios';\nimport { AlertContext } from '../../../Contexts/Alert';\nimport { useHistory } from 'react-router';\nimport { IAdvancedTopic } from '../CreateTopic/Components/CreateTopicWizard';\nimport { useTranslation } from 'react-i18next';\n\nexport type TopicDetailGroupProps = {\n  topicName: string;\n  kafkaName?: string;\n  kafkaPageLink?: string;\n  kafkaInstanceLink?: string;\n  onUpdateTopic: () => void;\n  onClickTopicList: () => void;\n  onDeleteTopic: () => void;\n  onError?: (errorCode: number, message: string) => void;\n  eventKey: number;\n};\n\nexport const TopicDetailGroup: React.FC<TopicDetailGroupProps> = ({\n  topicName,\n  kafkaName,\n  kafkaPageLink,\n  kafkaInstanceLink,\n  onUpdateTopic,\n  onClickTopicList,\n  onDeleteTopic,\n  onError,\n  eventKey,\n}) => {\n  const [topicDetail, setTopicDetail] = useState<IAdvancedTopic>({\n    name: topicName,\n    numPartitions: '',\n    'retention.ms': '',\n    'retention.ms.unit': 'milliseconds',\n    'retention.bytes': '',\n    'retention.bytes.unit': 'bytes',\n    'cleanup.policy': '',\n  });\n  const [activeTabKey, setActiveTabKey] = useState(eventKey);\n  const config = useContext(ConfigContext);\n  const [deleteModal, setDeleteModal] = useState(false);\n  const { addAlert } = useContext(AlertContext);\n  const history = useHistory();\n\n  const { t } = useTranslation();\n\n  const fetchTopicDetail = async (topicName: string) => {\n    if (eventKey === 2) {\n      try {\n        const response = await getTopicDetail(topicName, config);\n        setTopicDetail(response);\n      } catch (err) {\n        if (isAxiosError(err)) {\n          if (onError) {\n            onError(err.response?.data.code, err.response?.data.error_message);\n          }\n          if (err.response?.status === 404) {\n            // then it's a non-existent topic\n            addAlert(\n              t('topic.topic_not_found', { name: topicName }),\n              AlertVariant.danger\n            );\n            onClickTopicList();\n          }\n        }\n      }\n    }\n  };\n\n  const contentRefConsumerGroup = React.createRef<HTMLElement>();\n  const contentRefProperties = React.createRef<HTMLElement>();\n\n  const handleTabClick = (event, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  // Make the get request\n  useEffect(() => {\n    fetchTopicDetail(topicName);\n  }, [topicName]);\n\n  const deleteTopic = () => {\n    setDeleteModal(true);\n  };\n  const onDeleteConsumer = () => {\n    history.push('/consumerGroups');\n  };\n\n  return (\n    <>\n      <TopicDetailHead\n        topicName={topicName}\n        kafkaName={kafkaName}\n        kafkaPageLink={kafkaPageLink}\n        kafkaInstanceLink={kafkaInstanceLink}\n      />\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: 'noPadding' }}\n        className='pf-c-page__main-tabs'\n      >\n        <Tabs\n          activeKey={activeTabKey}\n          onSelect={handleTabClick}\n          isBox={false}\n          className='pf-m-page-insets'\n        >\n          <Tab\n            eventKey={1}\n            data-testid='pageTopic-tabConsumers'\n            title={\n              <TabTitleText>{t('consumerGroup.consumer_groups')}</TabTitleText>\n            }\n            tabContentId='kafka-ui-TabcontentConsumerGroupList'\n            tabContentRef={contentRefConsumerGroup}\n          >\n          </Tab>\n          <Tab\n            eventKey={2}\n            title={<TabTitleText>{t('common.properties')}</TabTitleText>}\n            data-testid='pageTopic-tabProperties'\n            tabContentId='kafka-ui-TabcontentProperties'\n            tabContentRef={contentRefProperties}\n          />\n        </Tabs>\n      </PageSection>\n      <PageSection\n        variant={\n          activeTabKey === 2\n            ? PageSectionVariants.light\n            : PageSectionVariants.default\n        }\n      >\n        <TabContent\n          eventKey={1}\n          id='kafka-ui-TabcontentConsumerGroupList'\n          ref={contentRefConsumerGroup}\n          className='kafka-ui-m-full-height'\n          aria-label='Consumer groups.'\n          hidden\n        >\n          <ConsumerGroupsList\n            onDeleteConsumerGroup={onDeleteConsumer}\n            consumerGroupByTopic={true}\n            topic={topicName}\n            rowDataId='tableTopicConsumers-row'\n            detailsDataId='tableTopicConsumers-actionDetails'\n          />\n        </TabContent>\n        <TabContent\n          eventKey={2}\n          id='kafka-ui-TabcontentProperties'\n          ref={contentRefProperties}\n          className='kafka-ui-m-full-height'\n          aria-label='Topic properties.'\n        >\n          <TopicDetailView\n            topic={topicDetail}\n            deleteTopic={deleteTopic}\n            updateTopic={onUpdateTopic}\n          />\n        </TabContent>\n      </PageSection>\n      {deleteModal && (\n        <DeleteTopics\n          topicName={topicName}\n          deleteModal={deleteModal}\n          setDeleteModal={setDeleteModal}\n          onDeleteTopic={onDeleteTopic}\n        />\n      )}\n    </>\n  );\n};\n","import { AxiosError } from 'axios';\n\nexport const isAxiosError = (error: Error): error is AxiosError => {\n  return (error as AxiosError) !== undefined;\n};\n"],"sourceRoot":""}