{"version":3,"sources":["webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js","webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/search-icon.js","webpack://kafka-ui/./src/Components/Loading/Loading.tsx","webpack://kafka-ui/./src/Contexts/Alert/Context.tsx","webpack://kafka-ui/./src/Hooks/useTimeOut.ts","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/DeleteTopicsModal.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/EmptySearch.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/SearchTopics.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/EmptyTopics.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/TopicsList.tsx","webpack://kafka-ui/./src/Panels/Topics/FederatedView.tsx","webpack://kafka-ui/./src/Services/TopicServices.tsx"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","Loading","Bullseye","Spinner","AlertContext","createContext","useTimeout","callback","delay","savedCallback","useRef","useEffect","current","setTimeout","clearInterval","DeleteTopics","setDeleteModal","deleteModal","topicName","onDeleteTopic","useState","verificationText","setVerificationText","addAlert","useContext","onClose","config","Modal","variant","ModalVariant","isOpen","title","titleIconVariant","showClose","actions","Button","onClick","AlertVariant","response","data","error","key","isDisabled","toUpperCase","Text","id","htmlFor","TextInput","value","type","onChange","autoFocus","EmptySearch","EmptyState","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","SearchTopics","search","setSearch","onClear","InputGroup","SearchInput","placeholder","EmptyTopics","onCreateTopic","className","TopicsListComponent","getTopicDetailsPath","onClickTopic","onError","loading","setLoading","page","setPage","perPage","setPerPage","offset","setOffset","topics","setTopics","filteredTopics","setFilteredTopics","setTopicName","fetchTopic","topicsList","code","onSetPage","_event","pageNumber","onPerPageSelect","tableColumns","transforms","sortable","rowData","items","map","topic","byte","convertedByteValue","milliseconds","convertedValue","Link","to","e","preventDefault","partitions","length","Number","filter","element","Math","round","abs","trim","topicsFiltered","includes","prevState","undefined","_","rowId","onDelete","onEdit","Card","Toolbar","ToolbarContent","ToolbarItem","Pagination","itemCount","widgetId","Table","TableVariant","cells","rows","slice","TableHeader","TableBody","Divider","PaginationVariant","FederatedTopics","getToken","apiBasePath","alertContext","BrowserRouter","I18nextProvider","i18n","basePath","PageSection","PageSectionVariants","getTopics","accessToken","getTopicsList","getTopicDetail","getTopic","convertTopicResponse","topicObj","forEach","numPartitions","updateTopicModel","topicSettings","updateTopic","status","answer","push","p","replicas","reduce","previousValue","currentValue","toString","deleteTopic"],"mappings":"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","file":"307.ea4a7e36.bundle.js","sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PlusCircleIcon = require('../createIcon').createIcon(exports.PlusCircleIconConfig);\nexports[\"default\"] = exports.PlusCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.SearchIconConfig = {\n  name: 'SearchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.SearchIcon = require('../createIcon').createIcon(exports.SearchIconConfig);\nexports[\"default\"] = exports.SearchIcon;","import React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nexport const Loading: React.FunctionComponent = () => (\n  <Bullseye>\n    <Spinner />\n  </Bullseye>\n);\n","import React, { createContext, useEffect, useState } from 'react';\nimport { AlertVariant } from '@patternfly/react-core';\nimport { ServerAlertGroup } from '../../Components/ServerAlertGroup/ServerAlertGroup';\nimport { AlertType, AlertContextProps, TimeOut } from './Alert.types';\n\nexport const AlertContext = createContext<AlertContextProps>(\n  {} as AlertContextProps\n);\n\nexport const AlertProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [timers, setTimers] = useState<TimeOut[]>([]);\n\n  useEffect(() => {\n    const timersKeys = timers.map((timer) => timer?.key);\n    const timeOuts = alerts\n      .filter((alert) => !timersKeys.includes(alert.key))\n      .map((alert) => {\n        const timeOut = setTimeout(() => hideAlert(alert.key), 8000);\n        return { key: alert.key, timeOut };\n      });\n    setTimers([...timers, ...timeOuts]);\n    return () => timers.forEach((timer) => clearTimeout(timer.timeOut));\n  }, [alerts]);\n\n  const hideAlert = (key: number) => {\n    setAlerts((alerts) => [...alerts.filter((el) => el.key !== key)]);\n    setTimers((timers) => [...timers.filter((timer) => timer.key === key)]);\n  };\n\n  const createId = () => new Date().getTime();\n\n  const addAlert = (\n    message: string,\n    variant: AlertVariant = AlertVariant.default\n  ) => {\n    setAlerts([...alerts, { key: createId(), message, variant }]);\n  };\n\n  return (\n    <AlertContext.Provider value={{ addAlert }}>\n      <ServerAlertGroup alerts={alerts} onCloseAlert={hideAlert} />\n      {children}\n    </AlertContext.Provider>\n  );\n};\n","import { useEffect, useRef } from 'react';\n\nexport const useTimeout: any = (callback: any, delay: number) => {\n  const savedCallback = useRef<any>();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setTimeout(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n    return;\n  }, [callback, delay]);\n};\n","import React, { useContext, useState } from 'react';\nimport {\n  Modal,\n  ModalVariant,\n  Button,\n  Text,\n  AlertVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport { deleteTopic } from '../../../../Services/TopicServices';\nimport { ConfigContext } from '../../../../Contexts';\nimport { AlertContext } from '../../../../Contexts/Alert/Context';\nexport interface IDeleteTopics {\n  setDeleteModal: (value: boolean) => void;\n  deleteModal: boolean;\n  topicName?: string;\n  onDeleteTopic: () => void;\n}\nexport const DeleteTopics: React.FunctionComponent<IDeleteTopics> = ({\n  setDeleteModal,\n  deleteModal,\n  topicName,\n  onDeleteTopic,\n}) => {\n  const [verificationText, setVerificationText] = useState<string>('');\n  const { addAlert } = useContext(AlertContext);\n  const onClose = () => {\n    setDeleteModal(false);\n  };\n\n  const onDelete = async () => {\n    try {\n      topicName && (await deleteTopic(topicName, config));\n      addAlert(`Successfully deleted topic ${topicName}`, AlertVariant.success);\n    } catch (err) {\n      addAlert(err.response.data.error, AlertVariant.danger);\n    }\n    onDeleteTopic();\n    setDeleteModal(false);\n  };\n\n  const config = useContext(ConfigContext);\n\n  const handleVerificationTextChange = (value) => {\n    setVerificationText(value);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.small}\n      isOpen={deleteModal}\n      aria-label='Delete topic?'\n      title='Delete topic?'\n      titleIconVariant='warning'\n      showClose={true}\n      aria-describedby='modal-message'\n      onClose={onClose}\n      actions={[\n        <Button\n          variant='danger'\n          onClick={onDelete}\n          key={1}\n          data-testid=\"modalDeleteTopic-buttonDelete\"\n          isDisabled={verificationText.toUpperCase() != 'DELETE'}\n        >\n          Delete\n        </Button>,\n        <Button variant='link' onClick={onClose} key={2}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <Text id='modal-message'>\n        {' '}\n        <b>{topicName}</b> will be deleted.{' '}\n      </Text>\n\n      <br />\n      <label htmlFor='delete-text-input'>Type DELETE to confirm:</label>\n      <TextInput\n        value={verificationText}\n        id='delete-text-input'\n        name='delete-text-input'\n        type='text'\n        onChange={handleVerificationTextChange}\n        autoFocus={true}\n      />\n    </Modal>\n  );\n};\n","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Title,\n} from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\n\nexport const EmptySearch: React.FunctionComponent = () => {\n  return (\n    <EmptyState>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel='h5' size='lg'>\n        No results found\n      </Title>\n      <EmptyStateBody>\n        No result match the filter criteria. Remove filter or clear all filters\n        to show results\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import React from 'react';\nimport { InputGroup, SearchInput } from '@patternfly/react-core';\n\nexport interface ISearchTopicsProps {\n  setSearch: (value: string) => void;\n  search: string;\n  onClear: () => void;\n}\nconst SearchTopics: React.FunctionComponent<ISearchTopicsProps> = ({\n  search,\n  setSearch,\n  onClear,\n}) => {\n  const onChangeInput = (value: string) => {\n    setSearch(value);\n  };\n\n  const onClearHandler = () => {\n    onClear();\n    setSearch('');\n  };\n  return (\n    <InputGroup>\n      <SearchInput\n        name='searchName'\n        id='search-topics-input'\n        type='search'\n        aria-label='search input '\n        placeholder='Search'\n        value={search}\n        onChange={onChangeInput}\n        onClear={onClearHandler}\n      />\n    </InputGroup>\n  );\n};\nexport { SearchTopics };\n","import React from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Title,\n} from '@patternfly/react-core';\nimport PlusIcon from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\n\nexport interface IEmptyTopic {\n  onCreateTopic?: () => void;\n}\n\nexport const EmptyTopics: React.FunctionComponent<IEmptyTopic> = ({\n  onCreateTopic,\n}) => {\n  return (\n    <EmptyState>\n      <EmptyStateIcon icon={PlusIcon} />\n      <Title headingLevel='h5' size='lg'>\n        You don&apos;t have any topics yet\n      </Title>\n      <EmptyStateBody>\n        Create a topic by clicking the button below to get started\n      </EmptyStateBody>\n      <Button\n        variant='primary'\n        className='topics-empty-page'\n        onClick={onCreateTopic}\n      >\n        Create Topic\n      </Button>\n    </EmptyState>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  AlertVariant,\n  Button,\n  Card,\n  Divider,\n  Pagination,\n  PaginationVariant,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  sortable,\n} from '@patternfly/react-table';\nimport { useTimeout } from '../../../../Hooks/useTimeOut';\nimport { SearchTopics } from './SearchTopics';\nimport { EmptyTopics } from './EmptyTopics';\nimport { EmptySearch } from './EmptySearch';\nimport { getTopics } from '../../../../Services';\nimport { DeleteTopics } from './DeleteTopicsModal';\nimport { ConfigContext } from '../../../../Contexts';\nimport { TopicsList } from '../../../../OpenApi';\nimport { Loading } from '../../../../Components/Loading/Loading';\nimport { AlertContext } from '../../../../Contexts/Alert';\nimport { Link } from 'react-router-dom';\n\nimport './TopicList.css';\n\nexport interface ITopic {\n  name: string;\n  replicas: number;\n  partitions: number;\n}\n\nexport interface ITopicProps {\n  rows: ITopic[];\n}\n\nexport interface ITopicList {\n  onCreateTopic: () => void;\n  onClickTopic: (topicName: string | undefined) => void;\n  getTopicDetailsPath: (topic: string | undefined) => string;\n  onDeleteTopic: () => void;\n  onError?: (errorCode: number, message: string) => void;\n}\n\nexport const TopicsListComponent: React.FunctionComponent<ITopicList> = ({\n  onCreateTopic,\n  getTopicDetailsPath,\n  onClickTopic,\n  onDeleteTopic,\n  onError,\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(10);\n  const [offset, setOffset] = useState<number>(0);\n  const [search, setSearch] = useState('');\n  const [topics, setTopics] = useState<TopicsList>();\n  const [filteredTopics, setFilteredTopics] = useState<TopicsList>();\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [topicName, setTopicName] = useState<string | undefined>();\n\n  const { addAlert } = useContext(AlertContext);\n\n  const config = useContext(ConfigContext);\n\n  const fetchTopic = async () => {\n    try {\n      const topicsList = await getTopics(config);\n      if (topicsList) {\n        setTopics(topicsList);\n        setFilteredTopics(topicsList);\n      }\n    } catch (err) {\n      //TODO: Update the api to allow suppress alerts if the application does not want to show them as well.\n      if (onError && err.response.data.code === 401) {\n        onError(err.response.data.code, err.response.data.error);\n      } else {\n        addAlert(err.response.data.error, AlertVariant.danger);\n      }\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetchTopic();\n  }, [deleteModal]);\n\n  useTimeout(() => fetchTopic(), 5000);\n\n  const onSetPage = (_event, pageNumber: number) => {\n    setPage(pageNumber);\n    setOffset(page * perPage);\n  };\n\n  const onPerPageSelect = (_event, perPage: number) => {\n    setPerPage(perPage);\n  };\n\n  const tableColumns = [\n    { title: 'Name' },\n    { title: 'Partitions', transforms: [sortable] },\n    { title: 'Retention Time', transforms: [sortable] },\n    { title: 'Retention Size', transforms: [sortable] },\n  ];\n  const convertRetentionTime = (milliseconds: number) => {\n    let convertedValue;\n    if (milliseconds === -1) {\n      return 'Unlimited';\n    } else if (milliseconds < 60000) {\n      if (milliseconds === 1) return milliseconds + ' ' + 'millisecond';\n      else return milliseconds + ' ' + 'milliseconds';\n    } else if (milliseconds >= 60000 && milliseconds < 3.6e6) {\n      convertedValue = milliseconds / 60000;\n      convertedValue = Math.round(convertedValue * 100) / 100;\n      if (convertedValue === 1) return convertedValue + ' ' + 'minute';\n      else return convertedValue + ' ' + 'minutes';\n    } else if (milliseconds >= 3.6e6 && milliseconds < 1.728e8) {\n      convertedValue = milliseconds / 3.6e6;\n      convertedValue = Math.round(convertedValue * 100) / 100;\n      if (convertedValue === 1) return convertedValue + ' ' + 'hour';\n      else return convertedValue + ' ' + 'hours';\n    } else if (milliseconds >= 1.728e8) {\n      convertedValue = milliseconds / 8.64e7;\n      convertedValue = Math.round(convertedValue * 100) / 100;\n      return convertedValue + ' ' + 'days';\n    }\n  };\n\n  const convertRetentionSize = (byte: number) => {\n    let convertedByteValue;\n    if (byte === -1) {\n      return 'Unlimited';\n    } else if (Math.abs(byte) < 1000) {\n      if (byte === 1) return byte + ' ' + 'byte';\n      else return byte + ' ' + 'bytes';\n    } else if (Math.abs(byte) >= 1000 && Math.abs(byte) < 1000000) {\n      convertedByteValue = byte / 1000;\n      if (convertedByteValue === 1)\n        return convertedByteValue + ' ' + 'kilobyte';\n      else return convertedByteValue + ' ' + 'kilobytes';\n    } else if (Math.abs(byte) >= 1000000 && Math.abs(byte) < 1000000000) {\n      convertedByteValue = byte / 1000000;\n      if (convertedByteValue === 1)\n        return convertedByteValue + ' ' + 'megabyte';\n      else return convertedByteValue + ' ' + 'megabytes';\n    } else if (Math.abs(byte) >= 1000000000 && Math.abs(byte) < 1000000000000) {\n      convertedByteValue = byte / 1000000000;\n      if (convertedByteValue === 1)\n        return convertedByteValue + ' ' + 'gigabyte';\n      else return convertedByteValue + ' ' + 'gigabytes';\n    } else if (Math.abs(byte) >= 1000000000000) {\n      convertedByteValue = byte / 1000000000000;\n      if (convertedByteValue === 1)\n        return convertedByteValue + ' ' + 'terabyte';\n      else return convertedByteValue + ' ' + 'terabytes';\n    }\n  };\n  const rowData =\n    filteredTopics?.items?.map((topic) => [\n      {\n        title: (\n          <Link\n            data-testid=\"tableTopics-linkTopic\"\n            to={getTopicDetailsPath(topic.name)}\n            onClick={(e) => {\n              e.preventDefault();\n              onClickTopic(topic.name);\n            }}\n          >\n            {topic?.name}\n          </Link>\n        ),\n      },\n      topic.partitions?.length,\n\n      convertRetentionTime(\n        Number(\n          topic.config?.filter((element) => element.key === 'retention.ms')[0]\n            ?.value || 0\n        )\n      ),\n\n      convertRetentionSize(\n        Number(\n          topic.config?.filter(\n            (element) => element.key === 'retention.bytes'\n          )[0]?.value || 0\n        )\n      ),\n    ]) || [];\n\n  useEffect(() => {\n    if (\n      search &&\n      search.trim() != '' &&\n      topics?.items &&\n      topics.items.length > 0\n    ) {\n      const filterSearch = topics?.items.filter(\n        (topicsFiltered) =>\n          topicsFiltered?.name && topicsFiltered.name.includes(search)\n      );\n      setFilteredTopics((prevState) =>\n        prevState\n          ? {\n            ...prevState,\n            items: filterSearch,\n          }\n          : undefined\n      );\n    } else {\n      setFilteredTopics(topics);\n    }\n  }, [search, topics]);\n\n  const onClear = () => {\n    setFilteredTopics(topics);\n  };\n  const onDelete = (rowId: any) => {\n    if (filteredTopics?.items) {\n      setTopicName(filteredTopics.items[rowId].name);\n    }\n    setDeleteModal(true);\n  };\n\n  const onEdit = (rowId: any) => {\n    if (filteredTopics?.items) {\n      onClickTopic(filteredTopics.items[rowId].name);\n    }\n  };\n\n  const actions = [\n    { title: 'Delete', ['data-testid']: 'tableTopics-actionDelete', onClick: (_, rowId) => onDelete(rowId) }, \n    { title: 'Edit', ['data-testid']: 'tableTopics-actionEdit', onClick: (_, rowId) => onEdit(rowId) },\n  ];\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <>\n      {deleteModal && (\n        <DeleteTopics\n          topicName={topicName}\n          setDeleteModal={setDeleteModal}\n          deleteModal={deleteModal}\n          onDeleteTopic={onDeleteTopic}\n        />\n      )}\n      {rowData.length < 1 && search.length < 1 ? (\n        <EmptyTopics onCreateTopic={onCreateTopic} />\n      ) : (\n        <Card>\n          <Toolbar>\n            <ToolbarContent>\n              <ToolbarItem className='pf-c-toolbar-item--search'>\n                <SearchTopics\n                  onClear={onClear}\n                  search={search}\n                  setSearch={setSearch}\n                />\n              </ToolbarItem>\n              <ToolbarItem>\n                <Button\n                  id='topic-list-create-topic-button'\n                  className='topics-per-page'\n                  onClick={() => {\n                    onCreateTopic();\n                  }}\n                >\n                  Create topic\n                </Button>\n              </ToolbarItem>\n              <ToolbarItem variant='pagination'>\n                <Pagination\n                  itemCount={rowData.length}\n                  perPage={perPage}\n                  page={page}\n                  onSetPage={onSetPage}\n                  widgetId='topic-list-pagination-top'\n                  onPerPageSelect={onPerPageSelect}\n                />\n              </ToolbarItem>\n            </ToolbarContent>\n          </Toolbar>\n\n          <Table\n            aria-label='Compact Table'\n            variant={TableVariant.compact}\n            cells={tableColumns}\n            rows={\n              page != 1\n                ? rowData.slice(offset, offset + perPage)\n                : rowData.slice(0, perPage)\n            }\n            actions={actions}\n          >\n            <TableHeader />\n            <TableBody />\n          </Table>\n        </Card>\n      )}\n      <Divider />\n      {rowData.length < 1 && search.length > 1 && <EmptySearch />}\n      {rowData.length > 1 && (\n        <Card>\n          <Pagination\n            itemCount={rowData.length}\n            perPage={perPage}\n            page={page}\n            onSetPage={onSetPage}\n            widgetId='topic-list-pagination-bottom'\n            onPerPageSelect={onPerPageSelect}\n            offset={0}\n            variant={PaginationVariant.bottom}\n          />\n        </Card>\n      )}\n    </>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport './style.scss';\nimport { TopicsListComponent } from '../../Modules/Topics/TopicList/Components/TopicsList';\nimport { ConfigContext } from '../../Contexts';\nimport {\n  AlertVariant,\n  PageSection,\n  PageSectionVariants,\n} from '@patternfly/react-core';\nimport kafkai18n from '../../i18n';\nimport { I18nextProvider } from 'react-i18next';\nimport { AlertContext, AlertContextProps } from '../../Contexts/Alert';\nimport { BrowserRouter } from 'react-router-dom';\nimport { FederatedProps } from '../../Utils';\n\nexport interface FederatedTopicsProps extends FederatedProps {\n  getToken: () => Promise<string>;\n  apiBasePath: string;\n  onCreateTopic: () => void;\n  onClickTopic: (topicName: string | undefined) => void;\n  getTopicDetailsPath: (topic: string | undefined) => string;\n  addAlert: (message: string, variant?: AlertVariant) => void;\n  onDeleteTopic: () => void;\n}\n\nconst FederatedTopics: FunctionComponent<FederatedTopicsProps> = ({\n  getToken,\n  apiBasePath,\n  onCreateTopic,\n  getTopicDetailsPath,\n  onClickTopic,\n  addAlert,\n  onDeleteTopic,\n  onError,\n}) => {\n  const alertContext = {\n    addAlert,\n  } as AlertContextProps;\n\n  return (\n    // TODO don't add BrowserRouter here - see  https://github.com/bf2fc6cc711aee1a0c2a/mk-ui-frontend/issues/74\n    <BrowserRouter>\n      <I18nextProvider i18n={kafkai18n}>\n        <ConfigContext.Provider value={{ basePath: apiBasePath, getToken }}>\n          <AlertContext.Provider value={alertContext}>\n            <PageSection variant={PageSectionVariants.light}>\n              <TopicsListComponent\n                onCreateTopic={onCreateTopic}\n                onClickTopic={onClickTopic}\n                getTopicDetailsPath={getTopicDetailsPath}\n                onDeleteTopic={onDeleteTopic}\n                onError={onError}\n              />\n            </PageSection>\n          </AlertContext.Provider>\n        </ConfigContext.Provider>\n      </I18nextProvider>\n    </BrowserRouter>\n  );\n};\n\nexport { FederatedTopics };\n\nexport default FederatedTopics;\n","import { AxiosResponse } from 'axios';\nimport { AdvancedTopic } from '../Contexts/Topic';\nimport {\n  ConfigEntry,\n  DefaultApi,\n  Topic,\n  TopicSettings,\n  TopicsList,\n} from '../OpenApi/api';\nimport { Configuration } from '../OpenApi';\nimport { IConfiguration } from '../Contexts';\n\nexport const getTopics = async (\n  config: IConfiguration | undefined\n): Promise<TopicsList> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<TopicsList> = await api.getTopicsList();\n  return response.data;\n};\n\nexport const getTopicDetail = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<AdvancedTopic> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const { data } = await api.getTopic(topicName);\n\n  return convertTopicResponse(data);\n};\n\nconst convertTopicResponse = (topic: Topic): AdvancedTopic => {\n  const topicObj: any = {};\n\n  topicObj.name = topic.name;\n\n  topic.config?.forEach((config) => {\n    if (config.key) {\n      topicObj[config.key] = config.value;\n    }\n  });\n\n  topicObj.numPartitions = topic?.partitions?.length || 0;\n\n  return topicObj;\n};\n\nexport const updateTopicModel = async (\n  topicName: string,\n  topicSettings: TopicSettings,\n  config: IConfiguration | undefined\n): Promise<number> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<Topic> = await api.updateTopic(\n    topicName,\n    topicSettings\n  );\n  return response.status;\n};\n\nexport const getTopic = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<Topic> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response = await api.getTopic(topicName);\n\n  const answer = response.data;\n  answer.config = answer.config || ([] as ConfigEntry[]);\n  answer.config.push({\n    key: 'replicationFactor',\n    value: response.data?.partitions\n      ?.map((p) => p.replicas?.length)\n      .reduce(\n        (previousValue = 0, currentValue = 0) => previousValue + currentValue\n      )\n      ?.toString(),\n  });\n  return response.data;\n};\n\nexport const deleteTopic = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<void> => {\n  const accessToken = await config?.getToken();\n\n  const api = new DefaultApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  await api.deleteTopic(topicName);\n  return;\n};\n"],"sourceRoot":""}