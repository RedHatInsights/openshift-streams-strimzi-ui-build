{"version":3,"sources":["webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/cubes-icon.js","webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js","webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/search-icon.js","webpack://kafka-ui/./node_modules/@patternfly/react-styles/dist/esm/index.js","webpack://kafka-ui/./src/components/EmptyState/EmptyState.tsx","webpack://kafka-ui/./src/components/MASLoading/MASLoading.tsx","webpack://kafka-ui/./src/components/MASPagination/MASPagination.tsx","webpack://kafka-ui/./src/components/MASTable/CustomRowWrapper.tsx","webpack://kafka-ui/./src/components/MASTable/MASTable.tsx","webpack://kafka-ui/./src/components/MASToolbar/MASToolbar.tsx","webpack://kafka-ui/./src/hooks/useTimeOut.ts","webpack://kafka-ui/./src/components/MASDrawer/MASDrawer.tsx","webpack://kafka-ui/./src/modules/ConsumerGroups/components/ConsumerGroupDetail/ConsumerGroupDetail.tsx","webpack://kafka-ui/./src/modules/ConsumerGroups/components/ConsumerGroupsTable/ConsumerGroupToolbar.tsx","webpack://kafka-ui/./src/modules/ConsumerGroups/components/ConsumerGroupsTable/ConsumerGroupsTable.tsx","webpack://kafka-ui/./src/modules/ConsumerGroups/ConsumerGroups.tsx"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","css","args","classes","hasOwn","hasOwnProperty","filter","Boolean","forEach","arg","argType","push","Array","isArray","length","inner","key","call","join","MASEmptyStateVariant","EmptyState","titleProps","buttonProps","emptyStateIconProps","emptyStateProps","emptyStateBodyProps","children","variant","buttonVariant","ButtonVariant","onClick","restButtonProps","title","restTitleProps","body","restEmptyStateBodyProps","masEmptyStateVariant","NoItems","restEmptyStateProps","variantConfig","NoConsumerGroups","EmptyStateVariant","icon","titleSize","TitleSizes","headingLevel","NoResult","size","getVariantConfig","EmptyStateIcon","Title","EmptyStateBody","Button","MASLoading","bullseyeProps","spinnerProps","Bullseye","Spinner","MASPagination","page","perPage","itemCount","PaginationVariant","isCompact","titles","restProps","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","setSearchParam","useCallback","value","set","toString","onSetPage","_","newPage","onPerPageSelect","newPerPage","CustomRowWrapperContext","createContext","activeRow","onRowClick","loggedInUser","CustomRowWrapperProvider","Provider","CustomRowWrapper","rowWrapperProps","useContext","rowDataTestId","trRef","className","rowProps","row","props","rowIndex","isExpanded","originalData","tabIndex","ref","rowId","hidden","undefined","event","MASTable","tableProps","tableHeaderProps","tableBodyProps","cells","rows","actionResolver","onSort","sortBy","ariaLabel","shouldDefaultCustomRowWrapper","TableHeader","TableBody","MASToolbar","toolbarProps","toggleGroupProps","toolbarItems","toggleGroupItems","id","clearAllFilters","collapseListedFiltersBreakpoint","inset","restToolbarProps","Toolbar","ToolbarContent","ToolbarToggleGroup","toggleIcon","map","toolbarItem","index","alignment","item","restItemProps","ToolbarItem","useTimeout","callback","delay","savedCallback","useRef","useEffect","current","setTimeout","clearInterval","MASDrawer","onClose","isLoading","drawerPanelContentProps","drawerHeaderProps","panelBodyContent","onExpand","notRequiredDrawerContentBackground","dataOuiaAppId","inlineAlertMessage","widths","restDrawerPanelContentProps","text","panelContent","DrawerPanelContent","default","DrawerHead","TextContent","label","Text","component","TextVariants","DrawerActions","DrawerCloseButton","DrawerPanelBody","Drawer","DrawerContent","DrawerContentBody","ConsumerGroupDetail","consumerDetail","t","useTranslation","columns","dataLabel","Stack","hasGutter","Flex","FlexItem","consumers","reduce","prev","cur","partition","lag","consumergroup","groupId","memberId","offset","logEndOffset","TableVariant","ConsumerGroupToolbar","setSearch","total","useState","searchInputValue","setSearchInputValue","ToolbarFilter","chips","deleteChip","categoryName","InputGroup","TextInput","type","placeholder","onChange","isDisabled","SearchIcon","widgetId","paginationTitle","perPageSuffix","toFirstPage","toPreviousPage","toLastPage","toNextPage","optionsToggle","currPage","xl","breakpoint","ConsumerGroupsTable","consumerGroups","isDrawerOpen","onViewConsumerGroup","refreshConsumerGroups","consumerGroupByTopic","showModal","setActiveRow","tableColumns","transforms","sortable","tableRow","rowData","consumerName","onSelectDeleteConsumerGroup","target","parentElement","previousSibling","focus","onSelectKebabDropdownOption","__","onClickDrawerButton","clickedEventType","tagName","toLowerCase","ConsumerGroups","topic","setOffset","order","setOrder","orderKey","setOrderKey","direction","setSortBy","setConsumerGroups","setIsExpanded","consumerGroupDetail","setConsumerGroupDetail","config","parseInt","get","_event","fetchConsumerGroups","limit","then","response","consumerGroup","PageSection","PageSectionVariants","padding","items","slice","renderConsumerTable"],"mappings":"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","file":"546.a72e3fe9.bundle.js","sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.CubesIconConfig = {\n  name: 'CubesIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.CubesIcon = require('../createIcon').createIcon(exports.CubesIconConfig);\nexports[\"default\"] = exports.CubesIcon;","\"use strict\"\nexports.__esModule = true;\nexports.PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PlusCircleIcon = require('../createIcon').createIcon(exports.PlusCircleIconConfig);\nexports[\"default\"] = exports.PlusCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.SearchIconConfig = {\n  name: 'SearchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.SearchIcon = require('../createIcon').createIcon(exports.SearchIconConfig);\nexports[\"default\"] = exports.SearchIcon;","/** Joins args into a className string\n *\n * @param {any} args list of objects, string, or arrays to reduce\n */\nexport function css(...args) {\n    // Adapted from https://github.com/JedWatson/classnames/blob/master/index.js\n    const classes = [];\n    const hasOwn = {}.hasOwnProperty;\n    args.filter(Boolean).forEach((arg) => {\n        const argType = typeof arg;\n        if (argType === 'string' || argType === 'number') {\n            classes.push(arg);\n        }\n        else if (Array.isArray(arg) && arg.length) {\n            const inner = css(...arg);\n            if (inner) {\n                classes.push(inner);\n            }\n        }\n        else if (argType === 'object') {\n            for (const key in arg) {\n                if (hasOwn.call(arg, key) && arg[key]) {\n                    classes.push(key);\n                }\n            }\n        }\n    });\n    return classes.join(' ');\n}\n//# sourceMappingURL=index.js.map","import React from 'react';\nimport {\n  Title,\n  Button,\n  EmptyState as PFEmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  TitleSizes,\n  TitleProps,\n  ButtonProps,\n  EmptyStateIconProps,\n  EmptyStateProps as PFEmptyStateProps,\n  EmptyStateBodyProps,\n  ButtonVariant,\n  EmptyStateVariant,\n} from '@patternfly/react-core';\nimport PlusCircleIcon from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\n\nimport CubesIcon from '@patternfly/react-icons/dist/js/icons/cubes-icon';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\n\nexport enum MASEmptyStateVariant {\n  NoConsumerGroups = 'NoConsumerGroups',\n  NoResult = 'NoResult',\n  NoItems = 'NoItems',\n}\n\nexport type EmptyStateProps = {\n  titleProps?: Omit<TitleProps, 'children' | 'headingLevel'> & {\n    headingLevel?: string;\n  };\n  emptyStateProps?: Omit<PFEmptyStateProps, 'children' | 'variant'> & {\n    variant?: MASEmptyStateVariant | EmptyStateVariant;\n    'data-ouia-page-id'?: string;\n  };\n  emptyStateIconProps?: EmptyStateIconProps;\n  emptyStateBodyProps?: Omit<EmptyStateBodyProps, 'children'> & {\n    body?: string | React.ReactNode;\n  };\n  buttonProps?: Omit<ButtonProps, 'children'> & {\n    title?: string;\n    onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    'data-testid'?: string;\n  };\n  children?: React.ReactNode;\n};\n\nexport const EmptyState: React.FC<EmptyStateProps> = ({\n  titleProps,\n  buttonProps,\n  emptyStateIconProps,\n  emptyStateProps,\n  emptyStateBodyProps,\n  children,\n}: EmptyStateProps) => {\n  const {\n    variant: buttonVariant = ButtonVariant.primary,\n    onClick,\n    ...restButtonProps\n  } = buttonProps || {};\n  const { title, ...restTitleProps } = titleProps || {};\n  const { body, ...restEmptyStateBodyProps } = emptyStateBodyProps || {};\n  const {\n    variant: masEmptyStateVariant = MASEmptyStateVariant.NoItems,\n    ...restEmptyStateProps\n  } = emptyStateProps || {};\n\n  const getVariantConfig = () => {\n    let variantConfig: any = {};\n\n    switch (masEmptyStateVariant) {\n      case MASEmptyStateVariant.NoConsumerGroups:\n        variantConfig = {\n          variant: EmptyStateVariant.large,\n          icon: CubesIcon,\n          titleSize: TitleSizes.lg,\n          headingLevel: 'h2',\n        };\n        break;\n      case MASEmptyStateVariant.NoItems:\n        variantConfig = {\n          variant: EmptyStateVariant.large,\n          icon: PlusCircleIcon,\n          titleSize: TitleSizes.lg,\n          headingLevel: 'h2',\n        };\n        break;\n      case MASEmptyStateVariant.NoResult:\n        variantConfig = {\n          variant: EmptyStateVariant.large,\n          icon: SearchIcon,\n          titleSize: TitleSizes.lg,\n          headingLevel: 'h2',\n        };\n        break;\n\n      default:\n        variantConfig = {\n          variant: masEmptyStateVariant || EmptyStateVariant.full,\n          icon: emptyStateIconProps?.icon,\n          titleSize: titleProps?.size,\n          headingLevel: titleProps?.headingLevel,\n        };\n        break;\n    }\n\n    return variantConfig;\n  };\n\n  const { variant, icon, titleSize, headingLevel } = getVariantConfig();\n\n  return (\n    <>\n      <PFEmptyState variant={variant} {...restEmptyStateProps}>\n        <EmptyStateIcon icon={icon} {...emptyStateIconProps} />\n        {title && (\n          <Title\n            headingLevel={headingLevel}\n            size={titleSize}\n            {...restTitleProps}\n          >\n            {title}\n          </Title>\n        )}\n        {body && (\n          <EmptyStateBody {...restEmptyStateBodyProps}>{body}</EmptyStateBody>\n        )}\n        {buttonProps?.title && (\n          <Button\n            variant={buttonVariant}\n            onClick={onClick}\n            {...restButtonProps}\n          >\n            {buttonProps?.title}\n          </Button>\n        )}\n        {children}\n      </PFEmptyState>\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  Bullseye,\n  BullseyeProps,\n  Spinner,\n  SpinnerProps,\n} from '@patternfly/react-core';\n\nexport type MASLoadingProps = {\n  bullseyeProps?: Omit<BullseyeProps, 'children'>;\n  spinnerProps?: SpinnerProps;\n};\n\nexport const MASLoading: React.FunctionComponent<MASLoadingProps> = ({\n  bullseyeProps,\n  spinnerProps,\n}: MASLoadingProps) => (\n  <Bullseye {...bullseyeProps}>\n    <Spinner {...spinnerProps} />\n  </Bullseye>\n);\n","import React, { useCallback, FunctionComponent } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport {\n  Pagination as PFPagination,\n  PaginationProps as PFPaginationProps,\n  PaginationVariant,\n} from '@patternfly/react-core';\n\nexport type PaginationProps = Omit<PFPaginationProps, 'children' | 'ref'>;\n\nconst MASPagination: FunctionComponent<PaginationProps> = ({\n  page,\n  perPage = 10,\n  itemCount,\n  variant = PaginationVariant.top,\n  isCompact,\n  titles,\n  ...restProps\n}) => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const setSearchParam = useCallback(\n    (name: string, value: string) => {\n      searchParams.set(name, value.toString());\n    },\n    [searchParams]\n  );\n\n  const onSetPage = useCallback(\n    (_: unknown, newPage: number) => {\n      setSearchParam('page', newPage.toString());\n      history.push({\n        search: searchParams.toString(),\n      });\n    },\n    [setSearchParam, history, searchParams]\n  );\n\n  const onPerPageSelect = useCallback(\n    (_: unknown, newPerPage: number) => {\n      setSearchParam('page', '1');\n      setSearchParam('perPage', newPerPage.toString());\n      history.push({\n        search: searchParams.toString(),\n      });\n    },\n    [setSearchParam, history, searchParams]\n  );\n\n  return (\n    <PFPagination\n      itemCount={itemCount}\n      perPage={perPage}\n      page={page}\n      onSetPage={onSetPage}\n      variant={variant}\n      onPerPageSelect={onPerPageSelect}\n      isCompact={isCompact}\n      {...restProps}\n      titles={titles}\n    />\n  );\n};\n\nexport { MASPagination };\n","import React, { createContext, useContext } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport './CustomRowWrapper.css';\n\nexport type CustomRowWrapperContextProps = {\n  activeRow?: string;\n  onRowClick?: (event: MouseEvent, rowIndex: number, row: any) => void;\n  rowDataTestId?: string;\n  loggedInUser?: string;\n};\n\nconst CustomRowWrapperContext = createContext<CustomRowWrapperContextProps>({\n  activeRow: '',\n  onRowClick: () => '',\n  loggedInUser: '',\n});\n\nexport const CustomRowWrapperProvider = CustomRowWrapperContext.Provider;\n\nexport const CustomRowWrapper = (rowWrapperProps) => {\n  const { activeRow, onRowClick, rowDataTestId } = useContext(\n    CustomRowWrapperContext\n  );\n  const { trRef, className, rowProps, row, ...props } = rowWrapperProps || {};\n  const { rowIndex } = rowProps;\n  const { isExpanded, originalData } = row;\n\n  return (\n    <tr\n      data-testid={rowDataTestId}\n      tabIndex={0}\n      ref={trRef}\n      className={css(\n        className,\n        'pf-c-table-row__item',\n        activeRow &&\n          activeRow === originalData?.rowId &&\n          'pf-m-selected pf-m-selectable'\n      )}\n      hidden={isExpanded !== undefined && !isExpanded}\n      onClick={(event: MouseEvent) =>\n        onRowClick && onRowClick(event, rowIndex, row)\n      }\n      {...props}\n    />\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport {\n  TableHeader,\n  Table as PFTable,\n  TableBody,\n  TableProps as PFTableProps,\n  HeaderProps,\n  TableBodyProps,\n} from '@patternfly/react-table';\nimport { css } from '@patternfly/react-styles';\nimport {\n  CustomRowWrapper,\n  CustomRowWrapperProvider,\n  CustomRowWrapperContextProps,\n} from './CustomRowWrapper';\n\nexport type MASTableProps = CustomRowWrapperContextProps & {\n  tableProps: Omit<PFTableProps, 'children'> & {\n    shouldDefaultCustomRowWrapper?: boolean;\n  };\n  tableHeaderProps?: Omit<HeaderProps, 'children'>;\n  tableBodyProps?: Omit<TableBodyProps, 'children'>;\n  children?: React.ReactNode;\n};\n\nconst MASTable: FunctionComponent<MASTableProps> = ({\n  tableProps,\n  tableHeaderProps,\n  tableBodyProps,\n  children,\n  activeRow,\n  onRowClick,\n  rowDataTestId,\n  loggedInUser,\n}) => {\n  const {\n    cells,\n    rows,\n    actionResolver,\n    onSort,\n    sortBy,\n    'aria-label': ariaLabel,\n    variant,\n    className,\n    shouldDefaultCustomRowWrapper = false,\n    ...restProps\n  } = tableProps;\n\n  /**\n   * Handle CustomRowWrapper\n   */\n  if (shouldDefaultCustomRowWrapper) {\n    restProps['rowWrapper'] = CustomRowWrapper;\n  }\n\n  return (\n    <CustomRowWrapperProvider\n      value={{\n        activeRow,\n        onRowClick,\n        rowDataTestId,\n        loggedInUser,\n      }}\n    >\n      <PFTable\n        className={css(\n          shouldDefaultCustomRowWrapper && 'mas--table-view__table',\n          className\n        )}\n        cells={cells}\n        variant={variant}\n        rows={rows}\n        aria-label={ariaLabel}\n        actionResolver={actionResolver}\n        onSort={onSort}\n        sortBy={sortBy}\n        {...restProps}\n      >\n        <TableHeader {...tableHeaderProps} />\n        <TableBody {...tableBodyProps} />\n        {children}\n      </PFTable>\n    </CustomRowWrapperProvider>\n  );\n};\n\nexport { MASTable };\n","import React from 'react';\nimport {\n  ToolbarContent,\n  Toolbar,\n  ToolbarProps,\n  ToolbarItemProps as PFToolbarItemProps,\n  ToolbarToggleGroup,\n  ToolbarItem,\n  ToolbarToggleGroupProps,\n} from '@patternfly/react-core';\n\nexport type ToolbarItemProps = Omit<PFToolbarItemProps, 'children'> & {\n  item: React.ReactElement;\n};\nexport type MASToolbarProps = {\n  toolbarProps: Omit<ToolbarProps, 'children' | 'ref'>;\n  toggleGroupProps?: Omit<ToolbarToggleGroupProps, 'children'>;\n  toggleGroupItems?: any;\n  toolbarItems?: ToolbarItemProps[];\n};\n\nconst MASToolbar: React.FunctionComponent<MASToolbarProps> = ({\n  toolbarProps,\n  toggleGroupProps,\n  toolbarItems,\n  toggleGroupItems,\n}) => {\n  const {\n    id,\n    clearAllFilters,\n    collapseListedFiltersBreakpoint = 'md',\n    inset,\n    ...restToolbarProps\n  } = toolbarProps;\n\n  return (\n    <>\n      <Toolbar\n        id={id}\n        clearAllFilters={clearAllFilters}\n        inset={inset}\n        collapseListedFiltersBreakpoint={collapseListedFiltersBreakpoint}\n        {...restToolbarProps}\n      >\n        <ToolbarContent>\n          {toggleGroupProps && (\n            <ToolbarToggleGroup\n              toggleIcon={toggleGroupProps.toggleIcon}\n              {...toggleGroupProps}\n            >\n              {toggleGroupItems}\n            </ToolbarToggleGroup>\n          )}\n          {toolbarItems?.map((toolbarItem, index) => {\n            const {\n              key = 'mas',\n              variant,\n              className,\n              id,\n              alignment,\n              item,\n              ...restItemProps\n            } = toolbarItem;\n            return (\n              <ToolbarItem\n                key={`${key}-${index}`}\n                variant={variant}\n                className={className}\n                id={id}\n                alignment={alignment}\n                {...restItemProps}\n              >\n                {item}\n              </ToolbarItem>\n            );\n          })}\n        </ToolbarContent>\n      </Toolbar>\n    </>\n  );\n};\n\nexport { MASToolbar };\n","import { useEffect, useRef } from 'react';\n\nexport const useTimeout: any = (callback: any, delay: number) => {\n  const savedCallback = useRef<any>();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setTimeout(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n    return;\n  }, [callback, delay]);\n};\n","import React from 'react';\nimport {\n  Drawer,\n  DrawerProps,\n  DrawerContent,\n  DrawerPanelContent,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerActions,\n  DrawerCloseButton,\n  TextContent,\n  Text,\n  TextVariants,\n  Title,\n  TitleSizes,\n  DrawerPanelContentProps,\n  TextProps,\n  TitleProps,\n  DrawerContentBody,\n} from '@patternfly/react-core';\nimport { MASLoading } from '@app/components';\nimport './MASDrawer.css';\n\nexport type MASDrawerProps = DrawerProps & {\n  children: React.ReactNode;\n  panelBodyContent?: React.ReactNode;\n  onClose: () => void;\n  drawerData?: any;\n  isLoading?: boolean;\n  drawerPanelContentProps?: Omit<DrawerPanelContentProps, 'children'>;\n  drawerHeaderProps?: {\n    text?: Omit<TextProps, 'children' | 'ref'> & {\n      label: string | undefined;\n    };\n    title?: Omit<TitleProps, 'children'> & {\n      value: string | undefined;\n    };\n  };\n  ['data-ouia-app-id']?: string;\n  notRequiredDrawerContentBackground?: boolean | undefined;\n  inlineAlertMessage?: React.ReactNode;\n};\n\nexport const MASDrawer: React.FC<MASDrawerProps> = ({\n  onClose,\n  isLoading = false,\n  drawerPanelContentProps,\n  drawerHeaderProps,\n  isExpanded,\n  children,\n  panelBodyContent,\n  onExpand,\n  notRequiredDrawerContentBackground,\n  'data-ouia-app-id': dataOuiaAppId,\n  inlineAlertMessage,\n}: MASDrawerProps) => {\n  const { widths, ...restDrawerPanelContentProps } =\n    drawerPanelContentProps || {};\n  const { text, title } = drawerHeaderProps || {};\n\n  const panelContent = (\n    <DrawerPanelContent\n      widths={widths || { default: 'width_50' }}\n      {...restDrawerPanelContentProps}\n    >\n      {isLoading ? (\n        <MASLoading />\n      ) : (\n        <>\n          <DrawerHead>\n            <TextContent>\n              {text?.label && (\n                <Text\n                  component={text?.component || TextVariants.small}\n                  className={\n                    text?.className || 'kafka-ui-mas-drawer__top-label'\n                  }\n                >\n                  {text?.label}\n                </Text>\n              )}\n              {title?.value && (\n                <Title\n                  headingLevel={title?.headingLevel || 'h2'}\n                  size={title?.size || TitleSizes['xl']}\n                  className={title?.className || 'kafka-ui-mas-drawer__title'}\n                >\n                  {title?.value}\n                </Title>\n              )}\n            </TextContent>\n            <DrawerActions>\n              <DrawerCloseButton onClick={onClose} />\n            </DrawerActions>\n          </DrawerHead>\n          <DrawerPanelBody>\n            {inlineAlertMessage}\n            {panelBodyContent}\n          </DrawerPanelBody>\n        </>\n      )}\n    </DrawerPanelContent>\n  );\n\n  return (\n    <Drawer\n      isExpanded={isExpanded}\n      onExpand={onExpand}\n      data-ouia-app-id={dataOuiaAppId}\n    >\n      <DrawerContent\n        panelContent={panelContent}\n        className={\n          notRequiredDrawerContentBackground ? 'pf-m-no-background' : ''\n        }\n      >\n        <DrawerContentBody className='kafka-ui-mas-drawer__drawer-content-body'>\n          {children}\n        </DrawerContentBody>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Flex,\n  FlexItem,\n  TextContent,\n  Text,\n  TextVariants,\n  Stack,\n} from '@patternfly/react-core';\nimport { TableVariant } from '@patternfly/react-table';\nimport { ConsumerGroup } from '@rhoas/kafka-instance-sdk';\nimport { MASTable } from '@app/components';\n\nexport type ConsumerGroupDetailProps = {\n  consumerDetail: ConsumerGroup | undefined;\n};\n\nexport const ConsumerGroupDetail: React.FunctionComponent<ConsumerGroupDetailProps> =\n  ({ consumerDetail }) => {\n    const { t } = useTranslation();\n\n    const columns = [\n      t('consumerGroup.partition'),\n      `${t('consumerGroup.client_id')} + ${t('consumerGroup.member_id')}`,\n      t('consumerGroup.current_offset'),\n      t('consumerGroup.log_end_offset'),\n      t('consumerGroup.offset_lag'),\n      {\n        title: '',\n        dataLabel: t('common.action'),\n      },\n    ];\n\n    const getRows = () => {\n      return (\n        (consumerDetail &&\n          consumerDetail.consumers.map((consumergroup) => [\n            consumergroup.partition,\n            consumergroup.groupId + consumergroup.memberId,\n            consumergroup.offset,\n            consumergroup.logEndOffset,\n            consumergroup.lag,\n          ])) ||\n        []\n      );\n    };\n\n    return (\n      <Stack hasGutter>\n        <TextContent>\n          <Flex>\n            <FlexItem>\n              <Text component={TextVariants.h4} size={50}>\n                {t('consumerGroup.active_members')}\n              </Text>\n              <Text component={TextVariants.h2}>\n                {consumerDetail &&\n                  consumerDetail.consumers.reduce(function (prev, cur) {\n                    return prev + (cur.partition != -1 ? 1 : 0);\n                  }, 0)}\n              </Text>\n            </FlexItem>\n            <FlexItem>\n              <Text component={TextVariants.h4}>\n                {t('consumerGroup.partitions_with_lag')}\n              </Text>\n              <Text component={TextVariants.h2}>\n                {consumerDetail &&\n                  consumerDetail.consumers.reduce(function (prev, cur) {\n                    return prev + (cur.lag > 0 ? 1 : 0);\n                  }, 0)}\n              </Text>\n            </FlexItem>\n          </Flex>\n        </TextContent>\n        <MASTable\n          tableProps={{\n            cells: columns,\n            rows: getRows(),\n            'aria-label': t('consumerGroup.consumer_group_info_table_aria'),\n            variant: TableVariant.compact,\n          }}\n        />\n      </Stack>\n    );\n  };\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button,\n  ButtonVariant,\n  InputGroup,\n  TextInput,\n  ToolbarFilter,\n} from '@patternfly/react-core';\nimport { MASToolbar, ToolbarItemProps, MASPagination } from '@app/components';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nexport type ConsumerGroupToolbarProps = {\n  setSearch: (value: string) => void;\n  search: string;\n  total: number;\n  page: number;\n  perPage: number;\n};\n\nconst ConsumerGroupToolbar: React.FC<ConsumerGroupToolbarProps> = ({\n  search,\n  setSearch,\n  total,\n  page,\n  perPage,\n}) => {\n  const { t } = useTranslation();\n  const [searchInputValue, setSearchInputValue] = useState<string>('');\n\n  const onClear = () => {\n    setSearch('');\n  };\n\n  const onChangeInput = (value: string) => {\n    setSearchInputValue(value);\n  };\n\n  const onSearch = () => {\n    setSearch(searchInputValue);\n    setSearchInputValue('');\n  };\n\n  const onDeleteChip = () => {\n    setSearch('');\n  };\n\n  const toggleGroupItems = (\n    <>\n      <ToolbarFilter\n        chips={search ? [search] : []}\n        deleteChip={onDeleteChip}\n        categoryName={''}\n      >\n        <InputGroup>\n          <TextInput\n            name='searchConsumerGroups'\n            id='search-consumer-groups-input'\n            type='search'\n            aria-label={t('consumerGroup.consumer_group_search_input')}\n            placeholder={t('common.search')}\n            value={searchInputValue}\n            onChange={onChangeInput}\n          />\n          <Button\n            variant={ButtonVariant.control}\n            isDisabled={searchInputValue.length ? false : true}\n            onClick={onSearch}\n            aria-label={t('consumerGroup.consumer_group_search')}\n          >\n            <SearchIcon />\n          </Button>\n        </InputGroup>\n      </ToolbarFilter>\n    </>\n  );\n\n  const toolbarItems: ToolbarItemProps[] = [];\n\n  if (total && total > 0) {\n    toolbarItems.push({\n      item: (\n        <MASPagination\n          widgetId='consumer-group-pagination-options-menu-top'\n          itemCount={total}\n          page={page}\n          perPage={perPage}\n          titles={{\n            paginationTitle: t('common.minimal_pagination'),\n            perPageSuffix: t('common.per_page_suffix'),\n            toFirstPage: t('common.to_first_page'),\n            toPreviousPage: t('common.to_previous_page'),\n            toLastPage: t('common.to_last_page'),\n            toNextPage: t('common.to_next_page'),\n            optionsToggle: t('common.options_toggle'),\n            currPage: t('common.curr_page'),\n          }}\n        />\n      ),\n      variant: 'pagination',\n      alignment: { default: 'alignRight' },\n    });\n  }\n\n  return (\n    <MASToolbar\n      toolbarProps={{\n        id: 'instance-toolbar',\n        clearAllFilters: onClear,\n        collapseListedFiltersBreakpoint: 'md',\n        inset: { xl: 'insetLg' },\n      }}\n      toggleGroupProps={{ toggleIcon: '', breakpoint: 'md' }}\n      toggleGroupItems={toggleGroupItems}\n      toolbarItems={toolbarItems}\n    />\n  );\n};\n\nexport { ConsumerGroupToolbar };\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PaginationVariant } from '@patternfly/react-core';\nimport {\n  TableVariant,\n  IRowData,\n  OnSort,\n  ISortBy,\n  sortable,\n} from '@patternfly/react-table';\nimport { ConsumerGroup } from '@rhoas/kafka-instance-sdk';\nimport {\n  MASTable,\n  useRootModalContext,\n  MODAL_TYPES,\n  MASPagination,\n  EmptyState,\n  MASEmptyStateVariant,\n} from '@app/components';\nimport {\n  ConsumerGroupToolbar,\n  ConsumerGroupToolbarProps,\n} from './ConsumerGroupToolbar';\n\nexport type ConsumerGroupsTableProps = ConsumerGroupToolbarProps & {\n  consumerGroups?: ConsumerGroup[];\n  rowDataTestId?: string;\n  isDrawerOpen?: boolean;\n  onViewConsumerGroup: (consumerGroup: ConsumerGroup) => void;\n  refreshConsumerGroups?: () => void;\n  consumerGroupByTopic: boolean;\n  onSort: OnSort;\n  sortBy: ISortBy;\n};\n\nconst ConsumerGroupsTable: React.FC<ConsumerGroupsTableProps> = ({\n  consumerGroups,\n  total,\n  page,\n  perPage,\n  search,\n  setSearch,\n  rowDataTestId,\n  isDrawerOpen,\n  onViewConsumerGroup,\n  refreshConsumerGroups,\n  consumerGroupByTopic,\n  onSort,\n  sortBy,\n}) => {\n  const { t } = useTranslation();\n  const { showModal } = useRootModalContext();\n  const [activeRow, setActiveRow] = useState<string>();\n\n  const tableColumns = [\n    { title: t('consumerGroup.consumer_group_id'), transforms: [sortable] },\n    { title: t('consumerGroup.active_members') },\n    { title: t('consumerGroup.partitions_with_lag') },\n  ];\n\n  useEffect(() => {\n    if (!isDrawerOpen) {\n      setActiveRow('');\n    }\n  }, [isDrawerOpen]);\n\n  const preparedTableCells = () => {\n    const tableRow: (IRowData | string[])[] | undefined = [];\n    consumerGroups?.map((row: IRowData) => {\n      const { groupId, consumers } = row;\n      tableRow.push({\n        cells: [\n          groupId,\n          consumers.reduce(function (prev, cur) {\n            return prev + (cur.partition != -1 ? 1 : 0);\n          }, 0),\n          consumers.reduce(function (prev, cur) {\n            return prev + (cur.lag > 0 ? 1 : 0);\n          }, 0),\n        ],\n        originalData: { ...row, rowId: groupId },\n      });\n    });\n    return tableRow;\n  };\n\n  const onSelectDeleteConsumerGroup = (groupId: string) => {\n    showModal(MODAL_TYPES.DELETE_CONSUMER_GROUP, {\n      consumerName: groupId,\n      refreshConsumerGroups,\n    });\n  };\n\n  const onSelectKebabDropdownOption = (\n    event: any,\n    originalData: ConsumerGroup\n  ) => {\n    const { groupId } = originalData;\n    //set selected row for view consumer group details\n    setActiveRow(groupId);\n    onSelectDeleteConsumerGroup(groupId);\n    // Set focus back on previous selected element i.e. kebab button\n    event?.target?.parentElement?.parentElement?.previousSibling?.focus();\n  };\n\n  const onClickDrawerButton = (row: IRowData) => {\n    const { originalData } = row;\n    onViewConsumerGroup(originalData);\n    setActiveRow(originalData?.groupId);\n  };\n\n  const actionResolver = (rowData: IRowData) => {\n    if (consumerGroupByTopic) {\n      return [];\n    }\n    const originalData: ConsumerGroup = rowData.originalData;\n    const resolver = [\n      {\n        title: t('common.delete'),\n        ['data-testid']: 'tableConsumers-actionDelete',\n        onClick: (event: any) =>\n          onSelectKebabDropdownOption(event, originalData),\n      },\n      {\n        title: t('consumerGroup.view_partitions_offsets'),\n        ['data-testid']: 'tableConsumers-actionOpenDrawer',\n        onClick: (_, __, row: IRowData) => onClickDrawerButton(row),\n      },\n    ];\n    return resolver;\n  };\n\n  const onRowClick = (event: any, rowIndex: number, row: IRowData) => {\n    const { originalData } = row;\n    const clickedEventType = event?.target?.type;\n    const tagName = event?.target?.tagName;\n    // Open modal on row click except kebab button click\n    if (clickedEventType !== 'button' && tagName?.toLowerCase() !== 'a') {\n      onViewConsumerGroup(originalData);\n      setActiveRow(originalData?.groupId);\n    }\n  };\n\n  return (\n    <>\n      <ConsumerGroupToolbar\n        search={search}\n        setSearch={setSearch}\n        total={total}\n        perPage={perPage}\n        page={page}\n      />\n      <MASTable\n        tableProps={{\n          cells: tableColumns,\n          rows: preparedTableCells(),\n          'aria-label': t('consumerGroup.consumer_group_list'),\n          actionResolver: actionResolver,\n          shouldDefaultCustomRowWrapper: true,\n          variant: TableVariant.compact,\n          onSort,\n          sortBy,\n        }}\n        activeRow={activeRow}\n        onRowClick={onRowClick}\n        rowDataTestId={rowDataTestId || 'tableConsumers-row'}\n      />\n      {total < 1 && search.length > 0 && (\n        <EmptyState\n          emptyStateProps={{\n            variant: MASEmptyStateVariant.NoResult,\n          }}\n          titleProps={{\n            title: t('common.no_results_title'),\n          }}\n          emptyStateBodyProps={{\n            body: t('common.no_results_body'),\n          }}\n        />\n      )}\n      {total > 0 && (\n        <MASPagination\n          widgetId='consumer-group-pagination-options-menu-bottom'\n          itemCount={total}\n          variant={PaginationVariant.bottom}\n          page={page}\n          perPage={perPage}\n          titles={{\n            paginationTitle: t('common.full_pagination'),\n            perPageSuffix: t('common.per_page_suffix'),\n            toFirstPage: t('common.to_first_page'),\n            toPreviousPage: t('common.to_previous_page'),\n            toLastPage: t('common.to_last_page'),\n            toNextPage: t('common.to_next_page'),\n            optionsToggle: t('common.options_toggle'),\n            currPage: t('common.curr_page'),\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport { ConsumerGroupsTable };\n","import React, { useContext, useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\nimport { PageSection, PageSectionVariants } from '@patternfly/react-core';\nimport {\n  EmptyState,\n  MASEmptyStateVariant,\n  MASLoading,\n  MASDrawer,\n} from '@app/components';\nimport { getConsumerGroups } from '@app/services';\nimport { ConfigContext } from '@app/contexts';\nimport { ConsumerGroupList, ConsumerGroup } from '@rhoas/kafka-instance-sdk';\nimport { useTimeout } from '@app/hooks/useTimeOut';\nimport { ConsumerGroupDetail, ConsumerGroupsTable } from './components';\nimport { ISortBy, OnSort, SortByDirection } from '@patternfly/react-table';\n\nexport type ConsumerGroupsProps = {\n  consumerGroupByTopic: boolean;\n  topic?: string;\n  rowDataTestId?: string;\n};\n\nexport const ConsumerGroups: React.FunctionComponent<ConsumerGroupsProps> = ({\n  consumerGroupByTopic,\n  topic,\n  rowDataTestId,\n}) => {\n  const [offset, setOffset] = useState<number>(0);\n  const [order, setOrder] = useState<SortByDirection>();\n  const [orderKey, setOrderKey] = useState<'name' | undefined>();\n  const [sortBy, setSortBy] = useState<ISortBy>({\n    index: undefined,\n    direction: 'asc',\n  });\n  const [consumerGroups, setConsumerGroups] = useState<ConsumerGroupList>();\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n  const [search, setSearch] = useState<string>('');\n  const [consumerGroupDetail, setConsumerGroupDetail] =\n    useState<ConsumerGroup>();\n  const config = useContext(ConfigContext);\n  const { t } = useTranslation();\n\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const page = parseInt(searchParams.get('page') || '', 10) || 1;\n  const perPage = parseInt(searchParams.get('perPage') || '', 10) || 10;\n\n  useEffect(() => {\n    setOffset(perPage * (page - 1));\n  }, [page, perPage]);\n\n  const onSort: OnSort = (_event, index, direction) => {\n    setOrder(direction);\n    setOrderKey('name');\n    setSortBy({ index, direction });\n  };\n\n  const fetchConsumerGroups = async () => {\n    const limit = 100;\n    try {\n      await getConsumerGroups(\n        config,\n        offset,\n        limit,\n        perPage,\n        page,\n        topic,\n        search,\n        order,\n        orderKey\n      ).then((response) => {\n        setConsumerGroups(response);\n      });\n    } catch (err) {\n      //addAlert(err.response.data.error_message, AlertVariant.danger);\n    }\n  };\n\n  useEffect(() => {\n    fetchConsumerGroups();\n  }, [search, order]);\n\n  useTimeout(() => fetchConsumerGroups(), 5000);\n\n  const panelBodyContent = (\n    <ConsumerGroupDetail consumerDetail={consumerGroupDetail} />\n  );\n\n  const onClose = () => {\n    setIsExpanded(false);\n  };\n\n  const onViewConsumerGroup = (consumerGroup) => {\n    setIsExpanded(true);\n    setConsumerGroupDetail(consumerGroup);\n  };\n\n  const renderConsumerTable = () => {\n    if (consumerGroups === undefined) {\n      return (\n        <PageSection\n          className='kafka-ui-m-full-height'\n          variant={PageSectionVariants.light}\n          padding={{ default: 'noPadding' }}\n        >\n          <MASLoading />\n        </PageSection>\n      );\n    } else if (\n      (!consumerGroups?.items?.length || consumerGroups?.items?.length < 1) &&\n      search.length < 1\n    ) {\n      return (\n        <EmptyState\n          emptyStateProps={{\n            variant: MASEmptyStateVariant.NoConsumerGroups,\n          }}\n          titleProps={{\n            title: t('consumerGroup.empty_consumer_title'),\n          }}\n          emptyStateBodyProps={{\n            body: t('consumerGroup.empty_consumer_body'),\n          }}\n        />\n      );\n    } else if (consumerGroups) {\n      return (\n        <ConsumerGroupsTable\n          consumerGroups={consumerGroups?.items?.slice(\n            offset,\n            offset + perPage\n          )}\n          total={consumerGroups?.items?.length || 0}\n          page={page}\n          perPage={perPage}\n          search={search}\n          setSearch={setSearch}\n          rowDataTestId={rowDataTestId}\n          onViewConsumerGroup={onViewConsumerGroup}\n          isDrawerOpen={isExpanded}\n          refreshConsumerGroups={fetchConsumerGroups}\n          consumerGroupByTopic={consumerGroupByTopic}\n          onSort={onSort}\n          sortBy={sortBy}\n        />\n      );\n    }\n    return <></>;\n  };\n\n  return (\n    <MASDrawer\n      isExpanded={isExpanded}\n      onClose={onClose}\n      panelBodyContent={panelBodyContent}\n      drawerHeaderProps={{\n        text: { label: t('consumerGroup.consumer_group_id') },\n        title: { value: consumerGroupDetail?.groupId, headingLevel: 'h1' },\n      }}\n      data-ouia-app-id='dataPlane-consumerGroupDetails'\n    >\n      {renderConsumerTable()}\n    </MASDrawer>\n  );\n};\n"],"sourceRoot":""}