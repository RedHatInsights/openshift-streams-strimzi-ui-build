{"version":3,"sources":["webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/ellipsis-v-icon.js","webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-circle-icon.js","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/SearchTopics.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/TopicsList.tsx","webpack://kafka-ui/./src/Modules/AppNavigation/AppNavigation.tsx","webpack://kafka-ui/./src/Panels/Topics/TopicView.tsx","webpack://kafka-ui/./src/Modules/Topics/UpdateTopic/Components/UpdateTopicView.tsx","webpack://kafka-ui/./src/Modules/Topics/UpdateTopic/UpdateTopicPage.tsx","webpack://kafka-ui/./src/Panels/ConsumerGroups/ConsumerGroupsView.tsx","webpack://kafka-ui/./src/Components/ErrorBoundary/UnexpectedError.tsx","webpack://kafka-ui/./src/Components/ErrorBoundary/ErrorBoundary.tsx","webpack://kafka-ui/./src/Modules/AppNavigation/AppMastHead.tsx","webpack://kafka-ui/./src/Bootstrap/bootstrap.tsx","webpack://kafka-ui/./src/Panels/MastHead/MastHead.tsx","webpack://kafka-ui/./src/Panels/Topics/DetailView.tsx","webpack://kafka-ui/./src/Panels/Topics/CreateView.tsx","webpack://kafka-ui/./src/Panels/Topics/UpdateView.tsx","webpack://kafka-ui/./src/Panels/ConsumerGroupsByTopic/ConsumerGroupsByTopicView.tsx","webpack://kafka-ui/./src/Components/ServerAlertGroup/ServerAlertGroup.tsx","webpack://kafka-ui/./src/Contexts/Alert/Context.tsx"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","SearchTopics","search","setSearch","setFilteredTopics","setSearchTopicName","t","useTranslation","InputGroup","TextInput","id","type","placeholder","value","onChange","Button","variant","ButtonVariant","isDisabled","length","onClick","SearchIcon","TopicsListComponent","onCreateTopic","getTopicDetailsPath","onClickTopic","onDeleteTopic","onError","useState","loading","setLoading","page","setPage","perPage","setPerPage","offset","setOffset","topics","setTopics","deleteModal","setDeleteModal","filteredTopics","searchTopicName","topicName","setTopicName","addAlert","useContext","config","fetchTopic","topicsList","response","data","code","error_message","AlertVariant","useEffect","onSetPage","_event","pageNumber","onPerPageSelect","tableColumns","title","transforms","sortable","onChipDelete","rowData","items","map","topic","Link","to","e","preventDefault","partitions","Number","filter","element","key","actions","_","rowId","onDelete","onEdit","Loading","Card","className","EmptyState","emptyStateProps","titleProps","emptyStateBodyProps","body","buttonProps","Toolbar","ToolbarContent","ToolbarItem","Pagination","itemCount","widgetId","Chip","Table","TableVariant","cells","rows","slice","TableHeader","TableBody","Divider","PaginationVariant","AppNavigation","eventKey","instanceName","activeTabKey","setActiveTabKey","contentRefConsumerGroups","contentRefTopics","history","mainBreadcrumbs","Breadcrumb","BreadcrumbItem","isActive","PageSection","PageSectionVariants","Level","Title","headingLevel","iconPosition","padding","default","Tabs","activeKey","onSelect","tabIndex","Tab","TabTitleText","tabContentRef","tabContentId","isFilled","TabContent","ref","push","hidden","onDeleteConsumerGroup","consumerGroupByTopic","Topics","UpdateTopicView","onCancelUpdateTopic","onSaveTopic","numPartitions","topicData","setTopicData","topicRes","forEach","configItem","toString","status","TopicAdvanceConfig","isCreate","saveTopic","configEntries","newConfig","toLowerCase","topicSettings","handleCancel","UpdateTopicPage","kafkaName","kafkaPageLink","kafkaInstanceLink","onDeleteConsumer","activeTab","contentRefConsumerGroup","contentRefProperties","TopicDetailHead","event","isBox","UnexpectedError","updateState","EmptyStateVariant","EmptyStateIcon","icon","size","TitleSizes","EmptyStateBody","state","hasError","setState","getDerivedStateFromError","error","console","componentDidCatch","errorInfo","render","this","props","children","AppMastHead","isDropDownOpen","setIsDropDownOpen","userDropDownItems","DropdownItem","brandImgLogo","Brand","src","brandImg","alt","userDropDownToggle","DropdownToggle","onToggle","toggleIndicator","CaretDownIcon","userDropDown","Dropdown","toggle","isOpen","isPlain","dropdownItems","avatar","Avatar","HeaderTools","PageHeaderTools","PageHeader","logo","logoComponent","headerTools","I18nextProvider","i18n","basePath","getToken","Page","mainContainerId","header","ErrorBoundary","Switch","Route","path","component","exact","onUpdateTopic","onClickTopicList","useHistory","CreateTopicPage","setIsCreateTopic","goBack","onCloseCreateTopic","document","getElementById","ServerAlertGroup","alerts","onCloseAlert","AlertGroup","isToast","message","Alert","isLiveRegion","variantLabel","actionClose","AlertActionCloseButton","onClose","AlertContext","createContext","AlertProvider","setAlerts","timers","setTimers","timersKeys","timer","timeOuts","alert","includes","timeOut","setTimeout","hideAlert","clearTimeout","el","Provider","Date","getTime"],"mappings":"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","file":"496.823461ff.bundle.js","sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.EllipsisVIconConfig = {\n  name: 'EllipsisVIcon',\n  height: 512,\n  width: 192,\n  svgPath: 'M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.EllipsisVIcon = require('../createIcon').createIcon(exports.EllipsisVIconConfig);\nexports[\"default\"] = exports.EllipsisVIcon;","\"use strict\"\nexports.__esModule = true;\nexports.ExclamationCircleIconConfig = {\n  name: 'ExclamationCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExclamationCircleIcon = require('../createIcon').createIcon(exports.ExclamationCircleIconConfig);\nexports[\"default\"] = exports.ExclamationCircleIcon;","import React from 'react';\nimport {\n  Button,\n  ButtonVariant,\n  InputGroup,\n  TextInput,\n} from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nexport interface ISearchTopicsProps {\n  setSearch: (value: string) => void;\n  setSearchTopicName: (value: string) => void;\n  search: string;\n  setFilteredTopics: (value: boolean) => void;\n}\nconst SearchTopics: React.FunctionComponent<ISearchTopicsProps> = ({\n  search,\n  setSearch,\n  setFilteredTopics,\n  setSearchTopicName,\n}) => {\n  const { t } = useTranslation();\n\n  const onChangeInput = (value: string) => {\n    setSearch(value);\n  };\n\n  const onSearch = () => {\n    setSearchTopicName(search);\n    setFilteredTopics(true);\n    setSearch('');\n  };\n\n  return (\n    <InputGroup>\n      <TextInput\n        name='searchName'\n        id='search-topics-input'\n        type='search'\n        aria-label={t('topic.topic_search_input')}\n        placeholder={t('common.search')}\n        value={search}\n        onChange={onChangeInput}\n      />\n      <Button\n        variant={ButtonVariant.control}\n        isDisabled={search.length ? false : true}\n        onClick={onSearch}\n        aria-label={t('topic.topic_search')}\n      >\n        <SearchIcon />\n      </Button>\n    </InputGroup>\n  );\n};\nexport { SearchTopics };\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  AlertVariant,\n  Button,\n  Card,\n  Chip,\n  Divider,\n  Pagination,\n  PaginationVariant,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  sortable,\n} from '@patternfly/react-table';\nimport { useTimeout } from '../../../../Hooks/useTimeOut';\nimport { SearchTopics } from './SearchTopics';\nimport {\n  EmptyState,\n  MASEmptyStateVariant,\n} from '../../../../Components/EmptyState/EmptyState';\nimport { getTopics } from '../../../../Services';\nimport { DeleteTopics } from './DeleteTopicsModal';\nimport { ConfigContext } from '../../../../Contexts';\nimport { TopicsList } from '../../../../OpenApi';\nimport { Loading } from '../../../../Components/Loading/Loading';\nimport { AlertContext } from '../../../../Contexts/Alert';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport './TopicList.css';\nimport {\n  convertRetentionSize,\n  convertRetentionTime,\n} from '../../CreateTopic/utils';\n\nexport interface ITopic {\n  name: string;\n  replicas: number;\n  partitions: number;\n}\n\nexport interface ITopicProps {\n  rows: ITopic[];\n}\n\nexport interface ITopicList {\n  onCreateTopic: () => void;\n  onClickTopic: (topicName: string | undefined) => void;\n  getTopicDetailsPath: (topic: string | undefined) => string;\n  onDeleteTopic: () => void;\n  onError?: (errorCode: number, message: string) => void;\n}\n\nexport const TopicsListComponent: React.FunctionComponent<ITopicList> = ({\n  onCreateTopic,\n  getTopicDetailsPath,\n  onClickTopic,\n  onDeleteTopic,\n  onError,\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(10);\n  const [offset, setOffset] = useState<number>(0);\n  const [search, setSearch] = useState('');\n  const [topics, setTopics] = useState<TopicsList>();\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [filteredTopics, setFilteredTopics] = useState<boolean>(false);\n  const [searchTopicName, setSearchTopicName] = useState<string>('');\n  const [topicName, setTopicName] = useState<string | undefined>();\n\n  const { t } = useTranslation();\n\n  const { addAlert } = useContext(AlertContext);\n\n  const config = useContext(ConfigContext);\n\n  const fetchTopic = async () => {\n    try {\n      if (!filteredTopics) {\n        const topicsList = await getTopics(config);\n        if (topicsList) {\n          setTopics(topicsList);\n        }\n      } else {\n        const topicsList = await getTopics(config, searchTopicName);\n        if (topicsList) {\n          setTopics(topicsList);\n        }\n      }\n    } catch (err) {\n      //TODO: Update the api to allow suppress alerts if the application does not want to show them as well.\n      if (onError && err.response.data.code === 401) {\n        onError(err.response.data.code, err.response.data.error_message);\n      } else {\n        addAlert(err.response.data.error_message, AlertVariant.danger);\n      }\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchTopic();\n  }, [deleteModal, searchTopicName]);\n\n  useTimeout(() => fetchTopic(), 5000);\n\n  const onSetPage = (_event, pageNumber: number) => {\n    setPage(pageNumber);\n    setOffset(page * perPage);\n  };\n\n  const onPerPageSelect = (_event, perPage: number) => {\n    setPerPage(perPage);\n  };\n\n  const tableColumns = [\n    { title: t('common.name') },\n    { title: t('common.partitions'), transforms: [sortable] },\n    { title: t('topic.retention_time'), transforms: [sortable] },\n    { title: t('topic.retention_size'), transforms: [sortable] },\n  ];\n\n  const onChipDelete = () => {\n    setFilteredTopics(false);\n    setSearchTopicName('');\n  };\n\n  const rowData =\n    topics?.items?.map((topic) => [\n      {\n        title: (\n          <Link\n            data-testid='tableTopics-linkTopic'\n            to={getTopicDetailsPath(topic.name)}\n            onClick={(e) => {\n              e.preventDefault();\n              onClickTopic(topic.name);\n            }}\n          >\n            {topic?.name}\n          </Link>\n        ),\n      },\n      topic.partitions?.length,\n\n      convertRetentionTime(\n        Number(\n          topic.config?.filter((element) => element.key === 'retention.ms')[0]\n            ?.value || 0\n        )\n      ),\n\n      convertRetentionSize(\n        Number(\n          topic.config?.filter(\n            (element) => element.key === 'retention.bytes'\n          )[0]?.value || 0\n        )\n      ),\n    ]) || [];\n\n  const onDelete = (rowId: any) => {\n    if (topics?.items) {\n      setTopicName(topics.items[rowId].name);\n    }\n    setDeleteModal(true);\n  };\n\n  const onEdit = (rowId: any) => {\n    if (topics?.items) {\n      onClickTopic(topics.items[rowId].name);\n    }\n  };\n\n  const actions = [\n    {\n      title: t('common.delete'),\n      ['data-testid']: 'tableTopics-actionDelete',\n      onClick: (_, rowId) => onDelete(rowId),\n    },\n    {\n      title: t('common.edit'),\n      ['data-testid']: 'tableTopics-actionEdit',\n      onClick: (_, rowId) => onEdit(rowId),\n    },\n  ];\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <>\n      {deleteModal && (\n        <DeleteTopics\n          topicName={topicName}\n          setDeleteModal={setDeleteModal}\n          deleteModal={deleteModal}\n          onDeleteTopic={onDeleteTopic}\n        />\n      )}\n      <Card className='kafka-ui-m-full-height'>\n        {rowData.length < 1 && searchTopicName.length < 1 ? (\n          <EmptyState\n            emptyStateProps={{\n              variant: MASEmptyStateVariant.NoItems,\n            }}\n            titleProps={{\n              title: t('topic.empty_topics_title'),\n            }}\n            emptyStateBodyProps={{\n              body: t('topic.empty_topics_body'),\n            }}\n            buttonProps={{\n              title: t('topic.create_topic'),\n              onClick: () => onCreateTopic(),\n            }}\n          />\n        ) : (\n          <Card>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem className='pf-c-toolbar-item--search'>\n                  <SearchTopics\n                    search={search}\n                    setSearch={setSearch}\n                    setFilteredTopics={setFilteredTopics}\n                    setSearchTopicName={setSearchTopicName}\n                  />\n                </ToolbarItem>\n                <ToolbarItem>\n                  <Button\n                    id='topic-list-create-topic-button'\n                    className='topics-per-page'\n                    data-testid='tabTopics-actionCreate'\n                    onClick={() => {\n                      onCreateTopic();\n                    }}\n                  >\n                    {t('topic.create_topic')}\n                  </Button>\n                </ToolbarItem>\n                <ToolbarItem variant='pagination'>\n                  <Pagination\n                    itemCount={rowData.length}\n                    perPage={perPage}\n                    page={page}\n                    onSetPage={onSetPage}\n                    widgetId='topic-list-pagination-top'\n                    onPerPageSelect={onPerPageSelect}\n                  />\n                </ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n            {filteredTopics && (\n              <Toolbar>\n                <ToolbarContent>\n                  <ToolbarItem>\n                    <Chip key='topicFilterChip' onClick={onChipDelete}>\n                      {searchTopicName}\n                    </Chip>\n                    <Button\n                      variant='link'\n                      onClick={onChipDelete}\n                      aria-label='clear-filters'\n                    >\n                      {t('common.clear_filters')}\n                    </Button>\n                  </ToolbarItem>\n                </ToolbarContent>\n              </Toolbar>\n            )}\n            <Table\n              aria-label={t('topic.topic_list_table')}\n              variant={TableVariant.compact}\n              cells={tableColumns}\n              rows={\n                page != 1\n                  ? rowData.slice(offset, offset + perPage)\n                  : rowData.slice(0, perPage)\n              }\n              actions={actions}\n            >\n              <TableHeader />\n              <TableBody />\n            </Table>\n          </Card>\n        )}\n        <Divider />\n        {rowData.length < 1 && searchTopicName.length > 0 && (\n          <EmptyState\n            emptyStateProps={{\n              variant: MASEmptyStateVariant.NoResult,\n            }}\n            titleProps={{\n              title: t('common.no_results_title'),\n            }}\n            emptyStateBodyProps={{\n              body: t('common.no_results_body'),\n            }}\n          />\n        )}\n        {rowData.length > 0 && (\n          <Card>\n            <Divider />\n            <Pagination\n              itemCount={rowData.length}\n              perPage={perPage}\n              page={page}\n              onSetPage={onSetPage}\n              widgetId='topic-list-pagination-bottom'\n              onPerPageSelect={onPerPageSelect}\n              offset={0}\n              variant={PaginationVariant.bottom}\n            />\n          </Card>\n        )}\n      </Card>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  PageSection,\n  PageSectionVariants,\n  Title,\n  Tabs,\n  Level,\n  Tab,\n  TabTitleText,\n  TabContent,\n} from '@patternfly/react-core';\nimport { TopicsListComponent } from '../Topics/TopicList/Components/TopicsList';\nimport { ConsumerGroupsList } from '../ConsumerGroups/ConsumerGroupList/Components/ConsumerGroupList';\nimport { EllipsisVIcon } from '@patternfly/react-icons/dist/js/icons/ellipsis-v-icon';\nimport { useHistory } from 'react-router';\nimport { useTranslation } from 'react-i18next';\ninterface ITabHeaderProps {\n  eventKey: number;\n  instanceName?: string;\n}\nexport const AppNavigation: React.FunctionComponent<ITabHeaderProps> = ({\n  eventKey,\n  instanceName,\n}) => {\n  const { t } = useTranslation();\n\n  const [activeTabKey, setActiveTabKey] = useState(eventKey);\n  const contentRefConsumerGroups = React.createRef<HTMLElement>();\n  const contentRefTopics = React.createRef<HTMLElement>();\n\n  const handleTabClick = (_event, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  const history = useHistory();\n\n  const onCreateTopic = () => {\n    history.push('/topics/create');\n  };\n\n  const getTopicDetailsPath = (topic: string | undefined) => {\n    return `/topic/${topic}`;\n  };\n\n  const onClickTopic = (topic: string | undefined) => {\n    history.push(`/topic/${topic}`);\n  };\n\n  const onDeleteTopic = () => {\n    history.push('/topics');\n  };\n\n  const onDeleteConsumer = () => {\n    history.push('/consumerGroups');\n  };\n\n  const mainBreadcrumbs = (\n    <Breadcrumb>\n      <BreadcrumbItem to='#'>{t('common.kafka_instance')}</BreadcrumbItem>\n      <BreadcrumbItem to='#' isActive>\n        {instanceName ? instanceName : t('common.kafka_instance_name')}\n      </BreadcrumbItem>\n    </Breadcrumb>\n  );\n\n  return (\n    <>\n      <section className='pf-c-page__main-breadcrumb'>\n        {mainBreadcrumbs}\n      </section>\n\n      <PageSection variant={PageSectionVariants.light}>\n        <Level>\n          <Title headingLevel='h1'>\n            {instanceName ? instanceName : t('common.kafka_instance_name')}\n          </Title>\n          <Button variant='plain' iconPosition='right'>\n            <EllipsisVIcon />\n          </Button>\n        </Level>\n      </PageSection>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: 'noPadding' }}\n        className='pf-c-page__main-tabs'\n      >\n        <Tabs\n          activeKey={activeTabKey}\n          onSelect={handleTabClick}\n          data-testid='pageKafka-tabProperties'\n          className='pf-m-page-insets'\n        >\n          <Tab\n            title={<TabTitleText>{t('topic.topics')}</TabTitleText>}\n            eventKey={1}\n            data-testid='pageKafka-tabTopics'\n            id='topics-tab-section'\n            aria-label={t('topic.topics')}\n            tabContentRef={contentRefTopics}\n            tabContentId='kafka-ui-TabcontentTopicsList'\n            // className='kafka-ui-m-full-height'\n          >\n          </Tab>\n          <Tab\n            title={\n              <TabTitleText>{t('consumerGroup.consumer_groups')}</TabTitleText>\n            }\n            eventKey={2}\n            data-testid='pageKafka-tabConsumers'\n            id='consumer-groups-tab-section'\n            aria-label={t('consumerGroup.consumer_groups')}\n            tabContentRef={contentRefConsumerGroups}\n            tabContentId='kafka-ui-TabcontentConsumersList'\n            // className='kafka-ui-m-full-height'\n          >\n          </Tab>\n        </Tabs>\n      </PageSection>\n      <PageSection isFilled>\n        <TabContent eventKey={1}\n        ref={contentRefTopics}\n        id='kafka-ui-TabcontentTopicsList'\n        className='kafka-ui-m-full-height'\n        aria-label={t('topic.topics')}\n        >\n        <TopicsListComponent\n                      onCreateTopic={onCreateTopic}\n                      onClickTopic={onClickTopic}\n                      getTopicDetailsPath={getTopicDetailsPath}\n                      onDeleteTopic={onDeleteTopic}\n                    />\n        </TabContent>\n        <TabContent\n          eventKey={2}\n          ref={contentRefConsumerGroups}\n          id='kafka-ui-TabcontentConsumersList'\n          className='kafka-ui-m-full-height'\n          aria-label={t('consumerGroup.consumer_groups')}\n          hidden\n        >\n            <ConsumerGroupsList\n              onDeleteConsumerGroup={onDeleteConsumer}\n              consumerGroupByTopic={false}\n            />\n        </TabContent>\n      </PageSection>\n    </>\n  );\n};\n","import React, { FunctionComponent } from 'react';\n\nimport './style.scss';\nimport { AppNavigation } from '../../Modules/AppNavigation/AppNavigation';\nconst Topics: FunctionComponent = () => {\n  return <AppNavigation eventKey={1} />;\n};\n\nexport { Topics };\n\nexport default Topics;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { AlertVariant } from '@patternfly/react-core';\nimport '../../CreateTopic/Components/CreateTopicWizard.css';\nimport { TopicAdvanceConfig } from '../../CreateTopic/Components/TopicAdvanceConfig';\nimport { getTopic, updateTopicModel } from '../../../../Services/index';\nimport { ConfigEntry, TopicSettings } from '../../../../OpenApi/api';\nimport { DeleteTopics } from '../../TopicList/Components/DeleteTopicsModal';\nimport { AlertContext } from '../../../../Contexts/Alert';\nimport { ConfigContext } from '../../../../Contexts';\nimport { IAdvancedTopic } from '../../CreateTopic/Components/CreateTopicWizard';\nimport { convertUnits } from '../../CreateTopic/utils';\nimport { isAxiosError } from '../../../../Utils/axios';\nimport { useTranslation } from 'react-i18next';\n\nexport type UpdateTopicViewProps = {\n  topicName: string;\n  onCancelUpdateTopic: () => void;\n  onDeleteTopic: () => void;\n  onSaveTopic: () => void;\n  onError?: (errorCode: number, message: string) => void;\n};\nexport const UpdateTopicView: React.FunctionComponent<UpdateTopicViewProps> = ({\n  topicName,\n  onCancelUpdateTopic,\n  onDeleteTopic,\n  onSaveTopic,\n  onError,\n}) => {\n  const { t } = useTranslation();\n\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  const [topicData, setTopicData] = useState<IAdvancedTopic>({\n    name: topicName,\n    numPartitions: '',\n    'retention.ms': '',\n    'retention.ms.unit': 'milliseconds',\n    'retention.bytes': '',\n    'retention.bytes.unit': 'bytes',\n    'cleanup.policy': '',\n  });\n  const config = useContext(ConfigContext);\n  const { addAlert } = useContext(AlertContext);\n  const fetchTopic = async (topicName) => {\n    try {\n      const topicRes = await getTopic(topicName, config);\n      const configEntries: any = {};\n      topicRes.config?.forEach((configItem) => {\n        configEntries[configItem.key || ''] = configItem.value || '';\n      });\n\n      setTopicData({\n        ...topicData,\n        numPartitions: topicRes?.partitions?.length.toString() || '',\n        'cleanup.policy': configEntries['cleanup.policy'] || 'delete',\n        'retention.bytes': configEntries['retention.bytes'] || '-1',\n        'retention.ms': configEntries['retention.ms'] || '604800000',\n      });\n    } catch (err) {\n      if (isAxiosError(err)) {\n        if (onError) {\n          onError(err.response?.data.code, err.response?.data.error_message);\n        }\n        if (err.response?.status === 404) {\n          // then it's a non-existent topic\n          addAlert(`Topic ${topicName} does not exist`, AlertVariant.danger);\n          onCancelUpdateTopic();\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchTopic(topicName);\n  }, [topicName]);\n\n  const saveTopic = async () => {\n    const { name, ...configEntries } = convertUnits(topicData);\n\n    const newConfig: ConfigEntry[] = [];\n\n    for (const key in configEntries) {\n      // TODO Remove check when API supports setting the number of partition\n      if (key && key !== 'numPartitions') {\n        newConfig.push({\n          key,\n          value: configEntries[key].toString().toLowerCase(),\n        });\n      }\n    }\n\n    const topicSettings: TopicSettings = {\n      // TODO Re-enable when the API supports setting the number of partition\n      // numPartitions: Number(topicData.numPartitions),\n      config: newConfig,\n    };\n\n    try {\n      const updateStatus = await updateTopicModel(name, topicSettings, config);\n\n      if (updateStatus === 200) {\n        addAlert(t('topic.topic_successfully_updated'), AlertVariant.success);\n        onSaveTopic();\n      }\n    } catch (err) {\n      if (onError) {\n        onError(err.response.data.code, err.response.data.error_message);\n      }\n      addAlert(err.response.data.error_message, AlertVariant.danger);\n    }\n  };\n\n  return (\n    <>\n      <TopicAdvanceConfig\n        isCreate={false}\n        saveTopic={saveTopic}\n        handleCancel={onCancelUpdateTopic}\n        topicData={topicData}\n        setTopicData={setTopicData}\n      />\n      <br />\n      <br />\n      {deleteModal && (\n        <DeleteTopics\n          deleteModal={deleteModal}\n          setDeleteModal={setDeleteModal}\n          topicName={topicName}\n          onDeleteTopic={onDeleteTopic}\n        />\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  Tabs,\n  Tab,\n  TabTitleText,\n  PageSection,\n  PageSectionVariants,\n  TabContent,\n} from '@patternfly/react-core';\nimport { ConsumerGroupsList } from '../../ConsumerGroups/ConsumerGroupList/Components/ConsumerGroupList';\nimport { UpdateTopicView } from './Components/UpdateTopicView';\nimport { TopicDetailHead } from '../TopicDetails/Components/TopicDetailHead';\nimport { useTranslation } from 'react-i18next';\n\nexport interface UpdateTopicPageProps {\n  topicName: string;\n  kafkaName?: string;\n  kafkaPageLink?: string;\n  kafkaInstanceLink?: string;\n  onCancelUpdateTopic: () => void;\n  onDeleteTopic: () => void;\n  onSaveTopic: () => void;\n  onDeleteConsumer: () => void;\n  onError?: (errorCode: number, message: string) => void;\n  activeTab?: number;\n}\n\nexport const UpdateTopicPage: React.FunctionComponent<UpdateTopicPageProps> = ({\n  topicName,\n  kafkaName,\n  kafkaPageLink,\n  kafkaInstanceLink,\n  onCancelUpdateTopic,\n  onDeleteTopic,\n  onSaveTopic,\n  onError,\n  onDeleteConsumer,\n  activeTab = 0,\n}) => {\n  const [activeTabKey, setActiveTabKey] = useState(activeTab);\n\n  const { t } = useTranslation();\n\n  const contentRefConsumerGroup = React.createRef<HTMLElement>();\n  const contentRefProperties = React.createRef<HTMLElement>();\n\n  const handleTabClick = (event, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  return (\n    <>\n      <TopicDetailHead\n        topicName={topicName}\n        kafkaName={kafkaName}\n        kafkaPageLink={kafkaPageLink}\n        kafkaInstanceLink={kafkaInstanceLink}\n      />\n      <PageSection\n        variant={PageSectionVariants.light}\n        className='pf-c-page__main-tabs'\n        padding={{ default: 'noPadding' }}\n      >\n        <Tabs\n          onSelect={handleTabClick}\n          activeKey={activeTabKey}\n          isBox={false}\n          className='pf-m-page-insets'\n        >\n          <Tab\n            eventKey={0}\n            title={\n              <TabTitleText>{t('consumerGroup.consumer_groups')}</TabTitleText>\n            }\n            tabContentId='kafka-ui-TabcontentConsumerGroups'\n            tabContentRef={contentRefConsumerGroup}\n          >\n\n          </Tab>\n          <Tab\n            eventKey={1}\n            title={<TabTitleText>{t('common.properties')}</TabTitleText>}\n            tabContentId='kafka-ui-TabcontentProperties'\n            tabContentRef={contentRefProperties}\n          >\n          </Tab>\n        </Tabs>\n      </PageSection>\n      <PageSection\n        variant={\n          activeTabKey === 1\n            ? PageSectionVariants.light\n            : PageSectionVariants.default\n        }\n      >\n        <TabContent\n          eventKey={0}\n          id='kafka-ui-TabcontentConsumerGroups'\n          ref={contentRefConsumerGroup}\n          className='kafka-ui-m-full-height'\n          aria-label='Consumer groups.'\n          hidden={activeTab !== 0 ? true : false}\n        >\n          <ConsumerGroupsList\n            onDeleteConsumerGroup={onDeleteConsumer}\n            topic={topicName}\n            consumerGroupByTopic={true}\n          />\n        </TabContent>\n        <TabContent\n          eventKey={1}\n          id='kafka-ui-TabcontentProperties'\n          ref={contentRefProperties}\n          className='kafka-ui-m-full-height'\n          aria-label='Topic properties'\n          hidden={activeTab !== 1 ? true : false}\n        >\n          <UpdateTopicView\n            topicName={topicName}\n            onCancelUpdateTopic={onCancelUpdateTopic}\n            onDeleteTopic={onDeleteTopic}\n            onSaveTopic={onSaveTopic}\n            onError={onError}\n          />\n        </TabContent>\n      </PageSection>\n    </>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport { AppNavigation } from '../../Modules/AppNavigation/AppNavigation';\n\nexport const ConsumerGroupsView: FunctionComponent = () => {\n  return <AppNavigation eventKey={2} />;\n};\n\nexport default ConsumerGroupsView;\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-circle-icon';\nimport {\n  Button,\n  ButtonVariant,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  PageSection,\n  Title,\n  TitleSizes,\n} from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\n\ntype IUnexpectedErrorProps = {\n  updateState: (hasError: boolean) => void;\n};\n\nexport const UnexpectedError: React.FC<IUnexpectedErrorProps> = ({\n  updateState,\n}) => {\n  const { t } = useTranslation();\n  const history = useHistory();\n\n  const navigateToHome = () => {\n    updateState(false);\n    history.push('/');\n  };\n\n  return (\n    <PageSection padding={{ default: 'noPadding' }}>\n      <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={ExclamationCircleIcon} />\n        <Title headingLevel='h1' size={TitleSizes.lg}>\n          {t('common.error_boundary_title')}\n        </Title>\n        <EmptyStateBody>{t('common.unexpected_error')}</EmptyStateBody>\n        <Button variant={ButtonVariant.primary} onClick={navigateToHome}>\n          {t('common.return_to_home')}\n        </Button>\n      </EmptyState>\n    </PageSection>\n  );\n};\n","import React, { ErrorInfo } from 'react';\nimport { UnexpectedError } from './UnexpectedError';\n\ntype IErrorBoundaryProps = {\n  children: React.ReactNode;\n};\n\ntype IErrorBoundary = {\n  hasError: boolean;\n};\n\nexport class ErrorBoundary extends React.Component<\n  IErrorBoundaryProps,\n  IErrorBoundary\n> {\n  state: IErrorBoundary = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error: Error): IErrorBoundary {\n    console.error(error);\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    console.error('error:', error, errorInfo);\n  }\n\n  updateState = (hasError: boolean): void => {\n    this.setState({ hasError });\n  };\n\n  render(): React.ReactNode {\n    if (this.state.hasError) {\n      return <UnexpectedError updateState={this.updateState} />;\n    }\n    return this.props.children;\n  }\n}\n","import {\n  Avatar,\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n  PageHeader,\n  Brand,\n  PageHeaderTools,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { CaretDownIcon } from '@patternfly/react-icons';\nimport avatarImg from '../../Images/img_avatar.svg';\nimport brandImg from '../../Images/brandImg.png';\nimport { useTranslation } from 'react-i18next';\n\nexport const AppMastHead: React.FC = () => {\n  const { t } = useTranslation();\n\n  const [isDropDownOpen, setIsDropDownOpen] = useState<boolean>(false);\n  const handleUserDropDownSelect = () => {\n    setIsDropDownOpen(!isDropDownOpen);\n  };\n\n  const handleUserDropDownToggle = () => {\n    setIsDropDownOpen(!isDropDownOpen);\n  };\n\n  const userDropDownItems = [<DropdownItem key='logout'>Logout</DropdownItem>];\n  const brandImgLogo = <Brand src={brandImg} alt={t('common.red_hat_logo')} />;\n\n  const userDropDownToggle = (\n    <DropdownToggle\n      id='user-dropdown-toggle'\n      onToggle={handleUserDropDownToggle}\n      toggleIndicator={CaretDownIcon}\n    >\n      Ned Username\n    </DropdownToggle>\n  );\n\n  const userDropDown = (\n    <Dropdown\n      onSelect={handleUserDropDownSelect}\n      toggle={userDropDownToggle}\n      isOpen={isDropDownOpen}\n      isPlain\n      dropdownItems={userDropDownItems}\n    />\n  );\n\n  const avatar = (\n    <React.Fragment>\n      <Avatar src={avatarImg} className='app-masthead-avatar' alt='avatar' />\n    </React.Fragment>\n  );\n\n  const HeaderTools = (\n    <PageHeaderTools>\n      {userDropDown}\n      {avatar}\n    </PageHeaderTools>\n  );\n\n  return (\n    <PageHeader\n      logo={brandImgLogo}\n      logoComponent='h1'\n      headerTools={HeaderTools}\n    />\n  );\n};\n","import kafkai18n from '../i18n';\nimport { I18nextProvider } from 'react-i18next';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport '@patternfly/react-core/dist/styles/base.css';\nimport { ConfigContext } from '../Contexts';\nimport { Topics } from '../Panels/Topics';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport CreateTopic from '../Panels/Topics/CreateView';\nimport TopicDetail from '../Panels/Topics/DetailView';\nimport UpdateTopicView from '../Panels/Topics/UpdateView';\nimport { ConsumerGroupsView } from '../Panels/ConsumerGroups/ConsumerGroupsView';\nimport { ConsumerGroupsByTopicView } from '../Panels/ConsumerGroupsByTopic/ConsumerGroupsByTopicView';\nimport { ErrorBoundary } from '../Components/ErrorBoundary/ErrorBoundary';\nimport { AlertProvider } from '../Contexts/Alert/Context';\nimport { MastHead } from '../Panels/MastHead/MastHead';\n\n//Bootstrap i18next support\nReactDOM.render(\n  <I18nextProvider i18n={kafkai18n}>\n    <ConfigContext.Provider\n      value={{\n        basePath:\n          'http://localhost:8000/api/managed-services-strimzi-ui/v1/api',\n        getToken: async () => '',\n      }}\n    >\n      <MastHead>\n        <Router>\n          <AlertProvider>\n            <ErrorBoundary>\n              <Switch>\n                <Route path='/' component={Topics} exact />\n                <Route path='/topics' component={Topics} exact />\n                <Route path='/topic/:topicName' component={TopicDetail} exact />\n                <Route path='/topics/create' component={CreateTopic} exact />\n                <Route\n                  path='/topics/update/:topicName'\n                  component={UpdateTopicView}\n                  exact\n                />\n                <Route\n                  path='/consumer-groups'\n                  component={ConsumerGroupsView}\n                  exact\n                />\n                <Route\n                  path='/topics/consumer-groups/:topicName'\n                  component={ConsumerGroupsByTopicView}\n                  exact\n                />\n              </Switch>\n            </ErrorBoundary>\n          </AlertProvider>\n        </Router>\n      </MastHead>\n    </ConfigContext.Provider>\n  </I18nextProvider>,\n  document.getElementById('root')\n);\n","import React from 'react';\nimport { Page } from '@patternfly/react-core';\nimport { AppMastHead } from '../../Modules/AppNavigation/AppMastHead';\n\nexport type MastHeadProps = {\n  children: React.ReactNode;\n};\n\nexport const MastHead: React.FC<MastHeadProps> = ({ children }) => {\n  return (\n    <Page mainContainerId='scrollablePageMain' header={<AppMastHead />}>\n      {children}\n    </Page>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { TopicDetailGroup } from '../../Modules/Topics/TopicDetails/TopicDetailPage';\n\ntype TopicUseParams = {\n  topicName: string;\n};\n\nconst TopicDetail: FunctionComponent = () => {\n  const { topicName } = useParams<TopicUseParams>();\n  const history = useHistory();\n\n  const useUpdateTopic = () => {\n    history.push(`/topics/update/${topicName}`);\n  };\n\n  return (\n    <TopicDetailGroup\n      topicName={topicName}\n      onUpdateTopic={useUpdateTopic}\n      onClickTopicList={() => history.push('/topics')}\n      onDeleteTopic={() => {\n        history.push('/topics');\n        return;\n      }}\n      eventKey={2}\n    />\n  );\n};\n\nexport { TopicDetail };\n\nexport default TopicDetail;\n","import React, { FunctionComponent } from 'react';\nimport './style.scss';\nimport { useHistory } from 'react-router-dom';\nimport { CreateTopicPage } from 'src/Modules/Topics/CreateTopic/CreateTopicPage';\n\nconst CreateTopic: FunctionComponent = () => {\n  const history = useHistory();\n\n  const handleCancel = () => {\n    history.push('/topics');\n  };\n\n  return (\n    <CreateTopicPage\n      setIsCreateTopic={(value) => {\n        if (!value) {\n          history.goBack();\n        }\n      }}\n      onCloseCreateTopic={handleCancel}\n    />\n  );\n};\n\nexport { CreateTopic };\n\nexport default CreateTopic;\n","import React, { FunctionComponent } from 'react';\nimport './style.scss';\nimport { useHistory, useParams } from 'react-router';\nimport { UpdateTopicPage } from 'src/Modules/Topics/UpdateTopic/UpdateTopicPage';\n\ntype TopicUseParams = {\n  topicName: string;\n};\n\nconst UpdateTopic: FunctionComponent<TopicUseParams> = () => {\n  const { topicName } = useParams<TopicUseParams>();\n  const history = useHistory();\n  const onDeleteConsumer = () => {\n    history.push('/consumerGroups');\n  };\n  return (\n    <UpdateTopicPage\n      onDeleteConsumer={onDeleteConsumer}\n      topicName={topicName}\n      onCancelUpdateTopic={() => history.push('/topics')}\n      onDeleteTopic={() => {\n        history.push('/topics');\n        return;\n      }}\n      onSaveTopic={() => {\n        history.push('/topics');\n        return;\n      }}\n      activeTab={1}\n    />\n  );\n};\n\nexport { UpdateTopic };\n\nexport default UpdateTopic;\n","import React, { FunctionComponent } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { TopicDetailGroup } from '../../Modules/Topics/TopicDetails/TopicDetailPage';\n\ntype TopicUseParams = {\n  topicName: string;\n};\n\ntype TopicDetailParams = {\n  onDeleteTopic: () => void;\n};\n\nconst ConsumerGroupsByTopicView: FunctionComponent<TopicDetailParams> = ({\n  onDeleteTopic,\n}) => {\n  const { topicName } = useParams<TopicUseParams>();\n  const history = useHistory();\n\n  const useUpdateTopic = () => {\n    history.push(`/topics/update/${topicName}`);\n  };\n\n  return (\n    <TopicDetailGroup\n      topicName={topicName}\n      onUpdateTopic={useUpdateTopic}\n      onClickTopicList={() => history.push('/topics')}\n      onDeleteTopic={onDeleteTopic}\n      eventKey={1}\n    />\n  );\n};\n\nexport { ConsumerGroupsByTopicView };\n\nexport default ConsumerGroupsByTopicView;\n","import React from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertGroup,\n  AlertVariant,\n} from '@patternfly/react-core';\nimport { AlertType } from '../../Contexts/Alert';\n\ntype AlertToastGroupProps = {\n  alerts: AlertType[];\n  onCloseAlert: (key: number) => void;\n};\n\nexport const ServerAlertGroup: React.FC<AlertToastGroupProps> = ({\n  alerts,\n  onCloseAlert,\n}) => {\n  return (\n    <AlertGroup isToast>\n      {alerts.map(({ key, variant, message }) => (\n        <Alert\n          key={key}\n          isLiveRegion\n          variant={AlertVariant[variant]}\n          variantLabel=''\n          title={message}\n          actionClose={\n            <AlertActionCloseButton\n              title={message}\n              onClose={() => onCloseAlert(key)}\n            />\n          }\n        />\n      ))}\n    </AlertGroup>\n  );\n};\n","import React, { createContext, useEffect, useState } from 'react';\nimport { AlertVariant } from '@patternfly/react-core';\nimport { ServerAlertGroup } from '../../Components/ServerAlertGroup/ServerAlertGroup';\nimport { AlertType, AlertContextProps, TimeOut } from './Alert.types';\n\nexport const AlertContext = createContext<AlertContextProps>(\n  {} as AlertContextProps\n);\n\nexport const AlertProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [timers, setTimers] = useState<TimeOut[]>([]);\n\n  useEffect(() => {\n    const timersKeys = timers.map((timer) => timer?.key);\n    const timeOuts = alerts\n      .filter((alert) => !timersKeys.includes(alert.key))\n      .map((alert) => {\n        const timeOut = setTimeout(() => hideAlert(alert.key), 8000);\n        return { key: alert.key, timeOut };\n      });\n    setTimers([...timers, ...timeOuts]);\n    return () => timers.forEach((timer) => clearTimeout(timer.timeOut));\n  }, [alerts]);\n\n  const hideAlert = (key: number) => {\n    setAlerts((alerts) => [...alerts.filter((el) => el.key !== key)]);\n    setTimers((timers) => [...timers.filter((timer) => timer.key === key)]);\n  };\n\n  const createId = () => new Date().getTime();\n\n  const addAlert = (\n    message: string,\n    variant: AlertVariant = AlertVariant.default\n  ) => {\n    setAlerts([...alerts, { key: createId(), message, variant }]);\n  };\n\n  return (\n    <AlertContext.Provider value={{ addAlert }}>\n      <ServerAlertGroup alerts={alerts} onCloseAlert={hideAlert} />\n      {children}\n    </AlertContext.Provider>\n  );\n};\n"],"sourceRoot":""}