{"version":3,"sources":["webpack://kafka-ui/./src/modules/Topics/pages/MainView/MainViewFederated.tsx"],"names":["getToken","apiBasePath","kafkaName","kafkaPageLink","onError","onConnectToRoute","getConnectToRoutePath","handleInstanceDrawer","setIsOpenDeleteInstanceModal","dispatchKafkaAction","showMetrics","BrowserRouter","I18nextProvider","i18n","value","basePath","onCreateTopic","onEditTopic","topicName","activeTab"],"mappings":"iPA0EA,QAvDqE,SAAC,G,IACpEA,EAAQ,WACRC,EAAW,cACXC,EAAS,YACTC,EAAa,gBACbC,EAAO,UACPC,EAAgB,mBAChBC,EAAqB,wBACrBC,EAAoB,uBACpBC,EAA4B,+BAC5BC,EAAmB,sBACnBC,EAAW,cAYX,OAEE,kBAAC,EAAAC,cAAa,KACZ,kBAAC,EAAAC,gBAAe,CAACC,KAAM,KACrB,kBAAC,aAAsB,CAACC,MAAO,CAAEC,SAAUd,EAAaD,SAAQ,IAC9D,kBAAC,aAAyB,CACxBc,MAAO,CACLZ,UAAS,EACTC,cAAa,EACbC,QAAO,EACPC,iBAAgB,EAChBC,sBAAqB,EACrBC,qBAAoB,EACpBC,6BAA4B,EAC5BC,oBAAmB,EACnBC,YAAW,IAGb,kBAAC,KAAS,KACR,kBAAC,IAAQ,CACPM,cA7BQ,WACpBP,GAAuBA,EAAoB,mBA6B/BQ,YA1BM,SAACC,GACnBT,GACEA,EAAoB,iBAA0BS,IAyBpCC,UAAW","file":"70.6981e110.bundle.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { I18nextProvider } from 'react-i18next';\nimport {\n  FederatedContext,\n  FederatedProps,\n  ConfigContext,\n  IConfiguration,\n} from '@app/contexts';\nimport kafkai18n from '@app/i18n';\nimport { MainView } from './MainView';\nimport { KafkaActions } from '@app/utils';\nimport { RootModal } from '@app/components/RootModal';\n\nexport type MainViewFederatedProps = FederatedProps &\n  IConfiguration & {\n    apiBasePath: string;\n  };\n\nconst MainViewFederated: FunctionComponent<MainViewFederatedProps> = ({\n  getToken,\n  apiBasePath,\n  kafkaName,\n  kafkaPageLink,\n  onError,\n  onConnectToRoute,\n  getConnectToRoutePath,\n  handleInstanceDrawer,\n  setIsOpenDeleteInstanceModal,\n  dispatchKafkaAction,\n  showMetrics\n\n}) => {\n  const onCreateTopic = () => {\n    dispatchKafkaAction && dispatchKafkaAction(KafkaActions.CreateTopic);\n  };\n\n  const onEditTopic = (topicName?: string | undefined) => {\n    dispatchKafkaAction &&\n      dispatchKafkaAction(KafkaActions.UpdateTopic, topicName);\n  };\n\n  return (\n    // TODO don't add BrowserRouter here - see  https://github.com/bf2fc6cc711aee1a0c2a/mk-ui-frontend/issues/74\n    <BrowserRouter>\n      <I18nextProvider i18n={kafkai18n}>\n        <ConfigContext.Provider value={{ basePath: apiBasePath, getToken }}>\n          <FederatedContext.Provider\n            value={{\n              kafkaName,\n              kafkaPageLink,\n              onError,\n              onConnectToRoute,\n              getConnectToRoutePath,\n              handleInstanceDrawer,\n              setIsOpenDeleteInstanceModal,\n              dispatchKafkaAction,\n              showMetrics\n            }}\n          >\n            <RootModal>\n              <MainView\n                onCreateTopic={onCreateTopic}\n                onEditTopic={onEditTopic}\n                activeTab={1}\n              />\n            </RootModal>\n          </FederatedContext.Provider>\n        </ConfigContext.Provider>\n      </I18nextProvider>\n    </BrowserRouter>\n  );\n};\n\nexport default MainViewFederated;\n"],"sourceRoot":""}