{"version":3,"file":"1227.274c8040.js","mappings":"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","sources":["webpack://kafka-ui/./src/components/KafkaModal/KafkaModals.tsx","webpack://kafka-ui/./src/components/MASLoading/MASLoading.tsx","webpack://kafka-ui/./src/components/MASPagination/MASPagination.tsx","webpack://kafka-ui/./src/contexts/federated.ts","webpack://kafka-ui/./src/modules/Topics/pages/MainView/MainView.tsx","webpack://kafka-ui/./src/modules/Topics/pages/MainView/MainViewFederated.tsx"],"sourcesContent":["// A map of modal components to their lazy loaded implementations\nimport React from 'react';\n\nimport { useTranslation } from 'react-i18next';\nimport {\n  ConsumerGroupResetOffsetProps,\n  DeleteConsumerGroupProps,\n  DeleteTopicProps,\n  ManagePermissionsProps,\n  ModalRegistry,\n  ModalType,\n  PartitionsChangeProps,\n  useModal,\n} from '@rhoas/app-services-ui-shared';\n\nexport const useKafkaModals = (): ModalRegistry => {\n  const { t } = useTranslation();\n  return {\n    [ModalType.KafkaDeleteTopic]: {\n      lazyComponent: React.lazy(\n        () =>\n          import(\n            /* webpackPrefetch: true */ '@app/modules/Topics/dialogs/DeleteTopic/DeleteTopic'\n          )\n      ) as React.LazyExoticComponent<React.FunctionComponent<DeleteTopicProps>>,\n      variant: 'small',\n    },\n    [ModalType.KafkaUpdatePartitions]: {\n      lazyComponent: React.lazy(\n        () =>\n          import(\n            /* webpackPrefetch: true */ '@app/modules/Topics/dialogs/PartitionsChange/PartitionsChange'\n          )\n      ) as React.LazyExoticComponent<\n        React.FunctionComponent<PartitionsChangeProps>\n      >,\n      variant: 'small',\n    },\n    [ModalType.KafkaDeleteConsumerGroup]: {\n      lazyComponent: React.lazy(\n        () =>\n          import(\n            /* webpackPrefetch: true */ '@app/modules/ConsumerGroups/dialogs/DeleteConsumerGroup/DeleteConsumerGroup'\n          )\n      ) as React.LazyExoticComponent<\n        React.FunctionComponent<DeleteConsumerGroupProps>\n      >,\n      variant: 'small',\n    },\n    [ModalType.KafkaConsumerGroupResetOffset]: {\n      lazyComponent: React.lazy(\n        () =>\n          import(\n            /* webpackPrefetch: true */ '@app/modules/ConsumerGroups/dialogs/ConsumerGroupResetOffset/ConsumerGroupResetOffset'\n          )\n      ) as React.LazyExoticComponent<\n        React.FunctionComponent<ConsumerGroupResetOffsetProps>\n      >,\n      variant: 'large',\n    },\n    [ModalType.KafkaManagePermissions]: {\n      lazyComponent: React.lazy(\n        () =>\n          import(\n            /* webpackPrefetch: true */ '@app/modules/Permissions/dialogs/ManagePermissions/ManagePermissions'\n          )\n      ) as React.LazyExoticComponent<\n        React.FunctionComponent<ManagePermissionsProps>\n      >,\n      variant: 'large',\n      title: t('permission.manage_permissions_dialog.title'),\n    },\n  };\n};\n\nexport const KafkaModalLoader: React.FunctionComponent = () => {\n  const { registerModals } = useModal();\n  const kafkaModals = useKafkaModals();\n  registerModals(kafkaModals);\n  return <></>;\n};\n","import React from 'react';\nimport {\n  Bullseye,\n  BullseyeProps,\n  Spinner,\n  SpinnerProps,\n} from '@patternfly/react-core';\n\nexport type MASLoadingProps = {\n  bullseyeProps?: Omit<BullseyeProps, 'children'>;\n  spinnerProps?: SpinnerProps;\n};\n\nexport const MASLoading: React.FunctionComponent<MASLoadingProps> = ({\n  bullseyeProps,\n  spinnerProps,\n}: MASLoadingProps) => (\n  <Bullseye {...bullseyeProps}>\n    <Spinner {...spinnerProps} />\n  </Bullseye>\n);\n","import React, {\n  useCallback,\n  FunctionComponent,\n  createContext,\n  useContext,\n  useState,\n} from 'react';\nimport {\n  Pagination as PFPagination,\n  PaginationProps as PFPaginationProps,\n  PaginationVariant,\n} from '@patternfly/react-core';\n\nexport type PaginationProps = Omit<PFPaginationProps, 'children' | 'ref'>;\n\nexport type PaginationContextProps = {\n  page: number | undefined;\n  perPage: number | undefined;\n  setPage: (page: number | undefined) => void;\n  setPerPage: (perPage: number | undefined) => void;\n};\n\nexport const PaginationContext = createContext<\n  PaginationContextProps | undefined\n>(undefined);\nexport const usePaginationParams = (): PaginationContextProps | undefined =>\n  useContext(PaginationContext);\n\nexport const PaginationProvider: React.FC = ({ children }) => {\n  const [page, setPage] = useState<number | undefined>(1);\n  const [perPage, setPerPage] = useState<number | undefined>(10);\n\n  return (\n    <PaginationContext.Provider value={{ page, perPage, setPage, setPerPage }}>\n      {children}\n    </PaginationContext.Provider>\n  );\n};\n\nconst MASPagination: FunctionComponent<PaginationProps> = ({\n  itemCount,\n  variant = PaginationVariant.top,\n  isCompact,\n  titles,\n  ...restProps\n}) => {\n  const { setPage, setPerPage, perPage, page } = usePaginationParams() || {};\n\n  const onSetPage = useCallback((_: unknown, newPage: number) => {\n    setPage && setPage(newPage);\n  }, []);\n\n  const onPerPageSelect = useCallback((_: unknown, newPerPage: number) => {\n    setPage && setPage(1);\n    setPerPage && setPerPage(newPerPage);\n  }, []);\n\n  return (\n    <PFPagination\n      itemCount={itemCount}\n      perPage={perPage}\n      page={page}\n      onSetPage={onSetPage}\n      variant={variant}\n      onPerPageSelect={onPerPageSelect}\n      isCompact={isCompact}\n      {...restProps}\n      titles={titles}\n    />\n  );\n};\n\nexport { MASPagination };\n","import React, { useContext } from 'react';\nimport { DeleteInstanceProps } from '@rhoas/app-services-ui-shared';\n\nexport type FederatedProps = Pick<DeleteInstanceProps, 'kafka'> & {\n  activeTab?: number;\n  kafkaName?: string;\n  kafkaPageLink?: string;\n  kafkaInstanceLink?: string;\n  topicName?: string;\n  onError?: (errorCode: number, message?: string) => void;\n  handleInstanceDrawer?: (isOpen: boolean, activeTab?: string) => void;\n  setIsOpenDeleteInstanceModal?: (isOpenModal: boolean) => void;\n  showMetrics?: JSX.Element | undefined;\n  onClickCreateTopic?: () => void;\n  onEditTopic?: (topicName: string | undefined) => void;\n  onCancelUpdateTopic?: () => void;\n  updateTopic?: (topicName?: string | undefined) => void;\n  showSchemas?: JSX.Element | undefined;\n};\n\nexport const FederatedContext = React.createContext<FederatedProps | undefined>(\n  undefined\n);\nexport const useFederated = (): FederatedProps | undefined =>\n  useContext(FederatedContext);\n","import React, { lazy, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  KebabToggle,\n  Level,\n  PageSection,\n  PageSectionVariants,\n  Tab,\n  TabContent,\n  Tabs,\n  TabTitleText,\n  Title,\n} from '@patternfly/react-core';\nimport { useFederated } from '@app/contexts';\nimport { MASLoading } from '@app/components';\nimport '../style.css';\nimport { useLocation } from 'react-router-dom';\n\nconst Topics = lazy(() => import('@app/modules/Topics/Topics'));\nconst ConsumerGroups = lazy(\n  () => import('@app/modules/ConsumerGroups/ConsumerGroups')\n);\n\nconst PermissionsTableView = lazy(\n  () =>\n    import(\n      '@app/modules/Permissions/pages/PermissionsTable/PermissionsTableView'\n    )\n);\nexport type MainViewProps = {\n  onDeleteInstance?: () => void;\n};\n\nexport const MainView: React.FC<MainViewProps> = ({ onDeleteInstance }) => {\n  const { t } = useTranslation();\n  const {\n    kafkaPageLink,\n    kafkaName,\n    handleInstanceDrawer,\n    showMetrics,\n    activeTab,\n  } = useFederated() || {};\n\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  let tab;\n  if (searchParams.has('activeTab')) {\n    if ([1, 2, 3, 4].includes(Number(searchParams.get('activeTab')))) {\n      tab = Number(searchParams.get('activeTab'));\n    }\n  }\n\n  const [activeTabKey, setActiveTabKey] = useState(tab || activeTab || 1);\n  const contentRefConsumerGroups = React.createRef<HTMLElement>();\n  const contentRefTopics = React.createRef<HTMLElement>();\n  const contentRefDashboard = React.createRef<HTMLElement>();\n  const contentRefPermissions = React.createRef<HTMLElement>();\n\n  const handleTabClick = (_event, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  const [isOpen, setIsOpen] = useState<boolean>();\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const onSelect = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const onSelectKebabOption = (activeTab: string) => {\n    handleInstanceDrawer && handleInstanceDrawer(true, activeTab);\n  };\n\n  const dropdownItems = [\n    <DropdownItem\n      key='view-kafka'\n      onClick={() => onSelectKebabOption('details')}\n    >\n      {t('common.view_instance')}\n    </DropdownItem>,\n    <DropdownItem\n      key='connect-kafka'\n      onClick={() => onSelectKebabOption('connection')}\n    >\n      {t('common.view_connection')}\n    </DropdownItem>,\n    <DropdownItem key='delete-kafka' onClick={onDeleteInstance}>\n      {t('common.delete_instance')}\n    </DropdownItem>,\n  ];\n\n  const mainBreadcrumbs = (\n    <Breadcrumb>\n      <BreadcrumbItem to={kafkaPageLink || '#'}>\n        {t('common.kafka_instance')}\n      </BreadcrumbItem>\n      <BreadcrumbItem to='#' isActive>\n        {kafkaName || t('common.kafka_instance_name')}\n      </BreadcrumbItem>\n    </Breadcrumb>\n  );\n\n  return (\n    <>\n      <section className='pf-c-page__main-breadcrumb'>\n        {mainBreadcrumbs}\n      </section>\n\n      <PageSection variant={PageSectionVariants.light}>\n        <Level>\n          <Title headingLevel='h1'>\n            {kafkaName ? kafkaName : t('common.kafka_instance_name')}\n          </Title>\n          <Dropdown\n            onSelect={onSelect}\n            toggle={<KebabToggle onToggle={onToggle} id='toggle-data-plane' />}\n            isOpen={isOpen}\n            isPlain\n            dropdownItems={dropdownItems}\n            position={DropdownPosition.right}\n          />\n        </Level>\n      </PageSection>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: 'noPadding' }}\n        className='pf-c-page__main-tabs'\n      >\n        <Tabs\n          activeKey={activeTabKey}\n          onSelect={handleTabClick}\n          data-testid='pageKafka-tabProperties'\n          className='pf-m-page-insets'\n        >\n          <Tab\n            title={<TabTitleText>{t('dashboard.dashboard')}</TabTitleText>}\n            eventKey={1}\n            data-testid='pageKafka-tabDashboard'\n            id='dashboard-tab-section'\n            aria-label={t('dashboard.dashboard')}\n            tabContentRef={contentRefDashboard}\n            tabContentId='kafka-ui-TabcontentDashboard'\n          />\n          <Tab\n            title={<TabTitleText>{t('topic.topics')}</TabTitleText>}\n            eventKey={2}\n            data-testid='pageKafka-tabTopics'\n            id='topics-tab-section'\n            aria-label={t('topic.topics')}\n            tabContentRef={contentRefTopics}\n            tabContentId='kafka-ui-TabcontentTopicsList'\n          />\n          <Tab\n            title={\n              <TabTitleText>{t('consumerGroup.consumer_groups')}</TabTitleText>\n            }\n            eventKey={3}\n            data-testid='pageKafka-tabConsumers'\n            id='consumer-groups-tab-section'\n            aria-label={t('consumerGroup.consumer_groups')}\n            tabContentRef={contentRefConsumerGroups}\n            tabContentId='kafka-ui-TabcontentConsumersList'\n          />\n          <Tab\n            title={<TabTitleText>{t('permission.tab.label')}</TabTitleText>}\n            eventKey={4}\n            data-testid='pageKafka-tabPermissions'\n            id='permissions-tab-section'\n            aria-label={t('permission.tab.label')}\n            tabContentRef={contentRefPermissions}\n            tabContentId='kafka-ui-TabcontentPermissions'\n            // className='kafka-ui-m-full-height'\n          />\n        </Tabs>\n      </PageSection>\n      <PageSection isFilled>\n        <TabContent\n          eventKey={1}\n          ref={contentRefDashboard}\n          id='kafka-ui-TabcontentDashboard'\n          className='kafka-ui-m-full-height'\n          aria-label={t('dashboard.dashboard')}\n          hidden={activeTabKey !== 1}\n        >\n          {showMetrics}\n        </TabContent>\n        <TabContent\n          eventKey={2}\n          ref={contentRefTopics}\n          id='kafka-ui-TabcontentTopicsList'\n          className='kafka-ui-m-full-height'\n          aria-label={t('topic.topics')}\n          hidden={activeTabKey !== 2}\n        >\n          <React.Suspense fallback={<MASLoading />}>\n            <Topics />\n          </React.Suspense>\n        </TabContent>\n        <TabContent\n          eventKey={3}\n          ref={contentRefConsumerGroups}\n          id='kafka-ui-TabcontentConsumersList'\n          className='kafka-ui-m-full-height'\n          aria-label={t('consumerGroup.consumer_groups')}\n          hidden={activeTabKey != 3}\n        >\n          <React.Suspense fallback={<MASLoading />}>\n            <ConsumerGroups consumerGroupByTopic={false} />\n          </React.Suspense>\n        </TabContent>\n        <TabContent\n          eventKey={4}\n          ref={contentRefPermissions}\n          id='kafka-ui-TabcontentPermissions'\n          className='kafka-ui-m-full-height'\n          aria-label={t('permission.tab.label')}\n          hidden={activeTabKey != 4}\n        >\n          <React.Suspense fallback={<MASLoading />}>\n            <PermissionsTableView kafkaName={kafkaName} />\n          </React.Suspense>\n        </TabContent>\n      </PageSection>\n    </>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport { I18nextProvider } from 'react-i18next';\nimport {\n  FederatedContext,\n  FederatedProps,\n  ConfigContext,\n  IConfiguration,\n} from '@app/contexts';\nimport kafkai18n from '@app/i18n';\nimport { MainView } from './MainView';\nimport { KafkaModalLoader, PaginationProvider } from '@app/components';\nimport { ModalProvider } from '@rhoas/app-services-ui-components';\nimport {\n  useModal,\n  ModalType,\n  DeleteInstanceProps,\n} from '@rhoas/app-services-ui-shared';\n\nexport type MainViewFederatedProps = FederatedProps &\n  IConfiguration &\n  Pick<DeleteInstanceProps, 'kafka'> & {\n    apiBasePath: string;\n    redirectAfterDeleteInstance?: () => void;\n  };\n\nconst MainViewFederated: FunctionComponent<MainViewFederatedProps> = ({\n  getToken,\n  apiBasePath,\n  kafkaName,\n  kafkaPageLink,\n  onError,\n  handleInstanceDrawer,\n  setIsOpenDeleteInstanceModal,\n  showMetrics,\n  activeTab = 1,\n  kafka,\n  redirectAfterDeleteInstance,\n}) => {\n  const { showModal } = useModal<ModalType.KasDeleteInstance>();\n\n  const onDeleteInstance = () => {\n    showModal &&\n      showModal(ModalType.KasDeleteInstance, {\n        kafka,\n        onDelete: redirectAfterDeleteInstance,\n      });\n  };\n\n  return (\n    <I18nextProvider i18n={kafkai18n}>\n      <ConfigContext.Provider value={{ basePath: apiBasePath, getToken }}>\n        <FederatedContext.Provider\n          value={{\n            kafkaName,\n            kafkaPageLink,\n            onError,\n            handleInstanceDrawer,\n            setIsOpenDeleteInstanceModal,\n            showMetrics,\n            activeTab,\n            kafka,\n          }}\n        >\n          <ModalProvider>\n            <PaginationProvider>\n              <MainView onDeleteInstance={onDeleteInstance} />\n              <KafkaModalLoader />\n            </PaginationProvider>\n          </ModalProvider>\n        </FederatedContext.Provider>\n      </ConfigContext.Provider>\n    </I18nextProvider>\n  );\n};\n\nexport default MainViewFederated;\n"],"names":["KafkaModalLoader","t","registerModals","useModal","useTranslation","ModalType","lazyComponent","variant","title","MASLoading","bullseyeProps","spinnerProps","Bullseye","Spinner","PaginationContext","createContext","undefined","usePaginationParams","useContext","PaginationProvider","children","useState","page","setPage","perPage","setPerPage","Provider","value","MASPagination","itemCount","PaginationVariant","isCompact","titles","restProps","onSetPage","useCallback","_","newPage","onPerPageSelect","newPerPage","FederatedContext","useFederated","Topics","lazy","ConsumerGroups","PermissionsTableView","MainView","tab","onDeleteInstance","kafkaPageLink","kafkaName","handleInstanceDrawer","showMetrics","activeTab","location","useLocation","searchParams","URLSearchParams","search","has","includes","Number","get","activeTabKey","setActiveTabKey","contentRefConsumerGroups","contentRefTopics","contentRefDashboard","contentRefPermissions","isOpen","setIsOpen","onSelectKebabOption","dropdownItems","DropdownItem","key","onClick","mainBreadcrumbs","Breadcrumb","BreadcrumbItem","to","isActive","className","PageSection","PageSectionVariants","Level","Title","headingLevel","Dropdown","onSelect","toggle","KebabToggle","onToggle","id","isPlain","position","DropdownPosition","padding","default","Tabs","activeKey","_event","tabIndex","Tab","TabTitleText","eventKey","tabContentRef","tabContentId","isFilled","TabContent","ref","hidden","fallback","consumerGroupByTopic","getToken","apiBasePath","onError","setIsOpenDeleteInstanceModal","kafka","redirectAfterDeleteInstance","showModal","I18nextProvider","i18n","basePath","ModalProvider","onDelete"],"sourceRoot":""}