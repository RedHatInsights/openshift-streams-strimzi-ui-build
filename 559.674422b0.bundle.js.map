{"version":3,"sources":["webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/ellipsis-v-icon.js","webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-circle-icon.js","webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js","webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/search-icon.js","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/SearchTopics.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/EmptyTopics.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/EmptySearch.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/TopicsList.tsx","webpack://kafka-ui/./src/Modules/AppNavigation/AppNavigation.tsx","webpack://kafka-ui/./src/Panels/Topics/TopicView.tsx","webpack://kafka-ui/./src/Modules/Topics/UpdateTopic/Components/UpdateTopicView.tsx","webpack://kafka-ui/./src/Modules/Topics/UpdateTopic/UpdateTopicPage.tsx","webpack://kafka-ui/./src/Components/ErrorBoundary/UnexpectedError.tsx","webpack://kafka-ui/./src/Components/ErrorBoundary/ErrorBoundary.tsx","webpack://kafka-ui/./src/Modules/AppNavigation/AppMastHead.tsx","webpack://kafka-ui/./src/Bootstrap/bootstrap.tsx","webpack://kafka-ui/./src/Panels/MastHead/MastHead.tsx","webpack://kafka-ui/./src/Panels/Topics/DetailView.tsx","webpack://kafka-ui/./src/Panels/Topics/CreateView.tsx","webpack://kafka-ui/./src/Panels/Topics/UpdateView.tsx","webpack://kafka-ui/./src/Panels/ConsumerGroups/ConsumerGroupsView.tsx","webpack://kafka-ui/./src/Panels/ConsumerGroupsByTopic/ConsumerGroupsByTopicView.tsx","webpack://kafka-ui/./src/Components/ServerAlertGroup/ServerAlertGroup.tsx","webpack://kafka-ui/./src/Contexts/Alert/Context.tsx"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","SearchTopics","search","setSearch","onClear","InputGroup","SearchInput","id","type","placeholder","value","onChange","EmptyTopics","onCreateTopic","Bullseye","EmptyState","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","Button","variant","className","onClick","EmptySearch","TopicsListComponent","getTopicDetailsPath","onClickTopic","onDeleteTopic","onError","useState","loading","setLoading","page","setPage","perPage","setPerPage","offset","setOffset","topics","setTopics","filteredTopics","setFilteredTopics","deleteModal","setDeleteModal","topicName","setTopicName","addAlert","useContext","config","fetchTopic","topicsList","response","data","code","error_message","AlertVariant","useEffect","onSetPage","_event","pageNumber","onPerPageSelect","tableColumns","title","transforms","sortable","rowData","items","map","topic","byte","convertedByteValue","milliseconds","convertedValue","Link","to","e","preventDefault","partitions","length","Number","filter","element","key","Math","round","abs","trim","topicsFiltered","includes","prevState","undefined","actions","_","rowId","onDelete","onEdit","Loading","Card","Toolbar","ToolbarContent","ToolbarItem","Pagination","itemCount","widgetId","Table","TableVariant","cells","rows","slice","TableHeader","TableBody","Divider","PaginationVariant","AppNavigation","eventKey","instanceName","activeTabKey","setActiveTabKey","contentRefConsumerGroups","contentRefTopics","history","mainBreadcrumbs","Breadcrumb","BreadcrumbItem","isActive","PageSection","PageSectionVariants","Level","iconPosition","padding","default","Tabs","activeKey","onSelect","event","tabIndex","Tab","TabTitleText","tabContentRef","tabContentId","isFilled","TabContent","ref","push","hidden","onDeleteConsumerGroup","consumerGroupByTopic","Topics","UpdateTopicView","onCancelUpdateTopic","onSaveTopic","numPartitions","topicData","setTopicData","topicRes","configEntries","forEach","configItem","toString","TopicAdvanceConfig","isCreate","saveTopic","newConfig","toLowerCase","topicSettings","handleCancel","UpdateTopicPage","kafkaName","kafkaPageLink","kafkaInstanceLink","onDeleteConsumer","activeTab","contentRefConsumerGroup","contentRefProperties","TopicDetailHead","isBox","UnexpectedError","updateState","t","useTranslation","EmptyStateVariant","TitleSizes","ButtonVariant","state","hasError","setState","getDerivedStateFromError","error","console","componentDidCatch","errorInfo","render","this","props","children","AppMastHead","isDropDownOpen","setIsDropDownOpen","userDropDownItems","DropdownItem","brandImgLogo","Brand","src","brandImg","alt","userDropDownToggle","DropdownToggle","onToggle","toggleIndicator","CaretDownIcon","userDropDown","Dropdown","toggle","isOpen","isPlain","dropdownItems","avatar","Avatar","HeaderTools","PageHeaderTools","PageHeader","logo","logoComponent","headerTools","I18nextProvider","i18n","basePath","getToken","Page","mainContainerId","header","ErrorBoundary","Switch","Route","path","component","exact","onUpdateTopic","onClickTopicList","useHistory","CreateTopicPage","setIsCreateTopic","goBack","onCloseCreateTopic","document","getElementById","ServerAlertGroup","alerts","onCloseAlert","AlertGroup","isToast","message","Alert","isLiveRegion","variantLabel","actionClose","AlertActionCloseButton","onClose","AlertContext","createContext","AlertProvider","setAlerts","timers","setTimers","timersKeys","timer","timeOuts","alert","timeOut","setTimeout","hideAlert","clearTimeout","el","Provider","Date","getTime"],"mappings":"sGAEAA,EAAQ,GAAsB,CAC5BC,KAAM,gBACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,sNACTC,QAAS,EACTC,QAAS,GAEXN,EAAQ,GAAgB,mBAAoCA,EAAQ,IAC/CA,EAAQ,I,4BCT7BA,EAAQ,GAA8B,CACpCC,KAAM,wBACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,iYACTC,QAAS,EACTC,QAAS,GAEXN,EAAQ,GAAwB,mBAAoCA,EAAQ,IAC5EA,EAAA,GAAqBA,EAAQ,I,2BCT7BA,EAAQ,GAAuB,CAC7BC,KAAM,iBACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,qRACTC,QAAS,EACTC,QAAS,GAEXN,EAAQ,GAAiB,mBAAoCA,EAAQ,IACrEA,EAAA,GAAqBA,EAAQ,I,4BCT7BA,EAAQ,GAAmB,CACzBC,KAAM,aACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,4VACTC,QAAS,EACTC,QAAS,GAEXN,EAAQ,GAAa,mBAAoCA,EAAQ,IACjEA,EAAA,GAAqBA,EAAQ,I,mJCHvBO,EAA4D,SAAC,G,IACjEC,EAAM,SACNC,EAAS,YACTC,EAAO,UAUP,OACE,kBAAC,EAAAC,WAAU,KACT,kBAAC,EAAAC,YAAW,CACVX,KAAK,aACLY,GAAG,sBACHC,KAAK,SAAQ,aACF,gBACXC,YAAY,SACZC,MAAOR,EACPS,SAjBgB,SAACD,GACrBP,EAAUO,IAiBNN,QAdiB,WACrBA,IACAD,EAAU,S,SCJDS,EAAoD,SAAC,G,IAChEC,EAAa,gBAEb,OACE,kBAAC,EAAAC,SAAQ,KACP,kBAAC,EAAAC,WAAU,KACT,kBAAC,EAAAC,eAAc,CAACC,KAAM,OACtB,kBAAC,EAAAC,MAAK,CAACC,aAAa,KAAKC,KAAK,MAAI,iCAGlC,kBAAC,EAAAC,eAAc,mEAGf,kBAAC,EAAAC,OAAM,CACLC,QAAQ,UACRC,UAAU,oBACVC,QAASZ,GAAa,mB,UCtBnBa,EAAuC,WAClD,OACE,kBAAC,EAAAX,WAAU,KACT,kBAAC,EAAAC,eAAc,CAACC,KAAM,OACtB,kBAAC,EAAAC,MAAK,CAACC,aAAa,KAAKC,KAAK,MAAI,oBAGlC,kBAAC,EAAAC,eAAc,kG,gQCmCRM,EAA2D,SAAC,G,UACvEd,EAAa,gBACbe,EAAmB,sBACnBC,EAAY,eACZC,EAAa,gBACbC,EAAO,UAED,GAAwB,IAAAC,WAAS,GAAhCC,EAAO,KAAEC,EAAU,KACpB,GAAkB,IAAAF,UAAiB,GAAlCG,EAAI,KAAEC,EAAO,KACd,GAAwB,IAAAJ,UAAiB,IAAxCK,EAAO,KAAEC,EAAU,KACpB,GAAsB,IAAAN,UAAiB,GAAtCO,EAAM,KAAEC,EAAS,KAClB,GAAsB,IAAAR,UAAS,IAA9B9B,EAAM,KAAEC,EAAS,KAClB,GAAsB,IAAA6B,YAArBS,EAAM,KAAEC,EAAS,KAClB,GAAsC,IAAAV,YAArCW,EAAc,KAAEC,EAAiB,KAClC,GAAgC,IAAAZ,WAAS,GAAxCa,EAAW,KAAEC,EAAc,KAC5B,GAA4B,IAAAd,YAA3Be,EAAS,KAAEC,EAAY,KAEtBC,GAAa,IAAAC,YAAW,KAAa,SAEvCC,GAAS,IAAAD,YAAW,KAEpBE,EAAa,kB,OAAA,E,OAAA,E,EAAA,W,6lCAEI,O,sBAAA,IAAM,QAAUD,I,cAA7BE,EAAa,YAEjBX,EAAUW,GACVT,EAAkBS,I,+BAIhBtB,GAAsC,MAA3B,EAAIuB,SAASC,KAAKC,KAC/BzB,EAAQ,EAAIuB,SAASC,KAAKC,KAAM,EAAIF,SAASC,KAAKE,eAElDR,EAAS,EAAIK,SAASC,KAAKE,cAAe,EAAAC,aAAA,Q,oBAG9CxB,GAAW,G,qBAfM,K,gRAkBnB,IAAAyB,YAAU,WACRzB,GAAW,GACXkB,MACC,CAACP,KAEJ,QAAW,WAAM,OAAAO,MAAc,KAE/B,IAAMQ,GAAY,SAACC,EAAQC,GACzB1B,EAAQ0B,GACRtB,EAAUL,EAAOE,IAGb0B,GAAkB,SAACF,EAAQxB,GAC/BC,EAAWD,IAGP2B,GAAe,CACnB,CAAEC,MAAO,QACT,CAAEA,MAAO,aAAcC,WAAY,CAAC,EAAAC,WACpC,CAAEF,MAAO,iBAAkBC,WAAY,CAAC,EAAAC,WACxC,CAAEF,MAAO,iBAAkBC,WAAY,CAAC,EAAAC,YAuDpCC,IACiB,QAArB,EAAAzB,aAAc,EAAdA,EAAgB0B,aAAK,eAAEC,KAAI,SAACC,G,cA9BAC,EACxBC,EAzBwBC,EACxBC,EAqDkC,OACpC,CACEV,MACE,kBAAC,EAAAW,KAAI,eACS,wBACZC,GAAIjD,EAAoB2C,EAAM5E,MAC9B8B,QAAS,SAACqD,GACRA,EAAEC,iBACFlD,EAAa0C,EAAM5E,QAGpB4E,aAAK,EAALA,EAAO5E,OAIE,QAAhB,EAAA4E,EAAMS,kBAAU,eAAEC,QArEQP,EAwExBQ,QACsE,QAApE,EAAY,QAAZ,EAAAX,EAAMpB,cAAM,eAAEgC,QAAO,SAACC,GAAY,MAAgB,iBAAhBA,EAAQC,OAAwB,UAAE,eAChE3E,QAAS,IAxEG,IAAlBgE,EACK,YACEA,EAAe,IACH,IAAjBA,EAA2BA,iBACnBA,kBACHA,GAAgB,KAASA,EAAe,MACjDC,EAAiBD,EAAe,IAET,IADvBC,EAAiBW,KAAKC,MAAuB,IAAjBZ,GAAwB,KACnBA,YACrBA,cACHD,GAAgB,MAASA,EAAe,QACjDC,EAAiBD,EAAe,KAET,IADvBC,EAAiBW,KAAKC,MAAuB,IAAjBZ,GAAwB,KACnBA,UACrBA,YACHD,GAAgB,QACzBC,EAAiBD,EAAe,OAChCC,EAAiBW,KAAKC,MAAuB,IAAjBZ,GAAwB,KAC7CA,cAHF,IAOqBH,EAuDxBU,QAGM,QAFJ,EAAY,QAAZ,EAAAX,EAAMpB,cAAM,eAAEgC,QACZ,SAACC,GAAY,MAAgB,oBAAhBA,EAAQC,OACrB,UAAE,eAAE3E,QAAS,IAxDP,IAAV8D,EACK,YACEc,KAAKE,IAAIhB,GAAQ,IACb,IAATA,EAAmBA,UACXA,WACHc,KAAKE,IAAIhB,IAAS,KAAQc,KAAKE,IAAIhB,GAAQ,IAEzB,IAD3BC,EAAqBD,EAAO,KAEnBC,cACGA,eACHa,KAAKE,IAAIhB,IAAS,KAAWc,KAAKE,IAAIhB,GAAQ,IAE5B,IAD3BC,EAAqBD,EAAO,KAEnBC,cACGA,eACHa,KAAKE,IAAIhB,IAAS,KAAcc,KAAKE,IAAIhB,GAAQ,KAE/B,IAD3BC,EAAqBD,EAAO,KAEnBC,cACGA,eACHa,KAAKE,IAAIhB,IAAS,KAEA,IAD3BC,EAAqBD,EAAO,MAEnBC,cACGA,oBAJP,SAuCD,IAER,IAAAd,YAAU,WACR,GACEzD,GACiB,IAAjBA,EAAOuF,SACPhD,aAAM,EAANA,EAAQ4B,QACR5B,EAAO4B,MAAMY,OAAS,EACtB,CACA,IAAM,EAAexC,aAAM,EAANA,EAAQ4B,MAAMc,QACjC,SAACO,GACC,OAAAA,aAAc,EAAdA,EAAgB/F,OAAQ+F,EAAe/F,KAAKgG,SAASzF,MAEzD0C,GAAkB,SAACgD,GACjB,OAAAA,EACI,EAAD,KACMA,GAAS,CACZvB,MAAO,SAETwB,UAGNjD,EAAkBH,KAEnB,CAACvC,EAAQuC,IAEZ,IAgBMqD,GAAU,E,GAEZ7B,MAAO,UACP,EAAC,eAAgB,2BACjB,EAAAxC,QAAS,SAACsE,EAAGC,GAAU,OAjBV,SAACA,IACZrD,aAAc,EAAdA,EAAgB0B,QAClBrB,EAAaL,EAAe0B,MAAM2B,GAAOrG,MAE3CmD,GAAe,GAaUmD,CAASD,I,OAGhC/B,MAAO,QACP,EAAC,eAAgB,yBACjB,EAAAxC,QAAS,SAACsE,EAAGC,GAAU,OAfZ,SAACA,IACVrD,aAAc,EAAdA,EAAgB0B,QAClBxC,EAAac,EAAe0B,MAAM2B,GAAOrG,MAalBuG,CAAOF,I,IAIlC,OAAI/D,EACK,kBAACkE,EAAA,EAAO,MAIf,oCACGtD,GACC,kBAAC,IAAY,CACXE,UAAWA,EACXD,eAAgBA,EAChBD,YAAaA,EACbf,cAAeA,IAGnB,kBAAC,EAAAsE,KAAI,CAAC5E,UAAU,0BACb4C,GAAQa,OAAS,GAAK/E,EAAO+E,OAAS,EACrC,kBAACrE,EAAW,CAACC,cAAeA,IAE5B,oCACE,kBAAC,EAAAwF,QAAO,KACN,kBAAC,EAAAC,eAAc,KACb,kBAAC,EAAAC,YAAW,CAAC/E,UAAU,6BACrB,kBAACvB,EAAY,CACXG,QApDF,WACdwC,EAAkBH,IAoDFvC,OAAQA,EACRC,UAAWA,KAGf,kBAAC,EAAAoG,YAAW,KACV,kBAAC,EAAAjF,OAAM,CACLf,GAAG,iCACHiB,UAAU,kBAAiB,cACf,yBACZC,QAAS,WACPZ,MACD,iBAKL,kBAAC,EAAA0F,YAAW,CAAChF,QAAQ,cACnB,kBAAC,EAAAiF,WAAU,CACTC,UAAWrC,GAAQa,OACnB5C,QAASA,EACTF,KAAMA,EACNyB,UAAWA,GACX8C,SAAS,4BACT3C,gBAAiBA,QAMzB,kBAAC,EAAA4C,MAAK,cACO,gBACXpF,QAAS,EAAAqF,aAAA,QACTC,MAAO7C,GACP8C,KACU,GAAR3E,EACIiC,GAAQ2C,MAAMxE,EAAQA,EAASF,GAC/B+B,GAAQ2C,MAAM,EAAG1E,GAEvByD,QAASA,IAET,kBAAC,EAAAkB,YAAW,MACZ,kBAAC,EAAAC,UAAS,QAIhB,kBAAC,EAAAC,QAAO,MACP9C,GAAQa,OAAS,GAAK/E,EAAO+E,OAAS,GAAK,kBAACvD,EAAW,MACvD0C,GAAQa,OAAS,GAChB,kBAAC,EAAAuB,WAAU,CACTC,UAAWrC,GAAQa,OACnB5C,QAASA,EACTF,KAAMA,EACNyB,UAAWA,GACX8C,SAAS,+BACT3C,gBAAiBA,GACjBxB,OAAQ,EACRhB,QAAS,EAAA4F,kBAAA,Y,6BCtTRC,EAA0D,SAAC,G,IACtEC,EAAQ,WACRC,EAAY,eAEN,GAAkC,IAAAtF,UAASqF,GAA1CE,EAAY,KAAEC,EAAe,KAC9BC,EAA2B,gBAC3BC,EAAmB,gBAKnBC,GAAU,UAsBVC,EACJ,kBAAC,EAAAC,WAAU,KACT,kBAAC,EAAAC,eAAc,CAACjD,GAAG,KAAG,mBACtB,kBAAC,EAAAiD,eAAc,CAACjD,GAAG,IAAIkD,UAAQ,GAC5BT,GAA8B,wBAKrC,OACE,oCACE,6BAAS9F,UAAU,8BAChBoG,GAGH,kBAAC,EAAAI,YAAW,CAACzG,QAAS,EAAA0G,oBAAA,OACpB,kBAAC,EAAAC,MAAK,KACJ,kBAAC,EAAAhH,MAAK,CAACC,aAAa,MACjBmG,GAA8B,uBAEjC,kBAAC,EAAAhG,OAAM,CAACC,QAAQ,QAAQ4G,aAAa,SACnC,kBAAC,KAAa,SAIpB,kBAAC,EAAAH,YAAW,CACVzG,QAAS,EAAA0G,oBAAA,MACTG,QAAS,CAAEC,QAAS,aACpB7G,UAAU,wBAEV,kBAAC,EAAA8G,KAAI,CACHC,UAAWhB,EACXiB,SA1De,SAACC,EAAOC,GAC7BlB,EAAgBkB,IAyDc,cACZ,0BACZlH,UAAU,oBAEV,kBAAC,EAAAmH,IAAG,CACF1E,MAAO,kBAAC,EAAA2E,aAAY,eACpBvB,SAAU,EAAC,cACC,sBACZ9G,GAAG,qBAAoB,aACZ,cACXsI,cAAenB,EACfoB,aAAa,kCAEf,kBAAC,EAAAH,IAAG,CACF1E,MAAO,kBAAC,EAAA2E,aAAY,wBACpBvB,SAAU,EAAC,cACC,yBACZ9G,GAAG,8BAA6B,aACrB,uBACXsI,cAAepB,EACfqB,aAAa,uCAInB,kBAAC,EAAAd,YAAW,CAACe,UAAQ,GACnB,kBAAC,EAAAC,WAAU,CACT3B,SAAU,EACV4B,IAAKvB,EACLnH,GAAG,gCACHiB,UAAU,yBAAwB,aACvB,WAEX,kBAACG,EAAmB,CAClBd,cArFY,WACpB8G,EAAQuB,KAAK,mBAqFLrH,aA9EW,SAAC0C,GACpBoD,EAAQuB,KAAK,UAAU3E,IA8Ef3C,oBAnFkB,SAAC2C,GAC3B,MAAO,UAAUA,GAmFTzC,cA5EY,WACpB6F,EAAQuB,KAAK,eA8ET,kBAAC,EAAAF,WAAU,CACT3B,SAAU,EACV4B,IAAKxB,EACLlH,GAAG,mCACHiB,UAAU,yBAAwB,aACvB,mBACX2H,QAAM,GAEN,kBAAC,IAAkB,CACjBC,sBApFe,WACvBzB,EAAQuB,KAAK,oBAoFLG,sBAAsB,QCpI5BC,EAA4B,WAChC,OAAO,kBAAClC,EAAa,CAACC,SAAU,K,olDCcrBkC,EAAiE,SAAC,G,IAC7ExG,EAAS,YACTyG,EAAmB,sBACnB1H,EAAa,gBACb2H,EAAW,cACX1H,EAAO,UAED,GAAgC,IAAAC,WAAS,GAAxCa,EAAW,KAAEC,EAAc,KAE5B,GAA4B,IAAAd,UAAyB,CACzDrC,KAAMoD,EACN2G,cAAe,GACf,eAAgB,GAChB,oBAAqB,eACrB,kBAAmB,GACnB,uBAAwB,QACxB,iBAAkB,KAPbC,EAAS,KAAEC,EAAY,KASxBzG,GAAS,IAAAD,YAAW,KAClBD,GAAa,IAAAC,YAAW,KAAa,SA+D7C,OA7CA,IAAAS,YAAU,YACR,W,mEAlBiB,SAAOZ,GAAS,mC,8DAChB,UAAM,QAASA,EAAWI,I,cAArC0G,EAAW,SAEXC,EAAqB,GACZ,QAAf,EAAAD,EAAS1G,cAAM,SAAE4G,SAAQ,SAACC,GACxBF,EAAcE,EAAW3E,KAAO,IAAM2E,EAAWtJ,OAAS,MAG5DkJ,EAAa,OACRD,GAAS,CACZD,eAAmC,QAApB,EAAAG,aAAQ,EAARA,EAAU7E,kBAAU,eAAEC,OAAOgF,aAAc,GAC1D,iBAAkBH,EAAc,mBAAqB,SACrD,kBAAmBA,EAAc,oBAAsB,KACvD,eAAgBA,EAAc,iBAAmB,e,WAMjD1G,CAAWL,G,UADb,KAGC,IA0CD,oCACE,kBAACmH,EAAA,EAAkB,CACjBC,UAAU,EACVC,UA3CY,qD,oEAKhB,IAAW/E,KAJL,GAA6B,QAAasE,GAAxChK,EAAI,OAAKmK,E,yUAAa,GAAxB,UAEAO,EAA2B,GAEfP,EAEZzE,GAAe,kBAARA,GACTgF,EAAUnB,KAAK,CACb7D,IAAG,EACH3E,MAAOoJ,EAAczE,GAAK4E,WAAWK,gBAKrCC,EAA+B,CAGnCpH,OAAQkH,G,iBAIa,O,sBAAA,IAAM,QAAiB1K,EAAM4K,EAAepH,I,cAE5C,MAFA,WAGnBF,EACE,2DACA,EAAAS,aAAA,SAEF+F,K,+BAGE1H,GACFA,EAAQ,EAAIuB,SAASC,KAAKC,KAAM,EAAIF,SAASC,KAAKE,eAEpDR,EAAS,EAAIK,SAASC,KAAKE,cAAe,EAAAC,aAAA,Q,+BASxC8G,aAAchB,EACdG,UAAWA,EACXC,aAAcA,IAEhB,6BACA,6BACC/G,GACC,kBAAC,IAAY,CACXA,YAAaA,EACbC,eAAgBA,EAChBC,UAAWA,EACXjB,cAAeA,M,UC3FZ2I,EAAiE,SAAC,G,IAC7E1H,EAAS,YACT2H,EAAS,YACTC,EAAa,gBACbC,EAAiB,oBACjBpB,EAAmB,sBACnB1H,EAAa,gBACb2H,EAAW,cACX1H,EAAO,UACP8I,EAAgB,mBAChB,IAAAC,iBAAS,IAAG,IAAC,EAEP,GAAkC,IAAA9I,UAAS8I,GAA1CvD,EAAY,KAAEC,EAAe,KAE9BuD,EAA0B,gBAC1BC,EAAuB,gBAM7B,OACE,oCACE,kBAACC,EAAA,EAAe,CACdlI,UAAWA,EACX2H,UAAWA,EACXC,cAAeA,EACfC,kBAAmBA,IAErB,kBAAC,EAAA5C,YAAW,CACVzG,QAAS,EAAA0G,oBAAA,MACTzG,UAAU,uBACV4G,QAAS,CAAEC,QAAS,cAEpB,kBAAC,EAAAC,KAAI,CACHE,SAlBe,SAACC,EAAOC,GAC7BlB,EAAgBkB,IAkBVH,UAAWhB,EACX2D,OAAO,EACP1J,UAAU,oBAEV,kBAAC,EAAAmH,IAAG,CACFtB,SAAU,EACVpD,MAAO,kBAAC,EAAA2E,aAAY,wBACpBE,aAAa,oCACbD,cAAekC,IAEjB,kBAAC,EAAApC,IAAG,CACFtB,SAAU,EACVpD,MAAO,kBAAC,EAAA2E,aAAY,mBACpBE,aAAa,gCACbD,cAAemC,MAIrB,kBAAC,EAAAhD,YAAW,CACVzG,QACmB,IAAjBgG,EACI,EAAAU,oBAAA,MACA,EAAAA,oBAAA,SAGN,kBAAC,EAAAe,WAAU,CACT3B,SAAU,EACV9G,GAAG,oCACH0I,IAAK8B,EACLvJ,UAAU,yBAAwB,aACvB,mBACX2H,OAAsB,IAAd2B,GAER,kBAAC,IAAkB,CACjB1B,sBAAuByB,EACvBtG,MAAOxB,EACPsG,sBAAsB,KAG1B,kBAAC,EAAAL,WAAU,CACT3B,SAAU,EACV9G,GAAG,gCACH0I,IAAK+B,EACLxJ,UAAU,yBAAwB,aACvB,mBACX2H,OAAsB,IAAd2B,GAER,kBAACvB,EAAe,CACdxG,UAAWA,EACXyG,oBAAqBA,EACrB1H,cAAeA,EACf2H,YAAaA,EACb1H,QAASA,Q,0BC9FRoJ,EAAmD,SAAC,G,IAC/DC,EAAW,cAEHC,GAAM,IAAAC,kBAAgB,EACxB3D,GAAU,UAOhB,OACE,kBAAC,EAAAK,YAAW,CAACI,QAAS,CAAEC,QAAS,cAC/B,kBAAC,EAAAtH,WAAU,CAACQ,QAAS,EAAAgK,kBAAA,MACnB,kBAAC,EAAAvK,eAAc,CAACC,KAAM,OACtB,kBAAC,EAAAC,MAAK,CAACC,aAAa,KAAKC,KAAM,EAAAoK,WAAA,IAC5BH,EAAE,8BAEL,kBAAC,EAAAhK,eAAc,KAAEgK,EAAE,2BACnB,kBAAC,EAAA/J,OAAM,CAACC,QAAS,EAAAkK,cAAA,QAAuBhK,QAbvB,WACrB2J,GAAY,GACZzD,EAAQuB,KAAK,OAYNmC,EAAE,2B,kcC7Bb,yE,OAIE,EAAAK,MAAwB,CACtBC,UAAU,GAaZ,EAAAP,YAAc,SAACO,GACb,EAAKC,SAAS,CAAED,SAAQ,K,EAS5B,OA5BmC,OAQ1B,EAAAE,yBAAP,SAAgCC,GAG9B,OAFAC,QAAQD,MAAMA,GAEP,CAAEH,UAAU,IAGrB,YAAAK,kBAAA,SAAkBF,EAAcG,GAC9BF,QAAQD,MAAM,SAAUA,EAAOG,IAOjC,YAAAC,OAAA,WACE,OAAIC,KAAKT,MAAMC,SACN,kBAACR,EAAe,CAACC,YAAae,KAAKf,cAErCe,KAAKC,MAAMC,UAEtB,EA5BA,CAAmC,e,8BCGtBC,EAAwB,WAC7B,OAAsC,IAAAtK,WAAkB,GAAvDuK,EAAc,KAAEC,EAAiB,KASlCC,EAAoB,CAAC,kBAAC,EAAAC,aAAY,CAACrH,IAAI,UAAQ,WAC/CsH,EAAe,kBAAC,EAAAC,MAAK,CAACC,IAAKC,EAAUC,IAAK,iBAE1CC,EACJ,kBAAC,EAAAC,eAAc,CACb1M,GAAG,uBACH2M,SAV6B,WAC/BV,GAAmBD,IAUjBY,gBAAiB,EAAAC,eAAa,gBAM5BC,EACJ,kBAAC,EAAAC,SAAQ,CACP9E,SAvB6B,WAC/BgE,GAAmBD,IAuBjBgB,OAAQP,EACRQ,OAAQjB,EACRkB,SAAO,EACPC,cAAejB,IAIbkB,EACJ,kBAAC,aAAc,KACb,kBAAC,EAAAC,OAAM,CAACf,IAAK,EAAWrL,UAAU,sBAAsBuL,IAAI,YAI1Dc,EACJ,kBAAC,EAAAC,gBAAe,KACbT,EACAM,GAIL,OACE,kBAAC,EAAAI,WAAU,CACTC,KAAMrB,EACNsB,cAAc,KACdC,YAAaL,KC7CnB,WACE,kBAAC,EAAAM,gBAAe,CAACC,KAAM,KACrB,kBAAC,aAAsB,CACrB1N,MAAO,CACL2N,SACE,+DACFC,SAAU,kB,OAAA,E,OAAA,E,EAAA,kB,oiCAAA,mBAAY,iB,YAAZ,K,iRAGZ,kBAAC,KAAoB,KACnB,mBCrByC,SAAC,G,IAAEjC,EAAQ,WAC1D,OACE,kBAAC,EAAAkC,KAAI,CAACC,gBAAgB,iBAAiBC,OAAQ,kBAACnC,EAAW,OACxDD,KDkBU,KACP,kBAAC,aAAM,KACL,kBAAC,IAAa,KACZ,kBAACqC,EAAa,KACZ,kBAAC,EAAAC,OAAM,KACL,kBAAC,EAAAC,MAAK,CAACC,KAAK,IAAIC,UAAWxF,EAAQyF,OAAK,IACxC,kBAAC,EAAAH,MAAK,CAACC,KAAK,UAAUC,UAAWxF,EAAQyF,OAAK,IAC9C,kBAAC,EAAAH,MAAK,CACJC,KAAK,oBACLC,UE9BmB,WAC7B,IAAA/L,GAAc,UAA2B,UAC3C4E,GAAU,UAMhB,OACE,kBAAC,IAAgB,CACf5E,UAAWA,EACXiM,cAPmB,WACrBrH,EAAQuB,KAAK,kBAAkBnG,IAO7BkM,iBAAkB,WAAM,OAAAtH,EAAQuB,KAAK,YACrCpH,cAAe,WACb6F,EAAQuB,KAAK,YAGf7B,SAAU,KFcI0H,OAAK,IAEP,kBAAC,EAAAH,MAAK,CAACC,KAAK,iBAAiBC,UGpCR,WACrC,IAAMnH,GAAU,IAAAuH,cAMhB,OACE,kBAACC,EAAA,EAAe,CACdC,iBAAkB,SAAC1O,GACZA,GACHiH,EAAQ0H,UAGZC,mBAXiB,WACnB3H,EAAQuB,KAAK,eHgCsD6F,OAAK,IAC1D,kBAAC,EAAAH,MAAK,CACJC,KAAK,4BACLC,UInCmC,WAC7C,IAAA/L,GAAc,UAA2B,UAC3C4E,GAAU,UAIhB,OACE,kBAAC8C,EAAe,CACdI,iBALqB,WACvBlD,EAAQuB,KAAK,oBAKXnG,UAAWA,EACXyG,oBAAqB,WAAM,OAAA7B,EAAQuB,KAAK,YACxCpH,cAAe,WACb6F,EAAQuB,KAAK,YAGfO,YAAa,WACX9B,EAAQuB,KAAK,YAGf4B,UAAW,KJiBGiE,OAAK,IAEP,kBAAC,EAAAH,MAAK,CACJC,KAAK,kBACLC,UK9CiC,WACnD,OAAO,kBAAC1H,EAAa,CAACC,SAAU,KL8Cd0H,OAAK,IAEP,kBAAC,EAAAH,MAAK,CACJC,KAAK,oCACLC,UM1CoD,SAAC,G,IACvEhN,EAAa,gBAELiB,GAAc,UAA2B,UAC3C4E,GAAU,UAMhB,OACE,kBAAC,IAAgB,CACf5E,UAAWA,EACXiM,cAPmB,WACrBrH,EAAQuB,KAAK,kBAAkBnG,IAO7BkM,iBAAkB,WAAM,OAAAtH,EAAQuB,KAAK,YACrCpH,cAAeA,EACfuF,SAAU,KN2BI0H,OAAK,YAUvBQ,SAASC,eAAe,U,8EOnDbC,EAAmD,SAAC,G,IAC/DC,EAAM,SACNC,EAAY,eAEZ,OACE,kBAAC,EAAAC,WAAU,CAACC,SAAO,GAChBH,EAAOpL,KAAI,SAAC,G,IAAEe,EAAG,MAAE9D,EAAO,UAAEuO,EAAO,UAAO,OACzC,kBAAC,EAAAC,MAAK,CACJ1K,IAAKA,EACL2K,cAAY,EACZzO,QAAS,EAAAmC,aAAanC,GACtB0O,aAAa,GACbhM,MAAO6L,EACPI,YACE,kBAAC,EAAAC,uBAAsB,CACrBlM,MAAO6L,EACPM,QAAS,WAAM,OAAAT,EAAatK,c,kLCzB7BgL,GAAe,IAAAC,eAC1B,IAGWC,EAAyD,SAAC,G,IACrElE,EAAQ,WAEF,GAAsB,IAAArK,UAAsB,IAA3C0N,EAAM,KAAEc,EAAS,KAClB,GAAsB,IAAAxO,UAAoB,IAAzCyO,EAAM,KAAEC,EAAS,MAExB,IAAA/M,YAAU,WACR,IAAMgN,EAAaF,EAAOnM,KAAI,SAACsM,GAAU,OAAAA,aAAK,EAALA,EAAOvL,OAC1CwL,EAAWnB,EACdvK,QAAO,SAAC2L,GAAU,OAACH,EAAWhL,SAASmL,EAAMzL,QAC7Cf,KAAI,SAACwM,GACJ,IAAMC,EAAUC,YAAW,WAAM,OAAAC,EAAUH,EAAMzL,OAAM,KACvD,MAAO,CAAEA,IAAKyL,EAAMzL,IAAK0L,QAAO,MAGpC,OADAL,EAAU,EAAD,KAAKD,GAAWI,IAClB,WAAM,OAAAJ,EAAO1G,SAAQ,SAAC6G,GAAU,OAAAM,aAAaN,EAAMG,eACzD,CAACrB,IAEJ,IAAMuB,EAAY,SAAC5L,GACjBmL,GAAU,SAACd,GAAW,YAAIA,EAAOvK,QAAO,SAACgM,GAAO,OAAAA,EAAG9L,MAAQA,SAC3DqL,GAAU,SAACD,GAAW,YAAIA,EAAOtL,QAAO,SAACyL,GAAU,OAAAA,EAAMvL,MAAQA,UAYnE,OACE,kBAACgL,EAAae,SAAQ,CAAC1Q,MAAO,CAAEuC,SARjB,SACf6M,EACAvO,QAAA,IAAAA,MAAwB,EAAAmC,aAAA,SAExB8M,EAAU,EAAD,KAAKd,GAAM,CAAE,CAAErK,KANH,IAAIgM,MAAOC,UAMSxB,QAAO,EAAEvO,QAAO,SAKvD,kBAAC,IAAgB,CAACmO,OAAQA,EAAQC,aAAcsB,IAC/C5E,K","file":"559.674422b0.bundle.js","sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.EllipsisVIconConfig = {\n  name: 'EllipsisVIcon',\n  height: 512,\n  width: 192,\n  svgPath: 'M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.EllipsisVIcon = require('../createIcon').createIcon(exports.EllipsisVIconConfig);\nexports[\"default\"] = exports.EllipsisVIcon;","\"use strict\"\nexports.__esModule = true;\nexports.ExclamationCircleIconConfig = {\n  name: 'ExclamationCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExclamationCircleIcon = require('../createIcon').createIcon(exports.ExclamationCircleIconConfig);\nexports[\"default\"] = exports.ExclamationCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PlusCircleIcon = require('../createIcon').createIcon(exports.PlusCircleIconConfig);\nexports[\"default\"] = exports.PlusCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.SearchIconConfig = {\n  name: 'SearchIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.SearchIcon = require('../createIcon').createIcon(exports.SearchIconConfig);\nexports[\"default\"] = exports.SearchIcon;","import React from 'react';\nimport { InputGroup, SearchInput } from '@patternfly/react-core';\n\nexport interface ISearchTopicsProps {\n  setSearch: (value: string) => void;\n  search: string;\n  onClear: () => void;\n}\nconst SearchTopics: React.FunctionComponent<ISearchTopicsProps> = ({\n  search,\n  setSearch,\n  onClear,\n}) => {\n  const onChangeInput = (value: string) => {\n    setSearch(value);\n  };\n\n  const onClearHandler = () => {\n    onClear();\n    setSearch('');\n  };\n  return (\n    <InputGroup>\n      <SearchInput\n        name='searchName'\n        id='search-topics-input'\n        type='search'\n        aria-label='search input '\n        placeholder='Search'\n        value={search}\n        onChange={onChangeInput}\n        onClear={onClearHandler}\n      />\n    </InputGroup>\n  );\n};\nexport { SearchTopics };\n","import React from 'react';\nimport {\n  Bullseye,\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Title,\n} from '@patternfly/react-core';\nimport PlusIcon from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\n\nexport interface IEmptyTopic {\n  onCreateTopic?: () => void;\n}\n\nexport const EmptyTopics: React.FunctionComponent<IEmptyTopic> = ({\n  onCreateTopic,\n}) => {\n  return (\n    <Bullseye>\n      <EmptyState>\n        <EmptyStateIcon icon={PlusIcon} />\n        <Title headingLevel='h5' size='lg'>\n          You don&apos;t have any topics yet\n        </Title>\n        <EmptyStateBody>\n          Create a topic by clicking the button below to get started\n        </EmptyStateBody>\n        <Button\n          variant='primary'\n          className='topics-empty-page'\n          onClick={onCreateTopic}\n        >\n          Create Topic\n        </Button>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n","import React from 'react';\nimport {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Title,\n} from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\n\nexport const EmptySearch: React.FunctionComponent = () => {\n  return (\n    <EmptyState>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel='h5' size='lg'>\n        No results found\n      </Title>\n      <EmptyStateBody>\n        No result match the filter criteria. Remove filter or clear all filters\n        to show results\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  AlertVariant,\n  Button,\n  Card,\n  Divider,\n  Pagination,\n  PaginationVariant,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  sortable,\n} from '@patternfly/react-table';\nimport { useTimeout } from '../../../../Hooks/useTimeOut';\nimport { SearchTopics } from './SearchTopics';\nimport { EmptyTopics } from './EmptyTopics';\nimport { EmptySearch } from './EmptySearch';\nimport { getTopics } from '../../../../Services';\nimport { DeleteTopics } from './DeleteTopicsModal';\nimport { ConfigContext } from '../../../../Contexts';\nimport { TopicsList } from '../../../../OpenApi';\nimport { Loading } from '../../../../Components/Loading/Loading';\nimport { AlertContext } from '../../../../Contexts/Alert';\nimport { Link } from 'react-router-dom';\n\nimport './TopicList.css';\n\nexport interface ITopic {\n  name: string;\n  replicas: number;\n  partitions: number;\n}\n\nexport interface ITopicProps {\n  rows: ITopic[];\n}\n\nexport interface ITopicList {\n  onCreateTopic: () => void;\n  onClickTopic: (topicName: string | undefined) => void;\n  getTopicDetailsPath: (topic: string | undefined) => string;\n  onDeleteTopic: () => void;\n  onError?: (errorCode: number, message: string) => void;\n}\n\nexport const TopicsListComponent: React.FunctionComponent<ITopicList> = ({\n  onCreateTopic,\n  getTopicDetailsPath,\n  onClickTopic,\n  onDeleteTopic,\n  onError,\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(10);\n  const [offset, setOffset] = useState<number>(0);\n  const [search, setSearch] = useState('');\n  const [topics, setTopics] = useState<TopicsList>();\n  const [filteredTopics, setFilteredTopics] = useState<TopicsList>();\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [topicName, setTopicName] = useState<string | undefined>();\n\n  const { addAlert } = useContext(AlertContext);\n\n  const config = useContext(ConfigContext);\n\n  const fetchTopic = async () => {\n    try {\n      const topicsList = await getTopics(config);\n      if (topicsList) {\n        setTopics(topicsList);\n        setFilteredTopics(topicsList);\n      }\n    } catch (err) {\n      //TODO: Update the api to allow suppress alerts if the application does not want to show them as well.\n      if (onError && err.response.data.code === 401) {\n        onError(err.response.data.code, err.response.data.error_message);\n      } else {\n        addAlert(err.response.data.error_message, AlertVariant.danger);\n      }\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetchTopic();\n  }, [deleteModal]);\n\n  useTimeout(() => fetchTopic(), 5000);\n\n  const onSetPage = (_event, pageNumber: number) => {\n    setPage(pageNumber);\n    setOffset(page * perPage);\n  };\n\n  const onPerPageSelect = (_event, perPage: number) => {\n    setPerPage(perPage);\n  };\n\n  const tableColumns = [\n    { title: 'Name' },\n    { title: 'Partitions', transforms: [sortable] },\n    { title: 'Retention Time', transforms: [sortable] },\n    { title: 'Retention Size', transforms: [sortable] },\n  ];\n  const convertRetentionTime = (milliseconds: number) => {\n    let convertedValue;\n    if (milliseconds === -1) {\n      return 'Unlimited';\n    } else if (milliseconds < 60000) {\n      if (milliseconds === 1) return milliseconds + ' ' + 'millisecond';\n      else return milliseconds + ' ' + 'milliseconds';\n    } else if (milliseconds >= 60000 && milliseconds < 3.6e6) {\n      convertedValue = milliseconds / 60000;\n      convertedValue = Math.round(convertedValue * 100) / 100;\n      if (convertedValue === 1) return convertedValue + ' ' + 'minute';\n      else return convertedValue + ' ' + 'minutes';\n    } else if (milliseconds >= 3.6e6 && milliseconds < 1.728e8) {\n      convertedValue = milliseconds / 3.6e6;\n      convertedValue = Math.round(convertedValue * 100) / 100;\n      if (convertedValue === 1) return convertedValue + ' ' + 'hour';\n      else return convertedValue + ' ' + 'hours';\n    } else if (milliseconds >= 1.728e8) {\n      convertedValue = milliseconds / 8.64e7;\n      convertedValue = Math.round(convertedValue * 100) / 100;\n      return convertedValue + ' ' + 'days';\n    }\n  };\n\n  const convertRetentionSize = (byte: number) => {\n    let convertedByteValue;\n    if (byte === -1) {\n      return 'Unlimited';\n    } else if (Math.abs(byte) < 1000) {\n      if (byte === 1) return byte + ' ' + 'byte';\n      else return byte + ' ' + 'bytes';\n    } else if (Math.abs(byte) >= 1000 && Math.abs(byte) < 1000000) {\n      convertedByteValue = byte / 1000;\n      if (convertedByteValue === 1)\n        return convertedByteValue + ' ' + 'kilobyte';\n      else return convertedByteValue + ' ' + 'kilobytes';\n    } else if (Math.abs(byte) >= 1000000 && Math.abs(byte) < 1000000000) {\n      convertedByteValue = byte / 1000000;\n      if (convertedByteValue === 1)\n        return convertedByteValue + ' ' + 'megabyte';\n      else return convertedByteValue + ' ' + 'megabytes';\n    } else if (Math.abs(byte) >= 1000000000 && Math.abs(byte) < 1000000000000) {\n      convertedByteValue = byte / 1000000000;\n      if (convertedByteValue === 1)\n        return convertedByteValue + ' ' + 'gigabyte';\n      else return convertedByteValue + ' ' + 'gigabytes';\n    } else if (Math.abs(byte) >= 1000000000000) {\n      convertedByteValue = byte / 1000000000000;\n      if (convertedByteValue === 1)\n        return convertedByteValue + ' ' + 'terabyte';\n      else return convertedByteValue + ' ' + 'terabytes';\n    }\n  };\n  const rowData =\n    filteredTopics?.items?.map((topic) => [\n      {\n        title: (\n          <Link\n            data-testid='tableTopics-linkTopic'\n            to={getTopicDetailsPath(topic.name)}\n            onClick={(e) => {\n              e.preventDefault();\n              onClickTopic(topic.name);\n            }}\n          >\n            {topic?.name}\n          </Link>\n        ),\n      },\n      topic.partitions?.length,\n\n      convertRetentionTime(\n        Number(\n          topic.config?.filter((element) => element.key === 'retention.ms')[0]\n            ?.value || 0\n        )\n      ),\n\n      convertRetentionSize(\n        Number(\n          topic.config?.filter(\n            (element) => element.key === 'retention.bytes'\n          )[0]?.value || 0\n        )\n      ),\n    ]) || [];\n\n  useEffect(() => {\n    if (\n      search &&\n      search.trim() != '' &&\n      topics?.items &&\n      topics.items.length > 0\n    ) {\n      const filterSearch = topics?.items.filter(\n        (topicsFiltered) =>\n          topicsFiltered?.name && topicsFiltered.name.includes(search)\n      );\n      setFilteredTopics((prevState) =>\n        prevState\n          ? {\n              ...prevState,\n              items: filterSearch,\n            }\n          : undefined\n      );\n    } else {\n      setFilteredTopics(topics);\n    }\n  }, [search, topics]);\n\n  const onClear = () => {\n    setFilteredTopics(topics);\n  };\n  const onDelete = (rowId: any) => {\n    if (filteredTopics?.items) {\n      setTopicName(filteredTopics.items[rowId].name);\n    }\n    setDeleteModal(true);\n  };\n\n  const onEdit = (rowId: any) => {\n    if (filteredTopics?.items) {\n      onClickTopic(filteredTopics.items[rowId].name);\n    }\n  };\n\n  const actions = [\n    {\n      title: 'Delete',\n      ['data-testid']: 'tableTopics-actionDelete',\n      onClick: (_, rowId) => onDelete(rowId),\n    },\n    {\n      title: 'Edit',\n      ['data-testid']: 'tableTopics-actionEdit',\n      onClick: (_, rowId) => onEdit(rowId),\n    },\n  ];\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <>\n      {deleteModal && (\n        <DeleteTopics\n          topicName={topicName}\n          setDeleteModal={setDeleteModal}\n          deleteModal={deleteModal}\n          onDeleteTopic={onDeleteTopic}\n        />\n      )}\n      <Card className='kafka-ui-m-full-height'>\n        {rowData.length < 1 && search.length < 1 ? (\n          <EmptyTopics onCreateTopic={onCreateTopic} />\n        ) : (\n          <>\n            <Toolbar>\n              <ToolbarContent>\n                <ToolbarItem className='pf-c-toolbar-item--search'>\n                  <SearchTopics\n                    onClear={onClear}\n                    search={search}\n                    setSearch={setSearch}\n                  />\n                </ToolbarItem>\n                <ToolbarItem>\n                  <Button\n                    id='topic-list-create-topic-button'\n                    className='topics-per-page'\n                    data-testid='tabTopics-actionCreate'\n                    onClick={() => {\n                      onCreateTopic();\n                    }}\n                  >\n                    Create topic\n                  </Button>\n                </ToolbarItem>\n                <ToolbarItem variant='pagination'>\n                  <Pagination\n                    itemCount={rowData.length}\n                    perPage={perPage}\n                    page={page}\n                    onSetPage={onSetPage}\n                    widgetId='topic-list-pagination-top'\n                    onPerPageSelect={onPerPageSelect}\n                  />\n                </ToolbarItem>\n              </ToolbarContent>\n            </Toolbar>\n\n            <Table\n              aria-label='Compact Table'\n              variant={TableVariant.compact}\n              cells={tableColumns}\n              rows={\n                page != 1\n                  ? rowData.slice(offset, offset + perPage)\n                  : rowData.slice(0, perPage)\n              }\n              actions={actions}\n            >\n              <TableHeader />\n              <TableBody />\n            </Table>\n          </>\n        )}\n        <Divider />\n        {rowData.length < 1 && search.length > 1 && <EmptySearch />}\n        {rowData.length > 1 && (\n          <Pagination\n            itemCount={rowData.length}\n            perPage={perPage}\n            page={page}\n            onSetPage={onSetPage}\n            widgetId='topic-list-pagination-bottom'\n            onPerPageSelect={onPerPageSelect}\n            offset={0}\n            variant={PaginationVariant.bottom}\n          />\n        )}\n      </Card>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  PageSection,\n  PageSectionVariants,\n  Title,\n  Tabs,\n  Level,\n  Tab,\n  TabTitleText,\n  TabContent,\n} from '@patternfly/react-core';\nimport { TopicsListComponent } from '../Topics/TopicList/Components/TopicsList';\nimport { ConsumerGroupsList } from '../ConsumerGroups/ConsumerGroupList/Components/ConsumerGroupList';\nimport { EllipsisVIcon } from '@patternfly/react-icons/dist/js/icons/ellipsis-v-icon';\nimport { useHistory } from 'react-router';\ninterface ITabHeaderProps {\n  eventKey: number;\n  instanceName?: string;\n}\nexport const AppNavigation: React.FunctionComponent<ITabHeaderProps> = ({\n  eventKey,\n  instanceName,\n}) => {\n  const [activeTabKey, setActiveTabKey] = useState(eventKey);\n  const contentRefConsumerGroups = React.createRef<HTMLElement>();\n  const contentRefTopics = React.createRef<HTMLElement>();\n  const handleTabClick = (event, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  const history = useHistory();\n\n  const onCreateTopic = () => {\n    history.push('/topics/create');\n  };\n\n  const getTopicDetailsPath = (topic: string | undefined) => {\n    return `/topic/${topic}`;\n  };\n\n  const onClickTopic = (topic: string | undefined) => {\n    history.push(`/topic/${topic}`);\n  };\n\n  const onDeleteTopic = () => {\n    history.push('/topics');\n  };\n\n  const onDeleteConsumer = () => {\n    history.push('/consumerGroups');\n  };\n\n  const mainBreadcrumbs = (\n    <Breadcrumb>\n      <BreadcrumbItem to='#'>Kafka Instances</BreadcrumbItem>\n      <BreadcrumbItem to='#' isActive>\n        {instanceName ? instanceName : 'Kafka Instance Name'}\n      </BreadcrumbItem>\n    </Breadcrumb>\n  );\n\n  return (\n    <>\n      <section className='pf-c-page__main-breadcrumb'>\n        {mainBreadcrumbs}\n      </section>\n\n      <PageSection variant={PageSectionVariants.light}>\n        <Level>\n          <Title headingLevel='h1'>\n            {instanceName ? instanceName : 'Kafka Instance Name'}\n          </Title>\n          <Button variant='plain' iconPosition='right'>\n            <EllipsisVIcon />\n          </Button>\n        </Level>\n      </PageSection>\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: 'noPadding' }}\n        className='pf-c-page__main-tabs'\n      >\n        <Tabs\n          activeKey={activeTabKey}\n          onSelect={handleTabClick}\n          data-testid='pageKafka-tabProperties'\n          className='pf-m-page-insets'\n        >\n          <Tab\n            title={<TabTitleText>Topics</TabTitleText>}\n            eventKey={1}\n            data-testid='pageKafka-tabTopics'\n            id='topics-tab-section'\n            aria-label='Topics Tab.'\n            tabContentRef={contentRefTopics}\n            tabContentId='kafka-ui-TabcontentTopicsList'\n          />\n          <Tab\n            title={<TabTitleText>Consumer Groups</TabTitleText>}\n            eventKey={2}\n            data-testid='pageKafka-tabConsumers'\n            id='consumer-groups-tab-section'\n            aria-label='Consumer Groups Tab.'\n            tabContentRef={contentRefConsumerGroups}\n            tabContentId='kafka-ui-TabcontentConsumersList'\n          />\n        </Tabs>\n      </PageSection>\n      <PageSection isFilled>\n        <TabContent\n          eventKey={1}\n          ref={contentRefTopics}\n          id='kafka-ui-TabcontentTopicsList'\n          className='kafka-ui-m-full-height'\n          aria-label='Topics.'\n        >\n          <TopicsListComponent\n            onCreateTopic={onCreateTopic}\n            onClickTopic={onClickTopic}\n            getTopicDetailsPath={getTopicDetailsPath}\n            onDeleteTopic={onDeleteTopic}\n          />\n        </TabContent>\n        <TabContent\n          eventKey={2}\n          ref={contentRefConsumerGroups}\n          id='kafka-ui-TabcontentConsumersList'\n          className='kafka-ui-m-full-height'\n          aria-label='Consumer Groups.'\n          hidden\n        >\n          <ConsumerGroupsList\n            onDeleteConsumerGroup={onDeleteConsumer}\n            consumerGroupByTopic={false}\n          />\n        </TabContent>\n      </PageSection>\n    </>\n  );\n};\n","import React, { FunctionComponent } from 'react';\n\nimport './style.scss';\nimport { AppNavigation } from '../../Modules/AppNavigation/AppNavigation';\nconst Topics: FunctionComponent = () => {\n  return <AppNavigation eventKey={1} />;\n};\n\nexport { Topics };\n\nexport default Topics;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { AlertVariant } from '@patternfly/react-core';\nimport '../../CreateTopic/Components/CreateTopicWizard.css';\nimport { TopicAdvanceConfig } from '../../CreateTopic/Components/TopicAdvanceConfig';\nimport { getTopic, updateTopicModel } from '../../../../Services/index';\nimport { ConfigEntry, TopicSettings } from '../../../../OpenApi/api';\nimport { DeleteTopics } from '../../TopicList/Components/DeleteTopicsModal';\nimport { AlertContext } from '../../../../Contexts/Alert';\nimport { ConfigContext } from '../../../../Contexts';\nimport { IAdvancedTopic } from '../../CreateTopic/Components/CreateTopicWizard';\nimport { convertUnits } from '../../CreateTopic/utils';\n\nexport type UpdateTopicViewProps = {\n  topicName: string;\n  onCancelUpdateTopic: () => void;\n  onDeleteTopic: () => void;\n  onSaveTopic: () => void;\n  onError?: (errorCode: number, message: string) => void;\n};\nexport const UpdateTopicView: React.FunctionComponent<UpdateTopicViewProps> = ({\n  topicName,\n  onCancelUpdateTopic,\n  onDeleteTopic,\n  onSaveTopic,\n  onError,\n}) => {\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  const [topicData, setTopicData] = useState<IAdvancedTopic>({\n    name: topicName,\n    numPartitions: '',\n    'retention.ms': '',\n    'retention.ms.unit': 'milliseconds',\n    'retention.bytes': '',\n    'retention.bytes.unit': 'bytes',\n    'cleanup.policy': '',\n  });\n  const config = useContext(ConfigContext);\n  const { addAlert } = useContext(AlertContext);\n  const fetchTopic = async (topicName) => {\n    const topicRes = await getTopic(topicName, config);\n\n    const configEntries: any = {};\n    topicRes.config?.forEach((configItem) => {\n      configEntries[configItem.key || ''] = configItem.value || '';\n    });\n\n    setTopicData({\n      ...topicData,\n      numPartitions: topicRes?.partitions?.length.toString() || '',\n      'cleanup.policy': configEntries['cleanup.policy'] || 'delete',\n      'retention.bytes': configEntries['retention.bytes'] || '-1',\n      'retention.ms': configEntries['retention.ms'] || '604800000',\n    });\n  };\n\n  useEffect(() => {\n    (async function () {\n      fetchTopic(topicName);\n    })();\n  }, []);\n\n  const saveTopic = async () => {\n    const { name, ...configEntries } = convertUnits(topicData);\n\n    const newConfig: ConfigEntry[] = [];\n\n    for (const key in configEntries) {\n      // TODO Remove check when API supports setting the number of partition\n      if (key && key !== 'numPartitions') {\n        newConfig.push({\n          key,\n          value: configEntries[key].toString().toLowerCase(),\n        });\n      }\n    }\n\n    const topicSettings: TopicSettings = {\n      // TODO Re-enable when the API supports setting the number of partition\n      // numPartitions: Number(topicData.numPartitions),\n      config: newConfig,\n    };\n\n    try {\n      const updateStatus = await updateTopicModel(name, topicSettings, config);\n\n      if (updateStatus === 200) {\n        addAlert(\n          'The topic was successfully updated in the Kafka instance',\n          AlertVariant.success\n        );\n        onSaveTopic();\n      }\n    } catch (err) {\n      if (onError) {\n        onError(err.response.data.code, err.response.data.error_message);\n      }\n      addAlert(err.response.data.error_message, AlertVariant.danger);\n    }\n  };\n\n  return (\n    <>\n      <TopicAdvanceConfig\n        isCreate={false}\n        saveTopic={saveTopic}\n        handleCancel={onCancelUpdateTopic}\n        topicData={topicData}\n        setTopicData={setTopicData}\n      />\n      <br />\n      <br />\n      {deleteModal && (\n        <DeleteTopics\n          deleteModal={deleteModal}\n          setDeleteModal={setDeleteModal}\n          topicName={topicName}\n          onDeleteTopic={onDeleteTopic}\n        />\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  Tabs,\n  Tab,\n  TabTitleText,\n  PageSection,\n  PageSectionVariants,\n  TabContent,\n} from '@patternfly/react-core';\nimport { ConsumerGroupsList } from '../../ConsumerGroups/ConsumerGroupList/Components/ConsumerGroupList';\nimport { UpdateTopicView } from './Components/UpdateTopicView';\nimport { TopicDetailHead } from '../TopicDetails/Components/TopicDetailHead';\n\nexport interface UpdateTopicPageProps {\n  topicName: string;\n  kafkaName?: string;\n  kafkaPageLink?: string;\n  kafkaInstanceLink?: string;\n  onCancelUpdateTopic: () => void;\n  onDeleteTopic: () => void;\n  onSaveTopic: () => void;\n  onDeleteConsumer: () => void;\n  onError?: (errorCode: number, message: string) => void;\n  activeTab?: number;\n}\n\nexport const UpdateTopicPage: React.FunctionComponent<UpdateTopicPageProps> = ({\n  topicName,\n  kafkaName,\n  kafkaPageLink,\n  kafkaInstanceLink,\n  onCancelUpdateTopic,\n  onDeleteTopic,\n  onSaveTopic,\n  onError,\n  onDeleteConsumer,\n  activeTab = 0,\n}) => {\n  const [activeTabKey, setActiveTabKey] = useState(activeTab);\n\n  const contentRefConsumerGroup = React.createRef<HTMLElement>();\n  const contentRefProperties = React.createRef<HTMLElement>();\n\n  const handleTabClick = (event, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  return (\n    <>\n      <TopicDetailHead\n        topicName={topicName}\n        kafkaName={kafkaName}\n        kafkaPageLink={kafkaPageLink}\n        kafkaInstanceLink={kafkaInstanceLink}\n      />\n      <PageSection\n        variant={PageSectionVariants.light}\n        className='pf-c-page__main-tabs'\n        padding={{ default: 'noPadding' }}\n      >\n        <Tabs\n          onSelect={handleTabClick}\n          activeKey={activeTabKey}\n          isBox={false}\n          className='pf-m-page-insets'\n        >\n          <Tab\n            eventKey={0}\n            title={<TabTitleText>Consumer groups</TabTitleText>}\n            tabContentId='kafka-ui-TabcontentConsumerGroups'\n            tabContentRef={contentRefConsumerGroup}\n          />\n          <Tab\n            eventKey={1}\n            title={<TabTitleText>Properties</TabTitleText>}\n            tabContentId='kafka-ui-TabcontentProperties'\n            tabContentRef={contentRefProperties}\n          />\n        </Tabs>\n      </PageSection>\n      <PageSection\n        variant={\n          activeTabKey === 1\n            ? PageSectionVariants.light\n            : PageSectionVariants.default\n        }\n      >\n        <TabContent\n          eventKey={0}\n          id='kafka-ui-TabcontentConsumerGroups'\n          ref={contentRefConsumerGroup}\n          className='kafka-ui-m-full-height'\n          aria-label='Consumer groups.'\n          hidden={activeTab !== 0 ? true : false}\n        >\n          <ConsumerGroupsList\n            onDeleteConsumerGroup={onDeleteConsumer}\n            topic={topicName}\n            consumerGroupByTopic={true}\n          />\n        </TabContent>\n        <TabContent\n          eventKey={1}\n          id='kafka-ui-TabcontentProperties'\n          ref={contentRefProperties}\n          className='kafka-ui-m-full-height'\n          aria-label='Topic properties'\n          hidden={activeTab !== 1 ? true : false}\n        >\n          <UpdateTopicView\n            topicName={topicName}\n            onCancelUpdateTopic={onCancelUpdateTopic}\n            onDeleteTopic={onDeleteTopic}\n            onSaveTopic={onSaveTopic}\n            onError={onError}\n          />\n        </TabContent>\n      </PageSection>\n    </>\n  );\n};\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-circle-icon';\nimport {\n  Button,\n  ButtonVariant,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  PageSection,\n  Title,\n  TitleSizes,\n} from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\n\ntype IUnexpectedErrorProps = {\n  updateState: (hasError: boolean) => void;\n};\n\nexport const UnexpectedError: React.FC<IUnexpectedErrorProps> = ({\n  updateState,\n}) => {\n  const { t } = useTranslation();\n  const history = useHistory();\n\n  const navigateToHome = () => {\n    updateState(false);\n    history.push('/');\n  };\n\n  return (\n    <PageSection padding={{ default: 'noPadding' }}>\n      <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={ExclamationCircleIcon} />\n        <Title headingLevel='h1' size={TitleSizes.lg}>\n          {t('common.errorBoundaryTitle')}\n        </Title>\n        <EmptyStateBody>{t('common.unexpectedError')}</EmptyStateBody>\n        <Button variant={ButtonVariant.primary} onClick={navigateToHome}>\n          {t('common.returnToHome')}\n        </Button>\n      </EmptyState>\n    </PageSection>\n  );\n};\n","import React, { ErrorInfo } from 'react';\nimport { UnexpectedError } from './UnexpectedError';\n\ntype IErrorBoundaryProps = {\n  children: React.ReactNode;\n};\n\ntype IErrorBoundary = {\n  hasError: boolean;\n};\n\nexport class ErrorBoundary extends React.Component<\n  IErrorBoundaryProps,\n  IErrorBoundary\n> {\n  state: IErrorBoundary = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error: Error): IErrorBoundary {\n    console.error(error);\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    console.error('error:', error, errorInfo);\n  }\n\n  updateState = (hasError: boolean): void => {\n    this.setState({ hasError });\n  };\n\n  render(): React.ReactNode {\n    if (this.state.hasError) {\n      return <UnexpectedError updateState={this.updateState} />;\n    }\n    return this.props.children;\n  }\n}\n","import {\n  Avatar,\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n  PageHeader,\n  Brand,\n  PageHeaderTools,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { CaretDownIcon } from '@patternfly/react-icons';\nimport avatarImg from '../../Images/img_avatar.svg';\nimport brandImg from '../../Images/brandImg.png';\n\nexport const AppMastHead: React.FC = () => {\n  const [isDropDownOpen, setIsDropDownOpen] = useState<boolean>(false);\n  const handleUserDropDownSelect = () => {\n    setIsDropDownOpen(!isDropDownOpen);\n  };\n\n  const handleUserDropDownToggle = () => {\n    setIsDropDownOpen(!isDropDownOpen);\n  };\n\n  const userDropDownItems = [<DropdownItem key='logout'>Logout</DropdownItem>];\n  const brandImgLogo = <Brand src={brandImg} alt={'Red Hat logo'} />;\n\n  const userDropDownToggle = (\n    <DropdownToggle\n      id='user-dropdown-toggle'\n      onToggle={handleUserDropDownToggle}\n      toggleIndicator={CaretDownIcon}\n    >\n      Ned Username\n    </DropdownToggle>\n  );\n\n  const userDropDown = (\n    <Dropdown\n      onSelect={handleUserDropDownSelect}\n      toggle={userDropDownToggle}\n      isOpen={isDropDownOpen}\n      isPlain\n      dropdownItems={userDropDownItems}\n    />\n  );\n\n  const avatar = (\n    <React.Fragment>\n      <Avatar src={avatarImg} className='app-masthead-avatar' alt='avatar' />\n    </React.Fragment>\n  );\n\n  const HeaderTools = (\n    <PageHeaderTools>\n      {userDropDown}\n      {avatar}\n    </PageHeaderTools>\n  );\n\n  return (\n    <PageHeader\n      logo={brandImgLogo}\n      logoComponent='h1'\n      headerTools={HeaderTools}\n    />\n  );\n};\n","import kafkai18n from '../i18n';\nimport { I18nextProvider } from 'react-i18next';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport '@patternfly/react-core/dist/styles/base.css';\nimport { ConfigContext } from '../Contexts';\nimport { Topics } from '../Panels/Topics';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport CreateTopic from '../Panels/Topics/CreateView';\nimport TopicDetail from '../Panels/Topics/DetailView';\nimport UpdateTopicView from '../Panels/Topics/UpdateView';\nimport { TopicContextProvider } from '../Contexts/Topic';\nimport { ConsumerGroupsView } from '../Panels/ConsumerGroups/ConsumerGroupsView';\nimport { ConsumerGroupsByTopicView } from '../Panels/ConsumerGroupsByTopic/ConsumerGroupsByTopicView';\nimport { ErrorBoundary } from '../Components/ErrorBoundary/ErrorBoundary';\nimport { AlertProvider } from '../Contexts/Alert/Context';\nimport { MastHead } from '../Panels/MastHead/MastHead';\n\n//Bootstrap i18next support\nReactDOM.render(\n  <I18nextProvider i18n={kafkai18n}>\n    <ConfigContext.Provider\n      value={{\n        basePath:\n          'http://localhost:8000/api/managed-services-strimzi-ui/v1/api',\n        getToken: async () => '',\n      }}\n    >\n      <TopicContextProvider>\n        <MastHead>\n          <Router>\n            <AlertProvider>\n              <ErrorBoundary>\n                <Switch>\n                  <Route path='/' component={Topics} exact />\n                  <Route path='/topics' component={Topics} exact />\n                  <Route\n                    path='/topic/:topicName'\n                    component={TopicDetail}\n                    exact\n                  />\n                  <Route path='/topics/create' component={CreateTopic} exact />\n                  <Route\n                    path='/topics/update/:topicName'\n                    component={UpdateTopicView}\n                    exact\n                  />\n                  <Route\n                    path='/consumerGroups'\n                    component={ConsumerGroupsView}\n                    exact\n                  />\n                  <Route\n                    path='/topics/consumerGroups/:topicName'\n                    component={ConsumerGroupsByTopicView}\n                    exact\n                  />\n                </Switch>\n              </ErrorBoundary>\n            </AlertProvider>\n          </Router>\n        </MastHead>\n      </TopicContextProvider>\n    </ConfigContext.Provider>\n  </I18nextProvider>,\n  document.getElementById('root')\n);\n","import React from 'react';\nimport { Page } from '@patternfly/react-core';\nimport { AppMastHead } from '../../Modules/AppNavigation/AppMastHead';\n\nexport type MastHeadProps = {\n  children: React.ReactNode;\n};\n\nexport const MastHead: React.FC<MastHeadProps> = ({ children }) => {\n  return (\n    <Page mainContainerId='main-container' header={<AppMastHead />}>\n      {children}\n    </Page>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { TopicDetailGroup } from '../../Modules/Topics/TopicDetails/TopicDetailPage';\n\ntype TopicUseParams = {\n  topicName: string;\n};\n\nconst TopicDetail: FunctionComponent = () => {\n  const { topicName } = useParams<TopicUseParams>();\n  const history = useHistory();\n\n  const useUpdateTopic = () => {\n    history.push(`/topics/update/${topicName}`);\n  };\n\n  return (\n    <TopicDetailGroup\n      topicName={topicName}\n      onUpdateTopic={useUpdateTopic}\n      onClickTopicList={() => history.push('/topics')}\n      onDeleteTopic={() => {\n        history.push('/topics');\n        return;\n      }}\n      eventKey={2}\n    />\n  );\n};\n\nexport { TopicDetail };\n\nexport default TopicDetail;\n","import React, { FunctionComponent } from 'react';\nimport './style.scss';\nimport { useHistory } from 'react-router-dom';\nimport { CreateTopicPage } from 'src/Modules/Topics/CreateTopic/CreateTopicPage';\n\nconst CreateTopic: FunctionComponent = () => {\n  const history = useHistory();\n\n  const handleCancel = () => {\n    history.push('/topics');\n  };\n\n  return (\n    <CreateTopicPage\n      setIsCreateTopic={(value) => {\n        if (!value) {\n          history.goBack();\n        }\n      }}\n      onCloseCreateTopic={handleCancel}\n    />\n  );\n};\n\nexport { CreateTopic };\n\nexport default CreateTopic;\n","import React, { FunctionComponent } from 'react';\nimport './style.scss';\nimport { useHistory, useParams } from 'react-router';\nimport { UpdateTopicPage } from 'src/Modules/Topics/UpdateTopic/UpdateTopicPage';\n\ntype TopicUseParams = {\n  topicName: string;\n};\n\nconst UpdateTopic: FunctionComponent<TopicUseParams> = () => {\n  const { topicName } = useParams<TopicUseParams>();\n  const history = useHistory();\n  const onDeleteConsumer = () => {\n    history.push('/consumerGroups');\n  };\n  return (\n    <UpdateTopicPage\n      onDeleteConsumer={onDeleteConsumer}\n      topicName={topicName}\n      onCancelUpdateTopic={() => history.push('/topics')}\n      onDeleteTopic={() => {\n        history.push('/topics');\n        return;\n      }}\n      onSaveTopic={() => {\n        history.push('/topics');\n        return;\n      }}\n      activeTab={1}\n    />\n  );\n};\n\nexport { UpdateTopic };\n\nexport default UpdateTopic;\n","import React, { FunctionComponent } from 'react';\nimport { AppNavigation } from '../../Modules/AppNavigation/AppNavigation';\n\nexport const ConsumerGroupsView: FunctionComponent = () => {\n  return <AppNavigation eventKey={2} />;\n};\n\nexport default ConsumerGroupsView;\n","import React, { FunctionComponent } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { TopicDetailGroup } from '../../Modules/Topics/TopicDetails/TopicDetailPage';\n\ntype TopicUseParams = {\n  topicName: string;\n};\n\ntype TopicDetailParams = {\n  onDeleteTopic: () => void;\n};\n\nconst ConsumerGroupsByTopicView: FunctionComponent<TopicDetailParams> = ({\n  onDeleteTopic,\n}) => {\n  const { topicName } = useParams<TopicUseParams>();\n  const history = useHistory();\n\n  const useUpdateTopic = () => {\n    history.push(`/topics/update/${topicName}`);\n  };\n\n  return (\n    <TopicDetailGroup\n      topicName={topicName}\n      onUpdateTopic={useUpdateTopic}\n      onClickTopicList={() => history.push('/topics')}\n      onDeleteTopic={onDeleteTopic}\n      eventKey={1}\n    />\n  );\n};\n\nexport { ConsumerGroupsByTopicView };\n\nexport default ConsumerGroupsByTopicView;\n","import React from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertGroup,\n  AlertVariant,\n} from '@patternfly/react-core';\nimport { AlertType } from '../../Contexts/Alert';\n\ntype AlertToastGroupProps = {\n  alerts: AlertType[];\n  onCloseAlert: (key: number) => void;\n};\n\nexport const ServerAlertGroup: React.FC<AlertToastGroupProps> = ({\n  alerts,\n  onCloseAlert,\n}) => {\n  return (\n    <AlertGroup isToast>\n      {alerts.map(({ key, variant, message }) => (\n        <Alert\n          key={key}\n          isLiveRegion\n          variant={AlertVariant[variant]}\n          variantLabel=''\n          title={message}\n          actionClose={\n            <AlertActionCloseButton\n              title={message}\n              onClose={() => onCloseAlert(key)}\n            />\n          }\n        />\n      ))}\n    </AlertGroup>\n  );\n};\n","import React, { createContext, useEffect, useState } from 'react';\nimport { AlertVariant } from '@patternfly/react-core';\nimport { ServerAlertGroup } from '../../Components/ServerAlertGroup/ServerAlertGroup';\nimport { AlertType, AlertContextProps, TimeOut } from './Alert.types';\n\nexport const AlertContext = createContext<AlertContextProps>(\n  {} as AlertContextProps\n);\n\nexport const AlertProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [timers, setTimers] = useState<TimeOut[]>([]);\n\n  useEffect(() => {\n    const timersKeys = timers.map((timer) => timer?.key);\n    const timeOuts = alerts\n      .filter((alert) => !timersKeys.includes(alert.key))\n      .map((alert) => {\n        const timeOut = setTimeout(() => hideAlert(alert.key), 8000);\n        return { key: alert.key, timeOut };\n      });\n    setTimers([...timers, ...timeOuts]);\n    return () => timers.forEach((timer) => clearTimeout(timer.timeOut));\n  }, [alerts]);\n\n  const hideAlert = (key: number) => {\n    setAlerts((alerts) => [...alerts.filter((el) => el.key !== key)]);\n    setTimers((timers) => [...timers.filter((timer) => timer.key === key)]);\n  };\n\n  const createId = () => new Date().getTime();\n\n  const addAlert = (\n    message: string,\n    variant: AlertVariant = AlertVariant.default\n  ) => {\n    setAlerts([...alerts, { key: createId(), message, variant }]);\n  };\n\n  return (\n    <AlertContext.Provider value={{ addAlert }}>\n      <ServerAlertGroup alerts={alerts} onCloseAlert={hideAlert} />\n      {children}\n    </AlertContext.Provider>\n  );\n};\n"],"sourceRoot":""}