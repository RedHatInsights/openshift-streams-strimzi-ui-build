{"version":3,"sources":["webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/caret-down-icon.js","webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/help-icon.js","webpack://kafka-ui/./src/components/TextWithLabelPopover/TextWithLabelPopover.tsx","webpack://kafka-ui/./src/constant/constants.ts","webpack://kafka-ui/./src/components/DropdownWithToggle/DropdownWithToggle.tsx","webpack://kafka-ui/./src/components/SizeTimeFormGroup/SizeTimeFormGroup.tsx","webpack://kafka-ui/./src/components/FormGroupWithPopover/FormGroupWithPopover.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicAdvanceConfig/TopicAdvanceConfig.tsx","webpack://kafka-ui/./src/modules/Topics/utils/utils.ts"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","TextWithLabelPopover","fieldId","fieldLabel","btnAriaLabel","fieldValue","popoverBody","popoverHeader","displayText","undefined","parseInt","FormGroup","label","className","labelIcon","Popover","headerContent","bodyContent","onClick","event","preventDefault","noVerticalAlign","TextInput","isReadOnly","type","id","value","DEFAULT_REPLICAS","DEFAULT_MIN_CLEANBLE_RATIO","DEFAULT_MIN_INSYNC_REPLICAS","DEFAULT_SEGMENT_TIME","DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF","DEFAULT_SEGMENT_INDEX_SIZE","DEFAULT_INDEX_INTERVAL_SIZE","DEFAULT_LOG_SEGMENT_SIZE","DEFAULT_DELETE_RETENTION_TIME","DEFAULT_SEGMENT_JITTER_TIME","DEFAULT_FILE_DELETE_DELAY","DEFAULT_MAXIMUM_MESSAGE_BYTES","DEFAULT_MESSAGE_TIMESTAMP_TYPE","DEFAULT_MINIMUM_COMPACTION_LAG_TIME","DEFAULT_FLUSH_INTERVAL_MESSAGES","DEFAULT_FLUSH_INTERVAL_TIME","DropdownWithToggle","options","toggleId","items","ariaLabel","onSelectOption","useState","isOpen","setIsOpen","dropdownToggle","DropdownToggle","onToggle","toggleIndicator","Dropdown","onSelect","e","currentTarget","textContent","target","toggle","dropdownItems","map","option","key","DropdownItem","SizeTimeFormGroup","dropdownValue","inputName","onChange","onPlus","onMinus","plusBtnProps","minusBtnProps","min","timeUnits","isDisabled","memoryUnits","Flex","FlexItem","grow","default","NumberInput","widthChars","getItemsForType","FormGroupWithPopover","children","labelHead","labelBody","buttonAriaLabel","validated","helperText","helperTextInvalid","isRequired","TopicAdvanceConfig","isCreate","saveTopic","handleCancel","topicData","setTopicData","isLoadingSave","topicValidated","setTopicValidated","invalidText","setInvalidText","isLoading","setIsLoading","partitionsValidated","setPartitionsValidated","warning","setWarning","Number","numPartitions","initialPartition","setInitialPartition","showModal","t","useTranslation","isCustomRetentionTimeSelected","setIsCustomRetentionTimeSelected","isCustomRetentionSizeSelected","setIsCustomRetentionSizeSelected","customRetentionTime","setCustomRetentionTime","customRetentionTimeUnit","setCustomRetentionTimeUnit","customRetentionSize","setCustomRetentionSize","customRetentionSizeUnit","setCustomRetentionSizeUnit","actionText","clearOptions","config","useContext","fetchTopic","topicName","topicRes","partitions","length","response","status","useEffect","onDropdownChange","handleTouchSpinInputChange","handleTouchSpinPlus","updatedRetentionTime","toString","updatedRetentionSize","handleTouchSpinMinus","handleRadioChange","_","retentionTimeInput","retentionSizeInput","jumpLinkItems","href","Sidebar","hasGutter","SidebarPanel","variant","JumpLinks","isVertical","scrollableSelector","style","position","offset","expandable","md","isExpanded","item","index","JumpLinksItem","SidebarContent","Form","FormSection","title","titleElement","TextContent","Text","component","TextVariants","legalNameChars","RegExp","test","validationCheck","fieldName","placeholder","partitionValue","Stack","Radio","isChecked","ActionGroup","Button","onSaveTopic","kebabToCamel","kebabCase","split","word","text","charAt","toUpperCase","slice","join","kebabToDotSeparated","val","replace","unitsToBytes","bytes","kilobytes","megabytes","gigabytes","terabytes","unitsToMilliSecond","milliseconds","seconds","days","months","years","convertUnits","topic","pop","String","formatTopicRequest","configEntries","push","settings"],"mappings":"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","file":"645.375cb619.bundle.js","sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.CaretDownIconConfig = {\n  name: 'CaretDownIcon',\n  height: 512,\n  width: 320,\n  svgPath: 'M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.CaretDownIcon = require('../createIcon').createIcon(exports.CaretDownIconConfig);\nexports[\"default\"] = exports.CaretDownIcon;","\"use strict\"\nexports.__esModule = true;\nexports.HelpIconConfig = {\n  name: 'HelpIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M521.3,576 C627.5,576 713.7,502 713.7,413.7 C713.7,325.4 627.6,253.6 521.3,253.6 C366,253.6 334.5,337.7 329.2,407.2 C329.2,414.3 335.2,416 343.5,416 L445,416 C450.5,416 458,415.5 460.8,406.5 C460.8,362.6 582.9,357.1 582.9,413.6 C582.9,441.9 556.2,470.9 521.3,473 C486.4,475.1 447.3,479.8 447.3,521.7 L447.3,553.8 C447.3,570.8 456.1,576 472,576 C487.9,576 521.3,576 521.3,576 M575.3,751.3 L575.3,655.3 C575.313862,651.055109 573.620137,646.982962 570.6,644 C567.638831,640.947672 563.552355,639.247987 559.3,639.29884 L463.3,639.29884 C459.055109,639.286138 454.982962,640.979863 452,644 C448.947672,646.961169 447.247987,651.047645 447.29884,655.3 L447.29884,751.3 C447.286138,755.544891 448.979863,759.617038 452,762.6 C454.961169,765.652328 459.047645,767.352013 463.3,767.30116 L559.3,767.30116 C563.544891,767.313862 567.617038,765.620137 570.6,762.6 C573.659349,759.643612 575.360354,755.553963 575.3,751.3 M512,896 C300.2,896 128,723.9 128,512 C128,300.3 300.2,128 512,128 C723.8,128 896,300.2 896,512 C896,723.8 723.7,896 512,896 M512.1,0 C229.7,0 0,229.8 0,512 C0,794.2 229.8,1024 512.1,1024 C794.4,1024 1024,794.3 1024,512 C1024,229.7 794.4,0 512.1,0',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.HelpIcon = require('../createIcon').createIcon(exports.HelpIconConfig);\nexports[\"default\"] = exports.HelpIcon;","import { Popover, FormGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\nimport HelpIcon from '@patternfly/react-icons/dist/js/icons/help-icon';\n\nimport './TextWithLabelPopover.css';\n\nexport interface TextWithLabelPopoverProps {\n  /** Field id */\n  fieldId: string;\n  /** Field label */\n  fieldLabel: string;\n  /** Field value */\n  fieldValue?: string;\n  /** Header text for popover label */\n  popoverHeader: string;\n  /** Body text for popover label */\n  popoverBody: string;\n  /** Aria label for popover button */\n  btnAriaLabel: string;\n  /** Indicates if unlimited should be shown for negative numbers */\n  showUnlimited?: boolean;\n}\n\nexport const TextWithLabelPopover: React.FC<TextWithLabelPopoverProps> = ({\n  fieldId,\n  fieldLabel,\n  btnAriaLabel,\n  fieldValue,\n  popoverBody,\n  popoverHeader,\n  showUnlimited,\n}) => {\n  const preventButtonSubmit = (event) => event.preventDefault();\n\n  let displayText = '-';\n\n  if (\n    showUnlimited === true &&\n    fieldValue !== undefined &&\n    parseInt(fieldValue) < 0\n  ) {\n    displayText = 'Unlimited';\n  } else if (fieldValue) {\n    displayText = fieldValue;\n  }\n\n  return (\n    <FormGroup\n      fieldId={fieldId}\n      label={fieldLabel}\n      className='kafka-ui-form-group--readonly'\n      labelIcon={\n        <Popover\n          headerContent={<div>{popoverHeader}</div>}\n          bodyContent={<div>{popoverBody}</div>}\n        >\n          <button\n            aria-label={btnAriaLabel}\n            onClick={preventButtonSubmit}\n            className='pf-c-form__group-label-help'\n          >\n            <HelpIcon noVerticalAlign />\n          </button>\n        </Popover>\n      }\n    >\n      <TextInput\n        isReadOnly\n        type='text'\n        id={fieldId}\n        name={fieldId}\n        value={displayText}\n      />\n    </FormGroup>\n  );\n};\n","export const DEFAULT_REPLICAS = '3';\nexport const DEFAULT_MIN_CLEANBLE_RATIO = '0.5';\nexport const DEFAULT_MIN_INSYNC_REPLICAS = '2';\nexport const DEFAULT_SEGMENT_TIME = '604800000 milliseconds (7 days)';\nexport const DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF = '9223372036854775807 milliseconds';\nexport const DEFAULT_SEGMENT_INDEX_SIZE = '10485760 bytes (10 mebibytes)';\nexport const DEFAULT_INDEX_INTERVAL_SIZE = '4096 bytes (4 kibibytes)';\nexport const DEFAULT_LOG_SEGMENT_SIZE = '1073741824 bytes (1 gibibyte)';\nexport const DEFAULT_DELETE_RETENTION_TIME = '86400000 milliseconds (1 day)';\nexport const DEFAULT_SEGMENT_JITTER_TIME = '0 milliseconds';\nexport const DEFAULT_FILE_DELETE_DELAY = '60000 milliseconds (1 minute)';\nexport const DEFAULT_MAXIMUM_MESSAGE_BYTES = '1048588 bytes';\nexport const DEFAULT_MESSAGE_TIMESTAMP_TYPE = 'CreateTime';\nexport const DEFAULT_MINIMUM_COMPACTION_LAG_TIME = '0 milliseconds';\nexport const DEFAULT_FLUSH_INTERVAL_MESSAGES = '9223372036854775807 messages';\nexport const DEFAULT_FLUSH_INTERVAL_TIME = '9223372036854775807 milliseconds';","import React, { useState } from 'react';\nimport { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport CaretDownIcon from '@patternfly/react-icons/dist/js/icons/caret-down-icon';\n\ninterface IDropdownWithToggleProps {\n  id: string;\n  toggleId: string;\n  value: string;\n  name: string;\n  items: IDropdownOption[];\n  onSelectOption?: (value: string, event) => void;\n  ariaLabel?: string;\n}\n\nexport interface IDropdownOption {\n  value?: string;\n  label?: string;\n  key?: string;\n  isDisabled?: boolean;\n}\n\nexport const DropdownWithToggle: React.FC<IDropdownWithToggleProps> = ({\n  id,\n  toggleId,\n  items,\n  value,\n  ariaLabel,\n  onSelectOption,\n  name,\n}) => {\n  const [isOpen, setIsOpen] = useState<boolean>();\n\n  const onToggle = () => {\n    setIsOpen((isOpen) => !isOpen);\n  };\n\n  const onSelect = (e) => {\n    const value = e.currentTarget.textContent;\n    if (onSelectOption) {\n      e.target.name = name;\n      onSelectOption(value, e);\n    }\n    setIsOpen((isOpen) => !isOpen);\n  };\n\n  const getItems = (options: IDropdownOption[]) => {\n    const items = options.map((option) => {\n      const { key, value, label } = option;\n\n      return (\n        <DropdownItem key={key} value={value}>\n          {label || value}\n        </DropdownItem>\n      );\n    });\n\n    return items;\n  };\n\n  const dropdownToggle = (\n    <DropdownToggle\n      id={toggleId}\n      onToggle={onToggle}\n      toggleIndicator={CaretDownIcon}\n    >\n      {value}\n    </DropdownToggle>\n  );\n\n  return (\n    <Dropdown\n      name={name}\n      id={id}\n      onSelect={onSelect}\n      toggle={dropdownToggle}\n      isOpen={isOpen}\n      aria-label={ariaLabel}\n      dropdownItems={getItems(items)}\n    />\n  );\n};\n","import React from \"react\";\nimport {\n  Flex,\n  FlexItem,\n  NumberInput,\n  NumberInputProps,\n} from \"@patternfly/react-core\";\nimport { DropdownWithToggle, IDropdownOption } from \"@app/components\";\n\nexport type SizeTimeFormGroup = NumberInputProps & {\n  /** id of dropdown element */\n  id: string;\n  /** id of dropdown toggle button */\n  toggleId: string;\n  /** id of dropdown element */\n  dropdownValue?: string;\n  /** name attribute of dropdown element */\n  name: string;\n  /** handler method of dropdown */\n  onSelectOption?: (value: string, event) => void;\n  /** aria label for dropdown element */\n  ariaLabel?: string;\n  /** determines whether to display memory units or time units */\n  type: string;\n};\n\nexport const SizeTimeFormGroup: React.FC<SizeTimeFormGroup> = ({\n  id,\n  toggleId,\n  dropdownValue,\n  ariaLabel,\n  onSelectOption,\n  name,\n  inputName,\n  onChange,\n  onPlus,\n  onMinus,\n  value,\n  plusBtnProps,\n  minusBtnProps,\n  type,\n  min,\n}) => {\n  const timeUnits: IDropdownOption[] = [\n    { key: \"milliseconds\", value: \"milliseconds\", isDisabled: false },\n    { key: \"seconds\", value: \"seconds\", isDisabled: false },\n    { key: \"days\", value: \"days\", isDisabled: false },\n    { key: \"months\", value: \"months\", isDisabled: false },\n    { key: \"years\", value: \"years\", isDisabled: false },\n  ];\n\n  const memoryUnits: IDropdownOption[] = [\n    { key: \"bytes\", value: \"bytes\", isDisabled: false },\n    { key: \"kilobytes\", value: \"kilobytes\", isDisabled: false },\n    { key: \"megabytes\", value: \"megabytes\", isDisabled: false },\n    { key: \"gigabytes\", value: \"gigabytes\", isDisabled: false },\n    { key: \"terabytes\", value: \"terabytes\", isDisabled: false },\n  ];\n\n  const getItemsForType = (type: string) => {\n    switch (type) {\n    case \"time\":\n      return timeUnits;\n    case \"memory\":\n      return memoryUnits;\n    default:\n      return [];\n    }\n  };\n\n  return (\n    <Flex>\n      <FlexItem grow={{ default: \"grow\" }}>\n        <NumberInput\n          inputName={inputName}\n          onChange={onChange}\n          onPlus={onPlus}\n          onMinus={onMinus}\n          value={value}\n          plusBtnProps={plusBtnProps}\n          minusBtnProps={minusBtnProps}\n          min={min}\n          widthChars={10}\n        />\n      </FlexItem>\n      <FlexItem>\n        <DropdownWithToggle\n          id={id}\n          toggleId={toggleId}\n          ariaLabel={ariaLabel}\n          onSelectOption={onSelectOption}\n          items={getItemsForType(type)}\n          name={name}\n          value={dropdownValue || \"\"}\n        />\n      </FlexItem>\n    </Flex>\n  );\n};\n","import { FormGroup, Popover } from '@patternfly/react-core';\nimport HelpIcon from '@patternfly/react-icons/dist/js/icons/help-icon';\nimport React from 'react';\n\ninterface IFormGroupWithPopoverProps {\n  children: React.ReactNode;\n  labelHead: string;\n  fieldId: string;\n  fieldLabel: string;\n  labelBody: string;\n  buttonAriaLabel: string;\n  validated?: 'default' | 'error' | 'success' | 'warning' | undefined;\n  helperText?: string;\n  helperTextInvalid?: string;\n  isRequired?: boolean;\n}\n\nexport const FormGroupWithPopover: React.FC<IFormGroupWithPopoverProps> = ({\n  children,\n  labelHead,\n  fieldId,\n  fieldLabel,\n  labelBody,\n  buttonAriaLabel,\n  validated,\n  helperText,\n  helperTextInvalid,\n  isRequired,\n}) => {\n  const preventButtonSubmit = (event) => event.preventDefault();\n\n  return (\n    <FormGroup\n      fieldId={fieldId}\n      label={fieldLabel}\n      validated={validated}\n      helperText={helperText}\n      helperTextInvalid={helperTextInvalid}\n      isRequired={isRequired}\n      labelIcon={\n        <Popover\n          headerContent={<div>{labelHead}</div>}\n          bodyContent={<div>{labelBody}</div>}\n        >\n          <button\n            aria-label={buttonAriaLabel}\n            onClick={preventButtonSubmit}\n            className='pf-c-form__group-label-help'\n          >\n            <HelpIcon noVerticalAlign />\n          </button>\n        </Popover>\n      }\n    >\n      {children}\n    </FormGroup>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  ActionGroup,\n  Button,\n  JumpLinks,\n  JumpLinksItem,\n  Sidebar,\n  SidebarContent,\n  SidebarPanel,\n  Stack,\n  FormSection,\n  TextContent,\n  Text,\n  TextVariants,\n  TextInput,\n  NumberInput,\n  Form,\n  Radio,\n} from \"@patternfly/react-core\";\nimport {\n  DEFAULT_MESSAGE_TIMESTAMP_TYPE,\n  DEFAULT_DELETE_RETENTION_TIME,\n  DEFAULT_FILE_DELETE_DELAY,\n  DEFAULT_INDEX_INTERVAL_SIZE,\n  DEFAULT_LOG_SEGMENT_SIZE,\n  DEFAULT_MAXIMUM_MESSAGE_BYTES,\n  DEFAULT_MINIMUM_COMPACTION_LAG_TIME,\n  DEFAULT_MIN_CLEANBLE_RATIO,\n  DEFAULT_MIN_INSYNC_REPLICAS,\n  DEFAULT_REPLICAS,\n  DEFAULT_SEGMENT_INDEX_SIZE,\n  DEFAULT_SEGMENT_JITTER_TIME,\n  DEFAULT_SEGMENT_TIME,\n  DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF,\n  DEFAULT_FLUSH_INTERVAL_MESSAGES,\n  DEFAULT_FLUSH_INTERVAL_TIME,\n} from \"@app/constant\";\nimport {\n  TextWithLabelPopover,\n  FormGroupWithPopover,\n  SizeTimeFormGroup,\n  DropdownWithToggle,\n  IDropdownOption,\n  useRootModalContext,\n  MODAL_TYPES,\n} from \"@app/components\";\nimport { kebabToCamel, kebabToDotSeparated } from \"@app/modules/Topics/utils\";\nimport { IAdvancedTopic } from \"@app/modules/Topics/components\";\nimport { getTopic } from \"@app/services\";\nimport { ConfigContext } from \"@app/contexts\";\nimport \"../CreateTopicWizard/CreateTopicWizard.css\";\n\nexport type TopicAdvanceConfigProps = {\n  isCreate: boolean;\n  saveTopic: () => void;\n  handleCancel: () => void;\n  topicData: IAdvancedTopic;\n  setTopicData: (val: IAdvancedTopic) => void;\n  isLoadingSave?: boolean;\n};\n\nexport const TopicAdvanceConfig: React.FunctionComponent<TopicAdvanceConfigProps> = ({\n  isCreate,\n  saveTopic,\n  handleCancel,\n  topicData,\n  setTopicData,\n  isLoadingSave,\n}) => {\n  const [topicValidated, setTopicValidated] = useState<\"error\" | \"default\">(\n    \"default\"\n  );\n  const [invalidText, setInvalidText] = useState(\"\");\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [partitionsValidated, setPartitionsValidated] = useState<\n    \"warning\" | \"default\"\n  >(\"default\");\n  const [warning, setWarning] = useState<boolean>(false);\n  const [initialPartition, setInitialPartition] = useState<number | undefined>(\n    Number(topicData.numPartitions)\n  );\n  const { showModal } = useRootModalContext();\n  const { t } = useTranslation();\n\n  const [\n    isCustomRetentionTimeSelected,\n    setIsCustomRetentionTimeSelected,\n  ] = useState<boolean>(true);\n  const [\n    isCustomRetentionSizeSelected,\n    setIsCustomRetentionSizeSelected,\n  ] = useState<boolean>(false);\n\n  const [customRetentionTime, setCustomRetentionTime] = useState<number>(7);\n  const [\n    customRetentionTimeUnit,\n    setCustomRetentionTimeUnit,\n  ] = useState<string>(\"days\");\n  const [customRetentionSize, setCustomRetentionSize] = useState<number>(1);\n  const [\n    customRetentionSizeUnit,\n    setCustomRetentionSizeUnit,\n  ] = useState<string>(\"bytes\");\n  const actionText =\n    isCreate === true ? t(\"topic.create_topic\") : t(\"common.save\");\n\n  const clearOptions: IDropdownOption[] = [\n    {\n      key: \"compact\",\n      value: \"compact\",\n      label: t(\"common.compact\"),\n      isDisabled: false,\n    },\n    {\n      key: \"delete\",\n      value: \"delete\",\n      label: t(\"common.delete\"),\n      isDisabled: false,\n    },\n    {\n      key: \"compact-delete\",\n      value: \"compact, delete\",\n      label: `${t(\"common.compact\")}, ${t(\"common.delete\")}`,\n      isDisabled: false,\n    },\n  ];\n\n  const minPartitionValue = 1;\n\n  const config = useContext(ConfigContext);\n  const fetchTopic = async (topicName) => {\n    try {\n      const topicRes = await getTopic(topicName, config);\n      if (topicRes) {\n        if (isCreate) {\n          setInvalidText(t(\"topic.already_exists\", { name: topicName }));\n          setTopicValidated(\"error\");\n          setIsLoading(false);\n        } else {\n          setInitialPartition(topicRes?.partitions?.length);\n        }\n      }\n    } catch (err) {\n      if (isCreate && err.response.status == \"404\") {\n        setTopicValidated(\"default\");\n        setIsLoading(false);\n        saveTopic();\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (!isCreate) {\n      (async function () {\n        fetchTopic(topicData.name);\n      })();\n      setCustomRetentionTimeUnit(\"milliseconds\");\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isCreate) {\n      if (topicData[\"retention.bytes\"] === \"-1\") {\n        setIsCustomRetentionSizeSelected(false);\n      } else {\n        setIsCustomRetentionSizeSelected(true);\n        setCustomRetentionSize(Number(topicData[\"retention.bytes\"]));\n      }\n      if (topicData[\"retention.ms\"] === \"-1\") {\n        setIsCustomRetentionTimeSelected(false);\n      } else {\n        setIsCustomRetentionTimeSelected(true);\n        setCustomRetentionTime(Number(topicData[\"retention.ms\"]));\n      }\n    }\n  }, [topicData[\"retention.bytes\"], topicData[\"retention.ms\"]]);\n\n  const validationCheck = (value: string) => {\n    const legalNameChars = new RegExp('^[a-zA-Z0-9._-]+$');\n\n    if (value.length && !legalNameChars.test(value)) {\n      setInvalidText(t(\"topic.topic_name_helper_text\"));\n      setTopicValidated(\"error\");\n    } else if (value.length > 249) {\n      setTopicValidated(\"error\");\n      setInvalidText(t(\"topic.cannot_exceed_characters\"));\n    } else if (value === '.' || value === '..') {\n      setTopicValidated('error');\n      setInvalidText(t('topic.invalid_name_with_dot'));\n    } else setTopicValidated(\"default\");\n  };\n\n  const partitionsWarnigCheckPlus = () => {\n    if (\n      initialPartition &&\n      Number(topicData.numPartitions + 1) > initialPartition\n    ) {\n      setPartitionsValidated(\"warning\");\n      setWarning(true);\n    } else {\n      setPartitionsValidated(\"default\");\n      setWarning(false);\n    }\n  };\n\n  const handleTextInputChange = (\n    value: string,\n    event: React.FormEvent<HTMLInputElement>\n  ) => {\n    validationCheck(value);\n    const { name: fieldName } = event.currentTarget;\n    setTopicData({ ...topicData, [kebabToCamel(fieldName)]: value });\n  };\n\n  const onDropdownChange = (value: string, event) => {\n    const { name } = event.target;\n\n    if (name === \"custom-retention-time-unit\") {\n      setCustomRetentionTimeUnit(value);\n      isCustomRetentionTimeSelected &&\n        setTopicData({\n          ...topicData,\n          \"retention.ms.unit\": value,\n        });\n    }\n    if (name === \"custom-retention-size-unit\") {\n      setCustomRetentionSizeUnit(value);\n      isCustomRetentionSizeSelected &&\n        setTopicData({\n          ...topicData,\n          \"retention.bytes.unit\": value,\n        });\n    }\n  };\n\n  const onPartitionsChange = (event: React.FormEvent<HTMLInputElement>) => {\n    const { name: fieldName, value } = event.currentTarget;\n    let partitionValue = Number(value);\n    if (partitionValue < minPartitionValue) {\n      partitionValue = minPartitionValue;\n    }\n    setTopicData({ ...topicData, [kebabToCamel(fieldName)]: partitionValue });\n  };\n\n  const handleTouchSpinPlusCamelCase = (event) => {\n    const { name } = event.currentTarget;\n    const fieldName = kebabToCamel(name);\n    setTopicData({\n      ...topicData,\n      [fieldName]: Number(topicData[fieldName]) + 1,\n    });\n    if (!isCreate) {\n      partitionsWarnigCheckPlus();\n    }\n  };\n  const partitionsWarningCheckMinus = () => {\n    if (\n      initialPartition &&\n      Number(topicData.numPartitions + -1) > initialPartition\n    ) {\n      setPartitionsValidated(\"warning\");\n      setWarning(true);\n    } else {\n      setPartitionsValidated(\"default\");\n      setWarning(false);\n    }\n  };\n\n  const handleTouchSpinMinusCamelCase = (event) => {\n    const { name } = event.currentTarget;\n    const fieldName = kebabToCamel(name);\n    setTopicData({\n      ...topicData,\n      [fieldName]: Number(topicData[fieldName]) - 1,\n    });\n    if (!isCreate) {\n      partitionsWarningCheckMinus();\n    }\n  };\n\n  const handleTouchSpinInputChange = (\n    event: React.FormEvent<HTMLInputElement>\n  ) => {\n    const { name, value } = event.currentTarget;\n\n    if (name === \"custom-retention-time\") {\n      setCustomRetentionTime(Number(value));\n      isCustomRetentionTimeSelected &&\n        setTopicData({\n          ...topicData,\n          \"retention.ms\": value,\n        });\n    } else if (name === \"custom-retention-size\") {\n      setCustomRetentionSize(Number(value));\n      isCustomRetentionSizeSelected &&\n        setTopicData({\n          ...topicData,\n          \"retention.bytes\": value,\n        });\n    }\n  };\n\n  const handleTouchSpinPlus = (event) => {\n    const { name } = event.currentTarget;\n    if (name === \"custom-retention-time\") {\n      const updatedRetentionTime = customRetentionTime + 1;\n      setCustomRetentionTime(updatedRetentionTime);\n      isCustomRetentionTimeSelected &&\n        setTopicData({\n          ...topicData,\n          \"retention.ms\": updatedRetentionTime.toString(),\n        });\n    } else if (name === \"custom-retention-size\") {\n      const updatedRetentionSize = customRetentionSize + 1;\n      setCustomRetentionSize(updatedRetentionSize);\n      isCustomRetentionSizeSelected &&\n        setTopicData({\n          ...topicData,\n          \"retention.bytes\": updatedRetentionSize.toString(),\n        });\n    }\n  };\n\n  const handleTouchSpinMinus = (event) => {\n    const { name } = event.currentTarget;\n    if (name === \"custom-retention-time\") {\n      const updatedRetentionTime = customRetentionTime - 1;\n      setCustomRetentionTime(updatedRetentionTime);\n      isCustomRetentionTimeSelected &&\n        setTopicData({\n          ...topicData,\n          \"retention.ms\": updatedRetentionTime.toString(),\n        });\n    } else if (name === \"custom-retention-size\") {\n      const updatedRetentionSize = customRetentionSize - 1;\n      setCustomRetentionSize(updatedRetentionSize);\n      isCustomRetentionSizeSelected &&\n        setTopicData({\n          ...topicData,\n          \"retention.bytes\": updatedRetentionSize.toString(),\n        });\n    }\n  };\n\n  const onDropdownChangeDotSeparated = (value: string, event) => {\n    const { name: fieldName } = event.target;\n    setTopicData({ ...topicData, [kebabToDotSeparated(fieldName)]: value });\n  };\n  const onConfirm = () => {\n    if (!isCreate) {\n      if (warning) {\n        showModal(MODAL_TYPES.UPDATE_PARTITIONS, {\n          onSaveTopic: saveTopic,\n        });\n      } else {\n        saveTopic();\n      }\n    } else {\n      if (topicData.name.length < 1) {\n        setInvalidText(t(\"topic.required\"));\n        setTopicValidated(\"error\");\n      } else {\n        setIsLoading(true);\n        fetchTopic(topicData.name);\n      }\n    }\n  };\n\n  const handleRadioChange = (_, event) => {\n    const { name } = event.target;\n\n    switch (name) {\n    case \"custom-retention-time\":\n      setIsCustomRetentionTimeSelected(true);\n      setTopicData({\n        ...topicData,\n        \"retention.ms\": customRetentionTime.toString(),\n        \"retention.ms.unit\": customRetentionTimeUnit,\n      });\n      break;\n    case \"unlimited-retention-time\":\n      setIsCustomRetentionTimeSelected(false);\n      setTopicData({\n        ...topicData,\n        \"retention.ms\": \"-1\",\n        \"retention.ms.unit\": \"milliseconds\",\n      });\n      break;\n    case \"custom-retention-size\":\n      setIsCustomRetentionSizeSelected(true);\n      setTopicData({\n        ...topicData,\n        \"retention.bytes\": customRetentionSize.toString(),\n        \"retention.bytes.unit\": customRetentionSizeUnit,\n      });\n      break;\n    case \"unlimited-retention-size\":\n      setIsCustomRetentionSizeSelected(false);\n      setTopicData({\n        ...topicData,\n        \"retention.bytes\": \"-1\",\n        \"retention.bytes.unit\": \"bytes\",\n      });\n      break;\n    }\n  };\n\n  const retentionTimeInput = (\n    <SizeTimeFormGroup\n      inputName=\"custom-retention-time\"\n      onChange={handleTouchSpinInputChange}\n      onPlus={handleTouchSpinPlus}\n      onMinus={handleTouchSpinMinus}\n      value={customRetentionTime}\n      plusBtnProps={{ name: \"custom-retention-time\" }}\n      minusBtnProps={{ name: \"custom-retention-time\" }}\n      id=\"core-config-retention-time-unit\"\n      toggleId=\"core-config-retention-dropdowntoggle\"\n      name=\"custom-retention-time-unit\"\n      dropdownValue={customRetentionTimeUnit}\n      ariaLabel={t(\"common.select_unit\")}\n      onSelectOption={onDropdownChange}\n      min={0}\n      type=\"time\"\n    />\n  );\n\n  const retentionSizeInput = (\n    <SizeTimeFormGroup\n      inputName=\"custom-retention-size\"\n      onChange={handleTouchSpinInputChange}\n      onPlus={handleTouchSpinPlus}\n      onMinus={handleTouchSpinMinus}\n      value={customRetentionSize}\n      plusBtnProps={{ name: \"custom-retention-size\" }}\n      minusBtnProps={{ name: \"custom-retention-size\" }}\n      id=\"core-config-retention-size-unit\"\n      toggleId=\"core-config-retention-size-dropdowntoggle\"\n      name=\"custom-retention-size-unit\"\n      dropdownValue={customRetentionSizeUnit}\n      ariaLabel={t(\"common.select_unit\")}\n      onSelectOption={onDropdownChange}\n      min={0}\n      type=\"memory\"\n    />\n  );\n\n  const jumpLinkItems = [\n    { href: \"#core-configuration\", label: t(\"topic.core_configuration\") },\n    { href: \"#messages\", label: t(\"topic.messages\") },\n    { href: \"#log\", label: t(\"topic.log\") },\n    { href: \"#replication\", label: t(\"topic.replication\") },\n    { href: \"#cleanup\", label: t(\"common.cleanup\") },\n    { href: \"#index\", label: t(\"topic.index\") },\n    { href: \"#flush\", label: t(\"topic.flush\") },\n  ];\n\n  return (\n    <>\n      <Sidebar hasGutter>\n        <SidebarPanel variant=\"sticky\">\n          <JumpLinks\n            isVertical\n            label={t(\"topic.jump_to_section\")}\n            scrollableSelector=\"#scrollablePageMain\"\n            style={{ position: \"sticky\" }}\n            offset={-164} // for header\n            expandable={{ default: \"expandable\", md: \"nonExpandable\" }}\n            isExpanded={false}\n          >\n            {jumpLinkItems?.map((item, index) => {\n              const { href, label } = item;\n              return (\n                <JumpLinksItem key={index} href={href}>\n                  {label}\n                </JumpLinksItem>\n              );\n            })}\n          </JumpLinks>\n        </SidebarPanel>\n        <SidebarContent>\n          <Form>\n            <FormSection\n              title={t(\"topic.core_configuration\")}\n              id=\"core-configuration\"\n              titleElement={\"h2\"}\n            >\n              <TextContent>\n                <Text component={TextVariants.p} className=\"section-info\">\n                  {t(\"topic.core_config_info\")}\n                </Text>\n              </TextContent>\n              {isCreate ? (\n                <FormGroupWithPopover\n                  labelHead={t(\"topic.topic_name\")}\n                  fieldId=\"create-topic-name\"\n                  fieldLabel={t(\"topic.topic_name\")}\n                  labelBody={t(\"topic.topic_name_description\")}\n                  buttonAriaLabel=\"More info for topic name field\"\n                  helperTextInvalid={invalidText}\n                  validated={topicValidated}\n                  isRequired={true}\n                  helperText={t(\"topic.topic_name_helper_text\")}\n                >\n                  <TextInput\n                    isRequired\n                    type=\"text\"\n                    id=\"create-topic-name\"\n                    name=\"name\"\n                    value={topicData.name}\n                    onChange={handleTextInputChange}\n                    label={t(\"topic.topic_name\")}\n                    placeholder={t(\"topic.enter_name\")}\n                    validated={topicValidated}\n                  />\n                </FormGroupWithPopover>\n              ) : (\n                <TextWithLabelPopover\n                  fieldId=\"topic-name\"\n                  btnAriaLabel=\"topic detail name\"\n                  fieldLabel=\"Name\"\n                  fieldValue={topicData.name}\n                  popoverBody={t(\"topic.topic_name_description\")}\n                  popoverHeader={t(\"topic.topic_name\")}\n                />\n              )}\n              {isCreate ? (\n                <FormGroupWithPopover\n                  fieldId=\"create-topic-partitions\"\n                  fieldLabel=\"Partitions\"\n                  labelHead={t(\"topic.partitions\")}\n                  labelBody={t(\"topic.partitions_description\")}\n                  buttonAriaLabel=\"More info for partitions field\"\n                  validated={partitionsValidated}\n                  helperText={\n                    warning ? t(\"topic.partitions_warning\") : undefined\n                  }\n                >\n                  <NumberInput\n                    id=\"create-topic-partitions\"\n                    inputName=\"num-partitions\"\n                    onChange={onPartitionsChange}\n                    onPlus={handleTouchSpinPlusCamelCase}\n                    onMinus={handleTouchSpinMinusCamelCase}\n                    value={Number(topicData.numPartitions)}\n                    plusBtnProps={{ name: \"num-partitions\" }}\n                    minusBtnProps={{ name: \"num-partitions\" }}\n                    min={1}\n                  />\n                </FormGroupWithPopover>\n              ) : (\n                <TextWithLabelPopover\n                  fieldId=\"partitions\"\n                  btnAriaLabel=\"More info for partitions field\"\n                  fieldLabel=\"Partitions\"\n                  fieldValue={topicData.numPartitions}\n                  popoverBody={t(\"topic.partitions_description\")}\n                  popoverHeader={t(\"topic.partitions\")}\n                />\n              )}\n              <TextWithLabelPopover\n                fieldId=\"replicas\"\n                btnAriaLabel={t(\"topic.replicas\")}\n                fieldLabel={t(\"topic.replicas\")}\n                fieldValue={DEFAULT_REPLICAS}\n                popoverBody={t(\"topic.replicas_description\")}\n                popoverHeader={t(\"topic.replicas\")}\n              />\n              <TextWithLabelPopover\n                fieldId=\"min-insync-replicas\"\n                btnAriaLabel=\"topic detail min-in-sync replica\"\n                fieldLabel=\"Minimum in-sync replicas\"\n                fieldValue={DEFAULT_MIN_INSYNC_REPLICAS}\n                popoverBody={t(\"topic.min_insync_replicas_description\")}\n                popoverHeader={t(\"topic.min_insync_replicas\")}\n              />\n              <FormGroupWithPopover\n                fieldId=\"retention\"\n                fieldLabel=\"Retention time\"\n                labelHead={t(\"topic.retention_time\")}\n                labelBody={t(\"topic.retention_time_description\")}\n                buttonAriaLabel=\"More info for retention time field\"\n              >\n                <Stack hasGutter>\n                  <Radio\n                    isChecked={isCustomRetentionTimeSelected}\n                    name=\"custom-retention-time\"\n                    onChange={handleRadioChange}\n                    label={retentionTimeInput}\n                    className=\"kafka-ui--radio-label__number-input\"\n                    aria-label=\"custom duration\"\n                    id=\"custom-retention-time\"\n                    value=\"custom\"\n                  />\n                  <Radio\n                    isChecked={!isCustomRetentionTimeSelected}\n                    name=\"unlimited-retention-time\"\n                    onChange={handleRadioChange}\n                    label=\"Unlimited\"\n                    aria-label=\"Unlimited\"\n                    id=\"unlimited-retention-time\"\n                    value=\"unlimited\"\n                  />\n                </Stack>\n              </FormGroupWithPopover>\n              <FormGroupWithPopover\n                fieldId=\"retention-size\"\n                fieldLabel=\"Retention size\"\n                labelHead={t(\"topic.retention_size\")}\n                labelBody={t(\"topic.retention_size_description\")}\n                buttonAriaLabel=\"More info for retention size field\"\n              >\n                <Stack hasGutter>\n                  <Radio\n                    isChecked={isCustomRetentionSizeSelected}\n                    name=\"custom-retention-size\"\n                    onChange={handleRadioChange}\n                    label={retentionSizeInput}\n                    className=\"kafka-ui--radio-label__number-input\"\n                    aria-label=\"custom size\"\n                    id=\"custom-retention-size\"\n                    value=\"custom\"\n                  />\n                  <Radio\n                    isChecked={!isCustomRetentionSizeSelected}\n                    name=\"unlimited-retention-size\"\n                    onChange={handleRadioChange}\n                    label=\"Unlimited\"\n                    aria-label=\"Unlimited\"\n                    id=\"unlimited-retention-size\"\n                    value=\"unlimited\"\n                  />\n                </Stack>\n              </FormGroupWithPopover>\n            </FormSection>\n            <FormSection\n              title={t(\"topic.messages\")}\n              id=\"messages\"\n              titleElement={\"h2\"}\n            >\n              <TextContent>\n                <Text component={TextVariants.p} className=\"section-info\">\n                  {t(\"topic.message_section_info\")}\n                </Text>\n              </TextContent>\n\n              <TextWithLabelPopover\n                fieldId=\"max-message-size\"\n                btnAriaLabel={t(\"topic.max_message_size\")}\n                fieldLabel={t(\"topic.max_message_size\")}\n                fieldValue={DEFAULT_MAXIMUM_MESSAGE_BYTES}\n                popoverBody={t(\"topic.max_message_size_description\")}\n                popoverHeader={t(\"topic.max_message_size\")}\n              />\n\n              <TextWithLabelPopover\n                fieldId=\"message-timestamp-type\"\n                btnAriaLabel={t(\"topic.message_timestamp_type\")}\n                fieldLabel={t(\"topic.message_timestamp_type\")}\n                fieldValue={DEFAULT_MESSAGE_TIMESTAMP_TYPE}\n                popoverBody={t(\"topic.message_timestamp_type_description\")}\n                popoverHeader={t(\"topic.message_timestamp_type\")}\n              />\n\n              <TextWithLabelPopover\n                fieldId=\"max-message-timestamp-diff\"\n                btnAriaLabel={t(\"topic.max_message_timestamp_diff\")}\n                fieldLabel={t(\"topic.max_message_timestamp_diff\")}\n                fieldValue={DEFAULT_MAX_MESSAGE_TIMESTAMP_DIFF}\n                popoverBody={t(\"topic.max_message_timestamp_diff_description\")}\n                popoverHeader={t(\"topic.max_message_timestamp_diff\")}\n              />\n\n              <TextWithLabelPopover\n                fieldId=\"compression-type\"\n                btnAriaLabel={t(\"topic.compression_type\")}\n                fieldLabel={t(\"topic.compression_type\")}\n                fieldValue={\"Producer\"}\n                popoverBody={t(\"topic.compression_type_description\")}\n                popoverHeader={t(\"topic.compression_type\")}\n              />\n\n              <TextWithLabelPopover\n                fieldId=\"message-format\"\n                btnAriaLabel={t(\"topic.message_format\")}\n                fieldLabel={t(\"topic.message_format\")}\n                fieldValue={\"2.7-IV2\"}\n                popoverBody={t(\"topic.message_format_description\")}\n                popoverHeader={t(\"topic.message_format\")}\n              />\n            </FormSection>\n\n            <FormSection title={t(\"topic.log\")} id=\"log\" titleElement={\"h2\"}>\n              <TextContent>\n                <Text component={TextVariants.p}>\n                  {t(\"topic.log_section_info\")}\n                </Text>\n                <Text component={TextVariants.small}>\n                  {t(\"topic.log_section_info_note\")}\n                </Text>\n              </TextContent>\n\n              <FormGroupWithPopover\n                fieldId=\"cleanup-policy\"\n                fieldLabel={t(\"topic.cleanup_policy\")}\n                labelHead={t(\"topic.cleanup_policy\")}\n                labelBody={t(\"topic.cleanup_policy_description\")}\n                buttonAriaLabel={t(\"topic.cleanup_policy\")}\n              >\n                <DropdownWithToggle\n                  id=\"log-section-policy-type-dropdown\"\n                  toggleId=\"log-section-policy-type-dropdowntoggle\"\n                  ariaLabel={t(\"common.select_policy\")}\n                  onSelectOption={onDropdownChangeDotSeparated}\n                  items={clearOptions}\n                  name=\"cleanup-policy\"\n                  value={topicData[\"cleanup.policy\"] || \"\"}\n                />\n              </FormGroupWithPopover>\n\n              <TextWithLabelPopover\n                fieldId=\"delete-retention-time\"\n                btnAriaLabel={t(\"topic.delete_retention_time\")}\n                fieldLabel={t(\"topic.delete_retention_time\")}\n                fieldValue={DEFAULT_DELETE_RETENTION_TIME}\n                popoverBody={t(\"topic.delete_retention_time_description\")}\n                popoverHeader={t(\"topic.delete_retention_time\")}\n              />\n\n              <TextWithLabelPopover\n                fieldId=\"min-cleanable-ratio\"\n                btnAriaLabel={t(\"topic.min_cleanable_ratio\")}\n                fieldLabel={t(\"topic.min_cleanable_ratio\")}\n                fieldValue={DEFAULT_MIN_CLEANBLE_RATIO}\n                popoverBody={t(\"topic.min_cleanable_ratio_description\")}\n                popoverHeader={t(\"topic.min_cleanable_ratio\")}\n              />\n\n              <TextWithLabelPopover\n                fieldId=\"min-compaction-lag-time-description\"\n                btnAriaLabel={t(\"topic.min_compaction_lag_time\")}\n                fieldLabel={t(\"topic.min_compaction_lag_time\")}\n                fieldValue={DEFAULT_MINIMUM_COMPACTION_LAG_TIME}\n                popoverBody={t(\"topic.min_compaction_lag_time_description\")}\n                popoverHeader={t(\"topic.min_compaction_lag_time\")}\n              />\n            </FormSection>\n\n            <FormSection\n              title={t(\"topic.replication\")}\n              id=\"replication\"\n              titleElement={\"h2\"}\n            >\n              <TextContent>\n                <Text component={TextVariants.p}>\n                  {t(\"topic.replication_section_info\")}\n                  <Text component={TextVariants.small}>\n                    {t(\"topic.replication_section_info_note\")}\n                  </Text>\n                </Text>\n              </TextContent>\n\n              <TextWithLabelPopover\n                fieldId=\"unclean-leader-election\"\n                btnAriaLabel={t(\"topic.unclean_leader_election\")}\n                fieldLabel={t(\"topic.unclean_leader_election\")}\n                fieldValue={t(\"common.disabled\")}\n                popoverBody={t(\"topic.unclean_leader_election_description\")}\n                popoverHeader={t(\"topic.unclean_leader_election\")}\n              />\n            </FormSection>\n\n            <FormSection\n              title={t(\"common.cleanup\")}\n              id=\"cleanup\"\n              titleElement={\"h2\"}\n            >\n              <TextContent>\n                <Text component={TextVariants.p} className=\"section-info\">\n                  {t(\"topic.cleanup_section_info\")}\n                </Text>\n              </TextContent>\n\n              <TextWithLabelPopover\n                fieldId=\"log-segment-size\"\n                btnAriaLabel={t(\"topic.log_segment_size\")}\n                fieldLabel={t(\"topic.log_segment_size\")}\n                fieldValue={DEFAULT_LOG_SEGMENT_SIZE}\n                popoverBody={t(\"topic.log_segment_size\")}\n                popoverHeader={t(\"topic.log_segment_size_description\")}\n              />\n\n              <TextWithLabelPopover\n                fieldId=\"segement-time\"\n                btnAriaLabel={t(\"topic.segement_time\")}\n                fieldLabel={t(\"topic.segement_time\")}\n                fieldValue={DEFAULT_SEGMENT_TIME}\n                popoverBody={t(\"topic.segement_time_description\")}\n                popoverHeader={t(\"topic.segement_time\")}\n              />\n\n              <TextWithLabelPopover\n                fieldId=\"segment-jitter-time\"\n                btnAriaLabel={t(\"topic.segment_jitter_time\")}\n                fieldLabel={t(\"topic.segment_jitter_time\")}\n                fieldValue={DEFAULT_SEGMENT_JITTER_TIME}\n                popoverBody={t(\"topic.segment_jitter_time_description\")}\n                popoverHeader={t(\"topic.segment_jitter_time\")}\n              />\n\n              <TextWithLabelPopover\n                fieldId=\"file-delete-delay\"\n                btnAriaLabel={t(\"topic.file_delete_delay\")}\n                fieldLabel={t(\"topic.file_delete_delay\")}\n                fieldValue={DEFAULT_FILE_DELETE_DELAY}\n                popoverBody={t(\"topic.file_delete_delay_description\")}\n                popoverHeader={t(\"topic.file_delete_delay\")}\n              />\n\n              <TextWithLabelPopover\n                fieldId=\"preallocate-log-segment-files\"\n                btnAriaLabel={t(\"topic.preallocate_log_segment_files\")}\n                fieldLabel={t(\"topic.preallocate_log_segment_files\")}\n                fieldValue={t(\"common.disabled\")}\n                popoverBody={t(\n                  \"topic.preallocate_log_segment_files_description\"\n                )}\n                popoverHeader={t(\"topic.preallocate_log_segment_files\")}\n              />\n            </FormSection>\n\n            <FormSection\n              title={t(\"topic.index\")}\n              id=\"index\"\n              titleElement={\"h2\"}\n            >\n              <TextContent>\n                <Text component={TextVariants.p} className=\"section-info\">\n                  {t(\"topic.index_section_info\")}\n                </Text>\n              </TextContent>\n\n              <TextWithLabelPopover\n                fieldId=\"index-interval-size\"\n                btnAriaLabel={t(\"topic.index_interval_size\")}\n                fieldLabel={t(\"topic.index_interval_size\")}\n                fieldValue={DEFAULT_INDEX_INTERVAL_SIZE}\n                popoverBody={t(\"topic.index_interval_size_description\")}\n                popoverHeader={t(\"topic.index_interval_size\")}\n              />\n\n              <TextWithLabelPopover\n                fieldId=\"segment-index-size\"\n                btnAriaLabel={t(\"topic.segment_index_size\")}\n                fieldLabel={t(\"topic.segment_index_size\")}\n                fieldValue={DEFAULT_SEGMENT_INDEX_SIZE}\n                popoverBody={t(\"topic.segment_index_size_description\")}\n                popoverHeader={t(\"topic.segment_index_size\")}\n              />\n            </FormSection>\n\n            <FormSection\n              title={t(\"topic.flush\")}\n              id=\"flush\"\n              titleElement={\"h2\"}\n            >\n              <TextContent>\n                <Text component={TextVariants.p} className=\"section-info\">\n                  {t(\"topic.flush_section_info\")}\n                </Text>\n              </TextContent>\n\n              <TextWithLabelPopover\n                fieldId=\"flush-interval-messages\"\n                btnAriaLabel={t(\"topic.flush_interval_messages\")}\n                fieldLabel={t(\"topic.flush_interval_messages\")}\n                fieldValue={DEFAULT_FLUSH_INTERVAL_MESSAGES}\n                popoverBody={t(\"topic.flush_interval_messages_description\")}\n                popoverHeader={t(\"topic.flush_interval_messages\")}\n              />\n\n              <TextWithLabelPopover\n                fieldId=\"flush-interval-time\"\n                btnAriaLabel={t(\"topic.flush_interval_time\")}\n                fieldLabel={t(\"topic.flush_interval_time\")}\n                fieldValue={DEFAULT_FLUSH_INTERVAL_TIME}\n                popoverBody={t(\"topic.flush_interval_time_description\")}\n                popoverHeader={t(\"topic.flush_interval_time\")}\n              />\n            </FormSection>\n          </Form>\n          <ActionGroup className=\"kafka-ui--sticky-footer\">\n            <Button\n              isLoading={isLoading || isLoadingSave}\n              onClick={onConfirm}\n              variant=\"primary\"\n              data-testid={\n                isCreate\n                  ? \"topicAdvanceCreate-actionCreate\"\n                  : \"tabProperties-actionSave\"\n              }\n              isDisabled={topicValidated == \"default\" ? false : true}\n            >\n              {actionText}\n            </Button>\n            <Button\n              onClick={handleCancel}\n              variant=\"link\"\n              data-testid={\n                isCreate\n                  ? \"topicAdvanceCreate-actionCancel\"\n                  : \"tabProperties-actionCancel\"\n              }\n            >\n              {t(\"common.cancel\")}\n            </Button>\n          </ActionGroup>\n        </SidebarContent>\n      </Sidebar>\n    </>\n  );\n};\n","import { ConfigEntry, NewTopicInput } from '@rhoas/kafka-instance-sdk';\nimport { IAdvancedTopic } from '@app/modules/Topics/components/CreateTopicWizard';\n\nconst capitalizeText = (text: string) => {\n  return text.charAt(0).toUpperCase() + text.slice(1);\n};\n\nexport const kebabToCamel = function (kebabCase: string): string {\n  const words: string[] = kebabCase.split('-');\n\n  const camelCased: string[] = words.map((word: string, index: number) => {\n    return index > 0 ? capitalizeText(word) : word;\n  });\n\n  return camelCased.join('');\n};\n\nexport const kebabToDotSeparated = (val: string): string => {\n  return val.replace('-', '.');\n};\n\nconst unitsToBytes = {\n  bytes: 1,\n  kilobytes: 1000,\n  megabytes: 1000000,\n  gigabytes: 1000000000,\n  terabytes: 1000000000000,\n};\n\nconst unitsToMilliSecond = {\n  milliseconds: 1,\n  seconds: 1000,\n  days: 86400000,\n  months: 2592000000,\n  years: 31536000000,\n};\n\nexport const convertUnits = (topicData: IAdvancedTopic): IAdvancedTopic => {\n  const topic = { ...topicData };\n\n  for (const key in topic) {\n    if (key.split('.').pop() === 'ms') {\n      topic[key] = String(\n        Number(topic[key]) *\n        unitsToMilliSecond[topic[`${key}.unit`] || 'milliseconds']\n      );\n    }\n    if (key.split('.').pop() === 'bytes') {\n      topic[key] = String(\n        Number(topic[key]) * unitsToBytes[topic[`${key}.unit`] || 'bytes']\n      );\n    }\n  }\n\n  if (topic['flush.messages']) {\n    topic['flush.messages'] = String(\n      Number(topic['flush.messages']) *\n      unitsToMilliSecond[topic['flush.messages.unit'] || 'milliseconds']\n    );\n  }\n\n  for (const key in topic) {\n    if (key.split('.').pop() === 'unit') {\n      delete topic[key];\n    }\n  }\n\n  return topic;\n};\n\nexport const formatTopicRequest = (topic: IAdvancedTopic): NewTopicInput => {\n  const { name, numPartitions, ...configEntries } = topic;\n\n  const config: ConfigEntry[] = [];\n\n  for (const key in configEntries) {\n    if (key) {\n      config.push({\n        key,\n        value: configEntries[key].toString(),\n      });\n    }\n  }\n\n  return {\n    name,\n    settings: {\n      numPartitions: Number(numPartitions),\n      config,\n    },\n  };\n};\n"],"sourceRoot":""}