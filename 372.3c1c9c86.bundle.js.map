{"version":3,"sources":["webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-circle-icon.js","webpack://kafka-ui/./src/components/ErrorBoundary/ErrorBoundary.tsx","webpack://kafka-ui/./src/components/MASAlerts/MASAlertToastGroup.tsx","webpack://kafka-ui/./src/components/MASAlerts/MASAlerts.tsx","webpack://kafka-ui/./src/components/AppLayout/AppLayout.tsx","webpack://kafka-ui/./src/modules/Topics/pages/MainView/MainViewConnected.tsx","webpack://kafka-ui/./src/modules/Topics/pages/TopicDetail/TopicDetailConnected.tsx","webpack://kafka-ui/./src/modules/Topics/pages/CreateTopic/CreateTopicConnected.tsx","webpack://kafka-ui/./src/modules/Topics/components/UpdateTopicView/UpdateTopicView.tsx","webpack://kafka-ui/./src/modules/Topics/pages/UpdateTopic/UpdateTopicPage.tsx","webpack://kafka-ui/./src/modules/Topics/pages/UpdateTopic/UpdateTopicConnected.tsx","webpack://kafka-ui/./src/modules/ConsumerGroups/pages/ConsumerGroups/ConsumerGroupsView.tsx","webpack://kafka-ui/./src/modules/ConsumerGroups/pages/ConsumerGroupsByTopic/ConsumerGroupsByTopicView.tsx","webpack://kafka-ui/./src/Routes.tsx","webpack://kafka-ui/./src/bootstrap/bootstrap.tsx","webpack://kafka-ui/./src/App.tsx"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","state","hasError","onClickButton","history","props","setState","push","getDerivedStateFromError","_","componentDidCatch","error","errorInfo","console","render","t","this","PageSection","padding","default","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","icon","Title","headingLevel","size","TitleSizes","EmptyStateBody","Button","ButtonVariant","onClick","children","Component","ErrorBoundaryComponent","withRouter","withTranslation","ErrorBoundary","MASAlertToastGroup","alerts","onCloseAlert","AlertGroup","isToast","map","id","title","description","dataTestId","rest","Alert","key","isLiveRegion","AlertVariant","variantLabel","actionClose","AlertActionCloseButton","onClose","AlertProvider","useState","setAlerts","timers","setTimers","useEffect","timersKeys","timer","timeOuts","filter","alert","includes","timeOut","setTimeout","hideAlert","forEach","clearTimeout","el","AlertContext","value","addAlert","Date","getTime","toString","AppLayout","useTranslation","isDropDownOpen","setIsDropDownOpen","userDropDownItems","DropdownItem","brandImgLogo","Brand","src","brandImg","alt","userDropDownToggle","DropdownToggle","onToggle","toggleIndicator","CaretDownIcon","userDropDown","Dropdown","onSelect","toggle","isOpen","isPlain","dropdownItems","avatar","Avatar","className","HeaderTools","PageHeaderTools","Page","mainContainerId","header","PageHeader","logo","logoComponent","headerTools","MainViewConnected","useHistory","onConnectToRoute","routePath","getConnectToRoutePath","createHref","pathname","MainView","onCreateTopic","onEditTopic","topicName","activeTab","TopicDetailConnected","useParams","TopicDetailPage","updateTopic","onDeleteTopic","CreateTopicConnected","CreateTopicPage","onCloseCreateTopic","UpdateTopicView","onCancelUpdateTopic","onSaveTopic","onError","config","useContext","useAlert","initialState","numPartitions","topicData","setTopicData","isLoading","setIsLoading","topicRes","configItem","partitions","length","response","data","code","error_message","status","fetchTopic","TopicAdvanceConfig","isCreate","saveTopic","configEntries","newConfig","toLowerCase","topicSettings","then","handleCancel","isLoadingSave","UpdateTopicPage","kafkaName","kafkaPageLink","kafkaInstanceLink","activeTabKey","setActiveTabKey","contentRefConsumerGroup","contentRefProperties","TopicDetailHead","PageSectionVariants","Tabs","event","tabIndex","activeKey","isBox","Tab","eventKey","TabTitleText","tabContentId","tabContentRef","TabContent","ref","hidden","ConsumerGroups","topic","consumerGroupByTopic","UpdateTopicConnected","ConsumerGroupsView","ConsumerGroupsByTopicView","Routes","Switch","Route","path","component","exact","I18nextProvider","i18n","basePath","getToken","RootModal","document","getElementById"],"mappings":"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","file":"372.3c1c9c86.bundle.js","sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.ExclamationCircleIconConfig = {\n  name: 'ExclamationCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExclamationCircleIcon = require('../createIcon').createIcon(exports.ExclamationCircleIconConfig);\nexports[\"default\"] = exports.ExclamationCircleIcon;","import React, { Component, ErrorInfo, ReactNode } from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport {\n  Button,\n  ButtonVariant,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  PageSection,\n  Title,\n  TitleSizes,\n} from \"@patternfly/react-core\";\nimport ExclamationCircleIcon from \"@patternfly/react-icons/dist/js/icons/exclamation-circle-icon\";\nimport \"./ErrorBoundary.css\";\n\ntype Props = WithTranslation &\n  RouteComponentProps & {\n    children?: ReactNode;\n  };\n\ntype State = {\n  hasError?: boolean;\n};\n\nclass ErrorBoundary extends Component<Props, State> {\n  state: State = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(_: Error): State {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error(\"error:\", error, errorInfo);\n  }\n\n  onClickButton = () => {\n    const { history } = this.props;\n    this.setState({ hasError: false });\n    history && history.push(\"/\");\n  };\n\n  render() {\n    const { t } = this.props;\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return (\n        <PageSection padding={{ default: \"noPadding\" }}>\n          <EmptyState variant={EmptyStateVariant.full}>\n            <EmptyStateIcon icon={ExclamationCircleIcon} />\n            <Title headingLevel=\"h1\" size={TitleSizes.lg}>\n              {t(\"common.error_boundary_title\")}\n            </Title>\n            <EmptyStateBody>{t(\"common.unexpected_error\")}</EmptyStateBody>\n            <Button\n              variant={ButtonVariant.primary}\n              onClick={this.onClickButton}\n            >\n              {t(\"common.return_to_home\")}\n            </Button>\n          </EmptyState>\n        </PageSection>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nconst ErrorBoundaryComponent = withRouter(withTranslation()(ErrorBoundary));\nexport { ErrorBoundaryComponent as ErrorBoundary };\n","import React from 'react';\nimport { AlertProps } from '@bf2/ui-shared';\nimport { AlertGroup, Alert, AlertActionCloseButton, AlertVariant } from '@patternfly/react-core';\n\ntype AlertToastGroupProps = {\n  alerts: AlertProps[];\n  onCloseAlert: (key: string | undefined) => void;\n};\n\nexport const MASAlertToastGroup: React.FunctionComponent<AlertToastGroupProps> = ({\n  alerts,\n  onCloseAlert,\n}: AlertToastGroupProps) => {\n  return (\n    <AlertGroup isToast>\n      {alerts.map(({ id, variant, title, description, dataTestId, ...rest }) => (\n        <Alert\n          key={id}\n          isLiveRegion\n          variant={AlertVariant[variant]}\n          variantLabel=\"\"\n          title={title}\n          actionClose={<AlertActionCloseButton title={title} onClose={() => onCloseAlert(id)} />}\n          data-testid={dataTestId}\n          {...rest}\n        >\n          {description}\n        </Alert>\n      ))}\n    </AlertGroup>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { MASAlertToastGroup } from './MASAlertToastGroup';\nimport { AlertContext, AlertProps } from '@bf2/ui-shared';\n\ntype TimeOut = {\n  key: string | undefined;\n  timeOut: ReturnType<typeof setTimeout> | undefined;\n};\n\nexport const AlertProvider: React.FunctionComponent = ({ children }) => {\n  const [alerts, setAlerts] = useState<AlertProps[]>([]);\n  const [timers, setTimers] = useState<TimeOut[]>([]);\n\n  useEffect(() => {\n    const timersKeys = timers.map((timer) => timer.key);\n    const timeOuts = alerts\n      .filter((alert) => !timersKeys.includes(alert?.id))\n      .map((alert) => {\n        const { id = '' } = alert;\n        const timeOut: ReturnType<typeof setTimeout> = setTimeout(() => hideAlert(id), 8000);\n        return { key: alert.id, timeOut } as TimeOut;\n      });\n    setTimers([...timers, ...timeOuts]);\n    return () => timers.forEach((timer) => timer?.timeOut && clearTimeout(timer.timeOut));\n  }, [alerts]);\n\n  const createId = () => new Date().getTime();\n\n  const hideAlert = (key: string | undefined) => {\n    setAlerts((alerts) => [...alerts.filter((el) => el.id !== key)]);\n    setTimers((timers) => [...timers.filter((timer) => timer.key === key)]);\n  };\n\n  const addAlert = (props: AlertProps) => {\n    const id = createId().toString();\n    setAlerts([...alerts, { ...props, id }]);\n  };\n\n  return (\n    <AlertContext.Provider value={{ addAlert }}>\n      <MASAlertToastGroup alerts={alerts} onCloseAlert={hideAlert} />\n      {children}\n    </AlertContext.Provider>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Avatar,\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n  PageHeader,\n  Brand,\n  PageHeaderTools,\n  Page,\n} from \"@patternfly/react-core\";\nimport { CaretDownIcon } from \"@patternfly/react-icons\";\nimport avatarImg from \"../../images/img_avatar.svg\";\nimport brandImg from \"../../images/brandImg.png\";\n\nexport const AppLayout: React.FC = ({ children }) => {\n  const { t } = useTranslation();\n\n  const [isDropDownOpen, setIsDropDownOpen] = useState<boolean>(false);\n  const handleUserDropDownSelect = () => {\n    setIsDropDownOpen(!isDropDownOpen);\n  };\n\n  const handleUserDropDownToggle = () => {\n    setIsDropDownOpen(!isDropDownOpen);\n  };\n\n  const userDropDownItems = [<DropdownItem key=\"logout\">Logout</DropdownItem>];\n  const brandImgLogo = <Brand src={brandImg} alt={t(\"common.red_hat_logo\")} />;\n\n  const userDropDownToggle = (\n    <DropdownToggle\n      id=\"user-dropdown-toggle\"\n      onToggle={handleUserDropDownToggle}\n      toggleIndicator={CaretDownIcon}\n    >\n      Ned Username\n    </DropdownToggle>\n  );\n\n  const userDropDown = (\n    <Dropdown\n      onSelect={handleUserDropDownSelect}\n      toggle={userDropDownToggle}\n      isOpen={isDropDownOpen}\n      isPlain\n      dropdownItems={userDropDownItems}\n    />\n  );\n\n  const avatar = (\n    <React.Fragment>\n      <Avatar src={avatarImg} className=\"app-masthead-avatar\" alt=\"avatar\" />\n    </React.Fragment>\n  );\n\n  const HeaderTools = (\n    <PageHeaderTools>\n      {userDropDown}\n      {avatar}\n    </PageHeaderTools>\n  );\n\n  const AppMastHead = () => (\n    <PageHeader\n      logo={brandImgLogo}\n      logoComponent=\"h1\"\n      headerTools={HeaderTools}\n    />\n  );\n\n  return (\n    <Page mainContainerId=\"scrollablePageMain\" header={<AppMastHead />}>\n      {children}\n    </Page>\n  );\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { MainView } from \"./MainView\";\nimport { FederatedContext } from \"@app/contexts\";\n\nconst MainViewConnected: React.FC = () => {\n  const history = useHistory();\n\n  const getConnectToRoutePath = (routePath: string, key?: string) => {\n    if (key) {\n      return history.createHref({ pathname: `/${routePath}`, key });\n    }\n    return history.createHref({ pathname: `/${routePath}` });\n  };\n\n  const onConnectToRoute = (routePath: string) => {\n    history.push(`/${routePath}`);\n  };\n\n  const onCreateTopic = () => {\n    onConnectToRoute(\"topic/create\");\n  };\n\n  const onEditTopic = (topicName: string | undefined) => {\n    onConnectToRoute(`topic/update/${topicName}`);\n  };\n\n  return (\n    <FederatedContext.Provider\n      value={{\n        onConnectToRoute,\n        getConnectToRoutePath,\n      }}\n    >\n      <MainView\n        onCreateTopic={onCreateTopic}\n        onEditTopic={onEditTopic}\n        activeTab={1}\n      />\n    </FederatedContext.Provider>\n  );\n};\n\nexport { MainViewConnected };\n","import React from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { TopicDetailPage } from \"@app/modules/Topics/pages/TopicDetail\";\nimport { FederatedContext } from \"@app/contexts\";\n\ntype TopicUseParams = {\n  topicName: string;\n};\n\nconst TopicDetailConnected: React.FC = () => {\n  const history = useHistory();\n  const { topicName } = useParams<TopicUseParams>();\n\n  const updateTopic = () => {\n    history.push(`/topic/update/${topicName}`);\n  };\n\n  const onDeleteTopic = () => {\n    history.push(\"/topics\");\n  };\n\n  return (\n    <FederatedContext.Provider value={{ topicName, activeTab: 2 }}>\n      <TopicDetailPage\n        updateTopic={updateTopic}\n        onDeleteTopic={onDeleteTopic}\n      />\n    </FederatedContext.Provider>\n  );\n};\n\nexport { TopicDetailConnected };\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CreateTopicPage } from \"@app/modules/Topics/pages\";\n\nconst CreateTopicConnected: React.FC = () => {\n  const history = useHistory();\n\n  const onCloseCreateTopic = () => {\n    history.push(\"/topics\");\n  };\n\n  return <CreateTopicPage onCloseCreateTopic={onCloseCreateTopic} />;\n};\n\nexport { CreateTopicConnected };\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AlertVariant } from \"@patternfly/react-core\";\nimport {\n  TopicAdvanceConfig,\n  IAdvancedTopic,\n} from \"@app/modules/Topics/components\";\nimport { getTopic, updateTopicModel } from \"@app/services\";\nimport { ConfigEntry, TopicSettings } from \"@app/openapi/api\";\nimport { ConfigContext } from \"@app/contexts\";\nimport { convertUnits } from \"@app/modules/Topics/utils\";\nimport { isAxiosError } from \"@app/utils/axios\";\nimport { useAlert } from \"@bf2/ui-shared\";\nimport \"../CreateTopicWizard/CreateTopicWizard.css\";\n\nexport type UpdateTopicViewProps = {\n  topicName: string;\n  onCancelUpdateTopic: () => void;\n  onDeleteTopic: () => void;\n  onSaveTopic: () => void;\n  onError?: (errorCode: number, message: string) => void;\n};\nexport const UpdateTopicView: React.FunctionComponent<UpdateTopicViewProps> = ({\n  topicName,\n  onCancelUpdateTopic,\n  onSaveTopic,\n  onError,\n}) => {\n  const { t } = useTranslation();\n  const config = useContext(ConfigContext);\n  const { addAlert } = useAlert();\n  const initialState = {\n    name: topicName,\n    numPartitions: \"\",\n    \"retention.ms\": \"\",\n    \"retention.ms.unit\": \"milliseconds\",\n    \"retention.bytes\": \"\",\n    \"retention.bytes.unit\": \"bytes\",\n    \"cleanup.policy\": \"\",\n  };\n  const [topicData, setTopicData] = useState<IAdvancedTopic>(initialState);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const fetchTopic = async (topicName) => {\n    try {\n      const topicRes = await getTopic(topicName, config);\n      const configEntries: any = {};\n      topicRes.config?.forEach((configItem) => {\n        configEntries[configItem.key || \"\"] = configItem.value || \"\";\n      });\n\n      setTopicData({\n        ...topicData,\n        numPartitions: topicRes?.partitions?.length.toString() || \"\",\n        \"cleanup.policy\": configEntries[\"cleanup.policy\"] || \"delete\",\n        \"retention.bytes\": configEntries[\"retention.bytes\"] || \"-1\",\n        \"retention.ms\": configEntries[\"retention.ms\"] || \"604800000\",\n      });\n    } catch (err) {\n      if (isAxiosError(err)) {\n        if (onError) {\n          onError(err.response?.data.code, err.response?.data.error_message);\n        }\n        if (err.response?.status === 404) {\n          // then it's a non-existent topic\n          addAlert({\n            variant: AlertVariant.danger,\n            title: `Topic ${topicName} does not exist`,\n          });\n          onCancelUpdateTopic();\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchTopic(topicName);\n  }, [topicName]);\n\n  const saveTopic = async () => {\n    const { name, ...configEntries } = convertUnits(topicData);\n    const newConfig: ConfigEntry[] = [];\n    setIsLoading(true);\n\n    for (const key in configEntries) {\n      // TODO Remove check when API supports setting the number of partition\n      if (key && key !== \"numPartitions\") {\n        newConfig.push({\n          key,\n          value: configEntries[key].toString().toLowerCase(),\n        });\n      }\n    }\n\n    const topicSettings: TopicSettings = {\n      // TODO Re-enable when the API supports setting the number of partition\n      // numPartitions: Number(topicData.numPartitions),\n      config: newConfig,\n    };\n\n    try {\n      await updateTopicModel(name, topicSettings, config).then(() => {\n        addAlert({\n          title: t(\"topic.topic_successfully_updated\"),\n          variant: AlertVariant.success,\n        });\n        setIsLoading(false);\n        onSaveTopic();\n      });\n    } catch (err) {\n      if (onError) {\n        onError(err.response.data.code, err.response.data.error_message);\n      }\n      setIsLoading(false);\n      addAlert({\n        title: err.response.data.error_message,\n        variant: AlertVariant.danger,\n      });\n    }\n  };\n\n  return (\n    <>\n      <TopicAdvanceConfig\n        isCreate={false}\n        saveTopic={saveTopic}\n        handleCancel={onCancelUpdateTopic}\n        topicData={topicData}\n        setTopicData={setTopicData}\n        isLoadingSave={isLoading}\n      />\n      <br />\n      <br />\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Tabs,\n  Tab,\n  TabTitleText,\n  PageSection,\n  PageSectionVariants,\n  TabContent,\n} from \"@patternfly/react-core\";\nimport { ConsumerGroups } from \"@app/modules/ConsumerGroups\";\nimport {\n  UpdateTopicView,\n  TopicDetailHead,\n} from \"@app/modules/Topics/components\";\nimport { useFederated } from \"@app/contexts\";\nimport \"../style.css\";\n\nexport type UpdateTopicPageProps = {\n  onCancelUpdateTopic: () => void;\n  onDeleteTopic: () => void;\n  onSaveTopic: () => void;\n};\n\nexport const UpdateTopicPage: React.FunctionComponent<UpdateTopicPageProps> = ({\n  onCancelUpdateTopic,\n  onDeleteTopic,\n  onSaveTopic,\n}) => {\n  const { t } = useTranslation();\n  const {\n    topicName = \"\",\n    kafkaName,\n    kafkaPageLink,\n    kafkaInstanceLink,\n    onError,\n    activeTab = 0,\n  } = useFederated();\n  const [activeTabKey, setActiveTabKey] = useState(activeTab);\n\n  const contentRefConsumerGroup = React.createRef<HTMLElement>();\n  const contentRefProperties = React.createRef<HTMLElement>();\n\n  const handleTabClick = (event, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  return (\n    <>\n      <TopicDetailHead\n        topicName={topicName}\n        kafkaName={kafkaName}\n        kafkaPageLink={kafkaPageLink}\n        kafkaInstanceLink={kafkaInstanceLink}\n      />\n      <PageSection\n        variant={PageSectionVariants.light}\n        className=\"pf-c-page__main-tabs\"\n        padding={{ default: \"noPadding\" }}\n      >\n        <Tabs\n          onSelect={handleTabClick}\n          activeKey={activeTabKey}\n          isBox={false}\n          className=\"pf-m-page-insets\"\n        >\n          <Tab\n            eventKey={0}\n            title={\n              <TabTitleText>{t(\"consumerGroup.consumer_groups\")}</TabTitleText>\n            }\n            tabContentId=\"kafka-ui-TabcontentConsumerGroups\"\n            tabContentRef={contentRefConsumerGroup}\n          ></Tab>\n          <Tab\n            eventKey={1}\n            title={<TabTitleText>{t(\"common.properties\")}</TabTitleText>}\n            tabContentId=\"kafka-ui-TabcontentProperties\"\n            tabContentRef={contentRefProperties}\n          ></Tab>\n        </Tabs>\n      </PageSection>\n      <PageSection\n        variant={\n          activeTabKey === 1\n            ? PageSectionVariants.light\n            : PageSectionVariants.default\n        }\n      >\n        <TabContent\n          eventKey={0}\n          id=\"kafka-ui-TabcontentConsumerGroups\"\n          ref={contentRefConsumerGroup}\n          className=\"kafka-ui-m-full-height\"\n          aria-label=\"Consumer groups.\"\n          hidden={activeTab !== 0 ? true : false}\n        >\n          <ConsumerGroups topic={topicName} consumerGroupByTopic={true} />\n        </TabContent>\n        <TabContent\n          eventKey={1}\n          id=\"kafka-ui-TabcontentProperties\"\n          ref={contentRefProperties}\n          className=\"kafka-ui-m-full-height\"\n          aria-label=\"Topic properties\"\n          hidden={activeTab !== 1 ? true : false}\n        >\n          <UpdateTopicView\n            topicName={topicName}\n            onCancelUpdateTopic={onCancelUpdateTopic}\n            onDeleteTopic={onDeleteTopic}\n            onSaveTopic={onSaveTopic}\n            onError={onError}\n          />\n        </TabContent>\n      </PageSection>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { UpdateTopicPage } from \"@app/modules/Topics/pages/UpdateTopic\";\nimport { FederatedContext } from \"@app/contexts\";\n// import \"../style.css\";\n\ntype TopicUseParams = {\n  topicName: string;\n};\n\nconst UpdateTopicConnected: React.FC = () => {\n  const history = useHistory();\n  const { topicName } = useParams<TopicUseParams>();\n\n  const onSaveTopic = () => {\n    history.push(`/topics/${topicName}`);\n  };\n\n  const onCancelUpdateTopic = () => {\n    history.push(`/topics/${topicName}`);\n  };\n\n  const onDeleteTopic = () => {\n    history.push(\"/topics\");\n  };\n\n  return (\n    <FederatedContext.Provider value={{ activeTab: 1, topicName }}>\n      <UpdateTopicPage\n        onCancelUpdateTopic={onCancelUpdateTopic}\n        onDeleteTopic={onDeleteTopic}\n        onSaveTopic={onSaveTopic}\n      />\n    </FederatedContext.Provider>\n  );\n};\n\nexport { UpdateTopicConnected };\n","import React, { FunctionComponent } from \"react\";\nimport { MainView } from \"@app/modules/Topics/pages\";\n\nexport const ConsumerGroupsView: FunctionComponent = () => {\n  return <MainView activeTab={2} />;\n};\n\nexport default ConsumerGroupsView;\n","import React, { FunctionComponent } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { TopicDetailPage } from \"@app/modules/Topics/pages/TopicDetail/TopicDetailPage\";\n\ntype TopicUseParams = {\n  topicName: string;\n};\n\ntype TopicDetailParams = {\n  onDeleteTopic: () => void;\n};\n\nconst ConsumerGroupsByTopicView: FunctionComponent<TopicDetailParams> = () => {\n  const { topicName } = useParams<TopicUseParams>();\n  const history = useHistory();\n\n  const updateTopic = () => {\n    history.push(`/topic/update/${topicName}`);\n  };\n\n  return <TopicDetailPage updateTopic={updateTopic} />;\n};\n\nexport { ConsumerGroupsByTopicView };\n\nexport default ConsumerGroupsByTopicView;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport {\n  MainViewConnected,\n  CreateTopicConnected,\n  TopicDetailConnected,\n  UpdateTopicConnected,\n} from \"@app/modules/Topics/pages\";\nimport {\n  ConsumerGroupsView,\n  ConsumerGroupsByTopicView,\n} from \"@app/modules/ConsumerGroups/pages\";\n\nconst Routes: React.FC = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" component={MainViewConnected} exact />\n        <Route path=\"/topics\" component={MainViewConnected} exact />\n        <Route\n          path=\"/topics/:topicName\"\n          component={TopicDetailConnected}\n          exact\n        />\n        <Route path=\"/topic/create\" component={CreateTopicConnected} />\n        <Route\n          path=\"/topic/update/:topicName\"\n          component={UpdateTopicConnected}\n          exact\n        />\n        <Route path=\"/consumerGroups\" component={ConsumerGroupsView} exact />\n        <Route\n          path=\"/topics/consumerGroups/:topicName\"\n          component={ConsumerGroupsByTopicView}\n          exact\n        />\n      </Switch>\n    </Router>\n  );\n};\n\nexport { Routes };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"@app/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","import React from \"react\";\nimport { I18nextProvider } from \"react-i18next\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport kafkai18n from \"@app/i18n\";\nimport { ConfigContext } from \"@app/contexts\";\nimport {\n  ErrorBoundary,\n  AppLayout,\n  RootModal,\n  AlertProvider,\n} from \"@app/components\";\nimport { Routes } from \"@app/Routes\";\n\nconst App: React.FC = () => {\n  return (\n    <I18nextProvider i18n={kafkai18n}>\n      <ConfigContext.Provider\n        value={{\n          basePath:\n            \"http://localhost:8000/api/managed-services-strimzi-ui/v1/api\",\n          getToken: async () => \"\",\n        }}\n      >\n        <Router>\n          <ErrorBoundary>\n            <AlertProvider>\n              <RootModal>\n                <AppLayout>\n                  <Routes />\n                </AppLayout>\n              </RootModal>\n            </AlertProvider>\n          </ErrorBoundary>\n        </Router>\n      </ConfigContext.Provider>\n    </I18nextProvider>\n  );\n};\n\nexport { App };\n"],"sourceRoot":""}