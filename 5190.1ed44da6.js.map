{"version":3,"file":"5190.1ed44da6.js","mappings":"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","sources":["webpack://kafka-ui/./node_modules/@patternfly/react-styles/dist/esm/index.js","webpack://kafka-ui/./src/components/MASToolbar/MASToolbar.tsx","webpack://kafka-ui/./src/modules/Permissions/components/PermissionsTable/PermissionsToolbar.tsx","webpack://kafka-ui/./src/modules/Permissions/components/PermissionsTable/PermissionsTableEmptyState.tsx","webpack://kafka-ui/./src/modules/Permissions/components/PermissionsTable/PermissionsTable.tsx","webpack://kafka-ui/./src/modules/Permissions/pages/PermissionsTable/PermissionsTableView.tsx","webpack://kafka-ui/./src/services/consumer-groups.ts","webpack://kafka-ui/./src/services/topics.ts"],"sourcesContent":["/** Joins args into a className string\n *\n * @param {any} args list of objects, string, or arrays to reduce\n */\nexport function css(...args) {\n    // Adapted from https://github.com/JedWatson/classnames/blob/master/index.js\n    const classes = [];\n    const hasOwn = {}.hasOwnProperty;\n    args.filter(Boolean).forEach((arg) => {\n        const argType = typeof arg;\n        if (argType === 'string' || argType === 'number') {\n            classes.push(arg);\n        }\n        else if (Array.isArray(arg) && arg.length) {\n            const inner = css(...arg);\n            if (inner) {\n                classes.push(inner);\n            }\n        }\n        else if (argType === 'object') {\n            for (const key in arg) {\n                if (hasOwn.call(arg, key) && arg[key]) {\n                    classes.push(key);\n                }\n            }\n        }\n    });\n    return classes.join(' ');\n}\n//# sourceMappingURL=index.js.map","import React from 'react';\nimport {\n  ToolbarContent,\n  Toolbar,\n  ToolbarProps,\n  ToolbarItemProps as PFToolbarItemProps,\n  ToolbarToggleGroup,\n  ToolbarItem,\n  ToolbarToggleGroupProps,\n} from '@patternfly/react-core';\n\nexport type ToolbarItemProps = Omit<PFToolbarItemProps, 'children'> & {\n  item: React.ReactElement;\n};\nexport type MASToolbarProps = {\n  toolbarProps: Omit<ToolbarProps, 'children' | 'ref'>;\n  toggleGroupProps?: Omit<ToolbarToggleGroupProps, 'children'>;\n  toggleGroupItems?: React.ReactNode;\n  toolbarItems?: ToolbarItemProps[];\n};\n\nconst MASToolbar: React.FunctionComponent<MASToolbarProps> = ({\n  toolbarProps,\n  toggleGroupProps,\n  toolbarItems,\n  toggleGroupItems,\n}) => {\n  const {\n    id,\n    clearAllFilters,\n    collapseListedFiltersBreakpoint = 'md',\n    inset,\n    ...restToolbarProps\n  } = toolbarProps;\n\n  return (\n    <>\n      <Toolbar\n        id={id}\n        clearAllFilters={clearAllFilters}\n        inset={inset}\n        collapseListedFiltersBreakpoint={collapseListedFiltersBreakpoint}\n        {...restToolbarProps}\n      >\n        <ToolbarContent>\n          {toggleGroupProps && (\n            <ToolbarToggleGroup\n              {...toggleGroupProps}\n              toggleIcon={toggleGroupProps.toggleIcon}\n            >\n              {toggleGroupItems}\n            </ToolbarToggleGroup>\n          )}\n          {toolbarItems?.map((toolbarItem, index) => {\n            const {\n              key = 'mas',\n              variant,\n              className,\n              id,\n              alignment,\n              item,\n              ...restItemProps\n            } = toolbarItem;\n            return (\n              <ToolbarItem\n                key={`${key}-${index}`}\n                variant={variant}\n                className={className}\n                id={id}\n                alignment={alignment}\n                {...restItemProps}\n              >\n                {item}\n              </ToolbarItem>\n            );\n          })}\n        </ToolbarContent>\n      </Toolbar>\n    </>\n  );\n};\n\nexport { MASToolbar };\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button,\n  Dropdown,\n  DropdownItem,\n  KebabToggle,\n} from '@patternfly/react-core';\nimport { MASPagination, MASToolbar, ToolbarItemProps } from '@app/components';\n\ntype PermissionsToolbarKebabProps = {\n  onDeleteSelected: () => void;\n  deleteSelectedEnabled: boolean;\n};\n\nconst PermissionsToolbarKebab: React.FunctionComponent<PermissionsToolbarKebabProps> =\n  ({ deleteSelectedEnabled, onDeleteSelected }) => {\n    const { t } = useTranslation();\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n\n    const onToggle = (v) => {\n      setIsOpen(v);\n    };\n\n    const onSelect = () => {\n      setIsOpen((prevState) => !prevState);\n      onFocus();\n    };\n\n    const onFocus = () => {\n      const element = document.getElementById(\n        'permissions-toolbar-kebab-toggle'\n      );\n      element?.focus();\n    };\n\n    const dropdownItems = [\n      <DropdownItem\n        key='delete_selected'\n        onClick={onDeleteSelected}\n        isDisabled={!deleteSelectedEnabled}\n      >\n        {t('permission.table.delete_selected')}\n      </DropdownItem>,\n    ];\n    return (\n      <Dropdown\n        onSelect={onSelect}\n        toggle={\n          <KebabToggle\n            onToggle={onToggle}\n            id='permissions-toolbar-kebab-toggle'\n          />\n        }\n        isOpen={isOpen}\n        isPlain\n        dropdownItems={dropdownItems}\n      />\n    );\n  };\n\nexport type PermissionsToolbarProps = {\n  total: number;\n  page: number;\n  perPage: number;\n  setFilteredValue: (value: string) => void;\n  filteredValue: string;\n  openManagePermissions?: () => void;\n  onDeleteSelected: () => void;\n  deletedSelectedEnabled: boolean;\n};\n\nconst PermissionsToolbar: React.FC<PermissionsToolbarProps> = ({\n  total = 0,\n  page,\n  perPage,\n  setFilteredValue,\n  openManagePermissions,\n  onDeleteSelected,\n  deletedSelectedEnabled,\n}) => {\n  const { t } = useTranslation();\n\n  const onClear = () => {\n    setFilteredValue('');\n  };\n\n  const toggleGroupItems = <></>;\n\n  const toolbarItems: ToolbarItemProps[] = [\n    {\n      item: (\n        <Button\n          id='permissions-toolbar-manage-permissions-button'\n          data-testid='actionManagePermissions'\n          onClick={openManagePermissions}\n        >\n          {t('permission.table.manage_button')}\n        </Button>\n      ),\n    },\n    {\n      item: (\n        <PermissionsToolbarKebab\n          deleteSelectedEnabled={deletedSelectedEnabled}\n          onDeleteSelected={onDeleteSelected}\n        />\n      ),\n    },\n  ];\n\n  if (total > 0) {\n    toolbarItems.push({\n      item: (\n        <MASPagination\n          widgetId='permissions-pagination-options-menu-top'\n          itemCount={total}\n          page={page}\n          perPage={perPage}\n          titles={{\n            paginationTitle: t('common.minimal_pagination'),\n            perPageSuffix: t('common.per_page_suffix'),\n            toFirstPage: t('common.to_first_page'),\n            toPreviousPage: t('common.to_previous_page'),\n            toLastPage: t('common.to_last_page'),\n            toNextPage: t('common.to_next_page'),\n            optionsToggle: t('common.options_toggle'),\n            currPage: t('common.curr_page'),\n          }}\n          isCompact={true}\n        />\n      ),\n      variant: 'pagination',\n      alignment: { default: 'alignRight' },\n    });\n  }\n\n  return (\n    <MASToolbar\n      toolbarProps={{\n        id: 'instance-toolbar',\n        clearAllFilters: onClear,\n        collapseListedFiltersBreakpoint: 'md',\n        inset: { xl: 'insetLg' },\n      }}\n      toggleGroupProps={{ toggleIcon: '', breakpoint: 'md' }}\n      toggleGroupItems={toggleGroupItems}\n      toolbarItems={toolbarItems}\n    />\n  );\n};\n\nexport { PermissionsToolbar };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { EmptyState, MASEmptyStateVariant } from '@app/components';\n\nexport type PermissionsTableEmptyStateProps = {\n  openManagePermissions?: () => void;\n};\nexport const PermissionsTableEmptyState: React.FunctionComponent<PermissionsTableEmptyStateProps> =\n  ({ openManagePermissions }) => {\n    const { t } = useTranslation();\n    return (\n      <EmptyState\n        emptyStateProps={{\n          variant: MASEmptyStateVariant.NoResult,\n        }}\n        titleProps={{\n          title: t('permission.table.no_results_title'),\n        }}\n        emptyStateBodyProps={{\n          body: t('permission.table.no_results_body'),\n        }}\n        buttonProps={{\n          title: t('permission.table.manage_permissions_button'),\n          onClick: openManagePermissions,\n          'data-testid': 'actionManagePermissions',\n        }}\n      />\n    );\n  };\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PaginationVariant } from '@patternfly/react-core';\nimport {\n  IActionsResolver,\n  ICell,\n  OnSelect,\n  TableVariant,\n} from '@patternfly/react-table';\nimport { PermissionsToolbar } from './PermissionsToolbar';\nimport {\n  AclFilter,\n  convertEnum,\n  EnhancedAclBinding,\n  EnhancedAclBindingListPage,\n  PermissionsService,\n} from '@app/services/acls';\nimport { useTimeout } from '@app/hooks';\nimport {\n  permissionOperationCell,\n  principalCell,\n  resourceCell,\n} from '@app/modules/Permissions/components/PermissionsTable/Cells';\nimport { PermissionsTableEmptyState } from '@app/modules/Permissions/components/PermissionsTable/PermissionsTableEmptyState';\nimport {\n  AclOperationFilter,\n  AclPatternTypeFilter,\n  AclPermissionTypeFilter,\n  AclResourceTypeFilter,\n} from '@rhoas/kafka-instance-sdk';\nimport { ModalType, useModal } from '@rhoas/app-services-ui-shared';\nimport { MASPagination, MASTable } from '@app/components';\n\nexport type PermissionsTableProps = {\n  permissionsService: PermissionsService;\n  kafkaName?: string;\n  topicNames: string[];\n  consumerGroupIds: string[];\n};\n\nconst PermissionsTable: React.FC<PermissionsTableProps> = ({\n  permissionsService,\n  kafkaName,\n  topicNames,\n  consumerGroupIds,\n}) => {\n  type SelectableEnhancedAclBinding = EnhancedAclBinding & {\n    selected: boolean;\n  };\n\n  type SelectableEnhancedAclBindingListPage = Omit<\n    EnhancedAclBindingListPage,\n    'items'\n  > & {\n    items?: SelectableEnhancedAclBinding[];\n  };\n\n  const { t } = useTranslation();\n  const [filteredValue, setFilteredValue] = useState<string>('');\n  const { showModal } = useModal<ModalType.KafkaManagePermissions>() || {};\n  const [aclPage, setAclPage] = useState<\n    SelectableEnhancedAclBindingListPage | undefined\n  >();\n\n  const fetchPermissions = async () => {\n    try {\n      const response = await permissionsService.getPermissions({\n        resourceName: filteredValue !== '' ? filteredValue : undefined,\n      } as AclFilter);\n      setAclPage((prevState) => {\n        return {\n          items: response.items?.map((value) => {\n            const found = prevState?.items?.filter(\n              (p) => p.hash() === value.hash()\n            );\n            const selected =\n              (found?.length !== 0 && found?.every((p) => p.selected)) || false;\n            return {\n              selected,\n              ...value,\n            };\n          }),\n          page: response.page,\n          size: response.size,\n          total: response.total,\n        };\n      });\n    } catch (err) {\n      //addAlert(err.response.data.error_message, AlertVariant.danger);\n    }\n  };\n\n  useEffect(() => {\n    fetchPermissions();\n  }, []);\n\n  useTimeout(() => fetchPermissions(), 5000);\n\n  const tableColumns = [\n    { title: t('permission.table.resource_column_title') },\n    { title: t('permission.table.permissions_column_title') },\n    { title: t('permission.table.account_column_title') },\n    { title: '' },\n  ] as ICell[];\n\n  const cells = [resourceCell, permissionOperationCell, principalCell];\n\n  const onSelect: OnSelect = (event, isSelected, rowIndex) => {\n    if (rowIndex === -1) {\n      setAclPage((prevState) => {\n        if (prevState) {\n          return {\n            items: prevState?.items?.map((p) => {\n              p.selected = isSelected;\n              return p;\n            }),\n            ...prevState,\n          };\n        }\n      });\n    } else {\n      setAclPage((prevState) => {\n        if (prevState) {\n          const items = prevState?.items;\n          if (items !== undefined) {\n            items[rowIndex].selected = isSelected;\n          }\n          return {\n            items,\n            ...prevState,\n          };\n        }\n      });\n    }\n  };\n\n  const openManagePermissions = (selectedAccountId?: string) => {\n    const onSave = async () => {\n      await fetchPermissions();\n    };\n\n    showModal &&\n      showModal(ModalType.KafkaManagePermissions, {\n        selectedAccountId,\n        kafkaName,\n        acls: aclPage?.items || [],\n        topicNames,\n        consumerGroupIds,\n        onSave,\n      });\n  };\n\n  const onDeleteSelected = () => {\n    aclPage?.items\n      ?.filter((item) => item.selected)\n      .forEach((value) => {\n        permissionsService\n          .deletePermission({\n            resourceName: value.resourceName,\n            patternType: convertEnum(value.patternType, AclPatternTypeFilter),\n            permissionType: convertEnum(\n              value.permission,\n              AclPermissionTypeFilter\n            ),\n            resourceType: convertEnum(\n              value.resourceType,\n              AclResourceTypeFilter\n            ),\n            operation: convertEnum(value.operation, AclOperationFilter),\n            principal: `User:${value.principal}`,\n          })\n          .then(() => fetchPermissions());\n      });\n    fetchPermissions();\n  };\n\n  const onDelete = (rowIndex?: number) => {\n    if (rowIndex !== undefined && aclPage?.items !== undefined) {\n      const value = aclPage.items[rowIndex];\n      permissionsService\n        .deletePermission({\n          resourceName: value.resourceName,\n          patternType: convertEnum(value.patternType, AclPatternTypeFilter),\n          permissionType: convertEnum(\n            value.permission,\n            AclPermissionTypeFilter\n          ),\n          resourceType: convertEnum(value.resourceType, AclResourceTypeFilter),\n          operation: convertEnum(value.operation, AclOperationFilter),\n          principal: `User:${value.principal}`,\n        })\n        .then(() => fetchPermissions());\n    }\n  };\n\n  const actionResolver: IActionsResolver = (_, { rowIndex }) => {\n    const resolver = [\n      {\n        title: t('permission.table.row_kebab.manage'),\n        ['data-testid']: 'permission-table-row-manage',\n        onClick: () => {\n          if (aclPage?.items !== undefined && rowIndex !== undefined) {\n            openManagePermissions(aclPage.items[rowIndex].principal);\n          }\n        },\n      },\n      {\n        title: t('permission.table.row_kebab.delete'),\n        ['data-testid']: 'permission-table-row-delete',\n        onClick: () => onDelete(rowIndex),\n      },\n    ];\n    return resolver;\n  };\n\n  if (\n    aclPage === undefined ||\n    aclPage.items === undefined ||\n    aclPage.items.length === 0\n  ) {\n    return (\n      <PermissionsTableEmptyState\n        openManagePermissions={() => openManagePermissions()}\n      />\n    );\n  }\n\n  return (\n    <>\n      <PermissionsToolbar\n        total={aclPage.total || 0}\n        page={aclPage.page || 1}\n        perPage={aclPage.size || 10}\n        openManagePermissions={() => openManagePermissions()}\n        setFilteredValue={setFilteredValue}\n        filteredValue={filteredValue}\n        deletedSelectedEnabled={aclPage.items.some((item) => item.selected)}\n        onDeleteSelected={onDeleteSelected}\n      />\n      <MASTable\n        tableProps={{\n          cells: tableColumns,\n          rows: aclPage.items.map((item, row) => {\n            return {\n              cells: cells.map((f) => f(item, row)),\n              selected: item.selected,\n              originalData: item,\n            };\n          }),\n          'aria-label': t('permission.table.permission_list_table'),\n          shouldDefaultCustomRowWrapper: true,\n          variant: TableVariant.compact,\n          onSelect,\n          actionResolver,\n          canSelectAll: false,\n        }}\n        rowDataTestId={'tablePermissions-row'}\n      />\n      <MASPagination\n        widgetId='permissions-pagination-options-menu-bottom'\n        itemCount={aclPage.total || 0}\n        variant={PaginationVariant.bottom}\n        page={aclPage.page}\n        perPage={aclPage.size}\n        titles={{\n          paginationTitle: t('common.full_pagination'),\n          perPageSuffix: t('common.per_page_suffix'),\n          toFirstPage: t('common.to_first_page'),\n          toPreviousPage: t('common.to_previous_page'),\n          toLastPage: t('common.to_last_page'),\n          toNextPage: t('common.to_next_page'),\n          optionsToggle: t('common.options_toggle'),\n          currPage: t('common.curr_page'),\n        }}\n      />\n    </>\n  );\n};\nexport { PermissionsTable };\n","import React, { useContext, useEffect, useState } from 'react';\nimport { usePermissionsService } from '@app/services/acls';\nimport { PermissionsTable } from '@app/modules/Permissions/components/PermissionsTable';\nimport { ConfigContext } from '@app/contexts';\nimport { getConsumerGroups, getTopics } from '@app/services';\n\nexport type PermissionsTableViewProps = {\n  kafkaName?: string;\n};\nexport const PermissionsTableView: React.FunctionComponent<PermissionsTableViewProps> =\n  ({ kafkaName }) => {\n    const config = useContext(ConfigContext);\n\n    const permissionsService = usePermissionsService(config);\n    const [topicNames, setTopicNames] = useState<string[]>([]);\n    const [consumerGroupIds, setConsumerGroupNames] = useState<string[]>([]);\n\n    useEffect(() => {\n      const fetchTopicNames = async () => {\n        const response = await getTopics(config);\n        const topicNames = response.items?.map((topic) => topic.name || '');\n        setTopicNames(topicNames || []);\n      };\n      fetchTopicNames();\n    }, [config]);\n\n    useEffect(() => {\n      const fetchConsumerGroupNames = async () => {\n        const response = await getConsumerGroups(config);\n        const consumerGroupNames = response.items?.map(\n          (consumerGroup) => consumerGroup.groupId || ''\n        );\n        setConsumerGroupNames(consumerGroupNames || []);\n      };\n      fetchConsumerGroupNames();\n    }, [config]);\n\n    //const permissionsService = createMockPermissionsService();\n\n    return (\n      <PermissionsTable\n        permissionsService={permissionsService}\n        kafkaName={kafkaName}\n        topicNames={topicNames}\n        consumerGroupIds={consumerGroupIds}\n      />\n    );\n  };\n\nexport default PermissionsTableView;\n","import { AxiosResponse } from 'axios';\nimport {\n  Configuration,\n  ConsumerGroup,\n  ConsumerGroupList,\n  ConsumerGroupResetOffsetParametersOffsetEnum,\n  ConsumerGroupResetOffsetResult,\n  GroupsApi,\n} from '@rhoas/kafka-instance-sdk';\nimport { IConfiguration } from '@app/contexts';\nimport { SortByDirection } from '@patternfly/react-table';\n\nconst getConsumerGroups = async (\n  config: IConfiguration | undefined,\n  offset?: number,\n  limit?: number,\n  size?: number,\n  page?: number,\n  topic?: string,\n  groupIdFilter?: string,\n  order: SortByDirection = SortByDirection.asc,\n  orderKey?: 'name' | undefined\n): Promise<ConsumerGroupList> => {\n  const accessToken = await config?.getToken();\n\n  const api = new GroupsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<ConsumerGroupList> =\n    await api.getConsumerGroups(\n      offset,\n      limit,\n      size,\n      page,\n      topic,\n      groupIdFilter,\n      order,\n      orderKey\n    );\n  return response.data;\n};\n\nconst deleteConsumerGroup = async (\n  consumerGroupId: string,\n  config: IConfiguration | undefined\n): Promise<void> => {\n  const accessToken = await config?.getToken();\n\n  const api = new GroupsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  await api.deleteConsumerGroupById(consumerGroupId);\n  return;\n};\n\nconst getConsumerGroupDetail = async (\n  consumerGroupId: string,\n  config: IConfiguration | undefined\n): Promise<ConsumerGroup> => {\n  const accessToken = await config?.getToken();\n\n  const api = new GroupsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<ConsumerGroup> = await api.getConsumerGroupById(\n    consumerGroupId\n  );\n  return response.data;\n};\n\nconst consumerGroupResetOffset = async (\n  config: IConfiguration | undefined,\n  consumerGroupId: string,\n  offset: ConsumerGroupResetOffsetParametersOffsetEnum,\n  topic: string,\n  partitions: number[],\n  value?: string\n): Promise<AxiosResponse<ConsumerGroupResetOffsetResult>> => {\n  const accessToken = await config?.getToken();\n\n  const api = new GroupsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<ConsumerGroupResetOffsetResult> =\n    await api.resetConsumerGroupOffset(consumerGroupId, {\n      value,\n      offset,\n      topics: [{ topic, partitions }],\n    });\n  return response;\n};\n\nexport {\n  getConsumerGroups,\n  deleteConsumerGroup,\n  getConsumerGroupDetail,\n  consumerGroupResetOffset,\n};\n","import { AxiosResponse } from 'axios';\nimport {\n  ConfigEntry,\n  TopicsApi,\n  Topic,\n  TopicSettings,\n  TopicsList,\n} from '@rhoas/kafka-instance-sdk';\nimport { Configuration } from '@rhoas/kafka-instance-sdk';\nimport { IConfiguration } from '@app/contexts';\nimport { IAdvancedTopic } from '@app/modules/Topics/utils';\nimport { SortByDirection } from '@patternfly/react-table';\n\nexport enum OrderKey {\n  name = 'name',\n  partitions = 'partitions',\n  retentionMs = 'retention.ms',\n  retentionSize = 'retention.bytes',\n}\n\nexport const getTopics = async (\n  config: IConfiguration | undefined,\n  limit?: number,\n  size?: number,\n  filter?: string,\n  offset?: number | undefined,\n  order: SortByDirection = SortByDirection.asc,\n  orderKey?: OrderKey\n): Promise<TopicsList> => {\n  const accessToken = await config?.getToken();\n\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<TopicsList> = await api.getTopics(\n    offset,\n    limit,\n    size,\n    filter,\n    undefined,\n    order,\n    orderKey\n  );\n  return response.data;\n};\n\nexport const getTopicDetail = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<IAdvancedTopic> => {\n  const accessToken = await config?.getToken();\n\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const { data } = await api.getTopic(topicName);\n\n  return convertTopicResponse(data);\n};\n\nconst convertTopicResponse = (topic: Topic): IAdvancedTopic => {\n  const topicObj: IAdvancedTopic = { name: '', numPartitions: '0' };\n  if (topic && topic.name) topicObj.name = topic.name;\n\n  topic.config?.forEach((config) => {\n    if (config.key) {\n      topicObj[config.key] = config.value;\n    }\n  });\n\n  topicObj.numPartitions = topic?.partitions?.length.toString() || '0';\n\n  topicObj.replicationFactor =\n    (topic?.partitions && topic?.partitions[0].replicas?.length.toString()) ||\n    '0';\n\n  return topicObj;\n};\n\nexport const updateTopicModel = async (\n  topicName: string,\n  topicSettings: TopicSettings,\n  config: IConfiguration | undefined\n): Promise<number> => {\n  const accessToken = await config?.getToken();\n\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response: AxiosResponse<Topic> = await api.updateTopic(\n    topicName,\n    topicSettings\n  );\n  return response.status;\n};\n\nexport const getTopic = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<Topic> => {\n  const accessToken = await config?.getToken();\n\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  const response = await api.getTopic(topicName);\n\n  const answer = response.data;\n  answer.config = answer.config || ([] as ConfigEntry[]);\n  answer.config.push({\n    key: 'replicationFactor',\n    value: response.data?.partitions\n      ?.map((p) => p.replicas?.length)\n      .reduce(\n        (previousValue = 0, currentValue = 0) => previousValue + currentValue\n      )\n      ?.toString(),\n  });\n  return response.data;\n};\n\nexport const deleteTopic = async (\n  topicName: string,\n  config: IConfiguration | undefined\n): Promise<void> => {\n  const accessToken = await config?.getToken();\n\n  const api = new TopicsApi(\n    new Configuration({\n      accessToken,\n      basePath: config?.basePath,\n    })\n  );\n  await api.deleteTopic(topicName);\n  return;\n};\n"],"names":["css","args","classes","hasOwn","hasOwnProperty","filter","Boolean","forEach","arg","argType","push","Array","isArray","length","inner","key","call","join","MASToolbar","toolbarProps","toggleGroupProps","toolbarItems","toggleGroupItems","id","clearAllFilters","collapseListedFiltersBreakpoint","inset","restToolbarProps","Toolbar","ToolbarContent","ToolbarToggleGroup","toggleIcon","map","toolbarItem","index","variant","className","alignment","item","restItemProps","ToolbarItem","PermissionsToolbarKebab","deleteSelectedEnabled","onDeleteSelected","t","useTranslation","useState","isOpen","setIsOpen","onFocus","element","document","getElementById","focus","dropdownItems","DropdownItem","onClick","isDisabled","Dropdown","onSelect","prevState","toggle","KebabToggle","onToggle","v","isPlain","PermissionsToolbar","total","page","perPage","setFilteredValue","openManagePermissions","deletedSelectedEnabled","Button","MASPagination","widgetId","itemCount","titles","paginationTitle","perPageSuffix","toFirstPage","toPreviousPage","toLastPage","toNextPage","optionsToggle","currPage","isCompact","default","xl","breakpoint","PermissionsTableEmptyState","EmptyState","emptyStateProps","titleProps","title","emptyStateBodyProps","body","buttonProps","PermissionsTable","permissionsService","kafkaName","topicNames","consumerGroupIds","filteredValue","showModal","useModal","aclPage","setAclPage","fetchPermissions","getPermissions","resourceName","undefined","items","value","found","p","hash","selected","every","size","useEffect","tableColumns","cells","selectedAccountId","ModalType","acls","onSave","some","deletePermission","patternType","AclPatternTypeFilter","permissionType","permission","AclPermissionTypeFilter","resourceType","AclResourceTypeFilter","operation","AclOperationFilter","principal","then","MASTable","tableProps","rows","row","f","originalData","shouldDefaultCustomRowWrapper","TableVariant","event","isSelected","rowIndex","actionResolver","_","resolver","onDelete","canSelectAll","rowDataTestId","PaginationVariant","PermissionsTableView","config","useContext","setTopicNames","setConsumerGroupNames","response","topic","name","consumerGroupNames","consumerGroup","groupId","getConsumerGroups","offset","limit","groupIdFilter","order","orderKey","SortByDirection","Promise","getToken","accessToken","GroupsApi","Configuration","basePath","data","deleteConsumerGroup","consumerGroupId","deleteConsumerGroupById","consumerGroupResetOffset","partitions","resetConsumerGroupOffset","topics","OrderKey","getTopics","TopicsApi","getTopicDetail","topicName","getTopic","convertTopicResponse","topicObj","numPartitions","toString","replicationFactor","replicas","updateTopicModel","topicSettings","updateTopic","status","answer","reduce","previousValue","currentValue","deleteTopic"],"sourceRoot":""}