{"version":3,"file":"1639.27a552bc.js","mappings":"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","sources":["webpack://kafka-ui/./node_modules/@patternfly/react-styles/dist/esm/index.js","webpack://kafka-ui/./src/components/MASTable/CustomRowWrapper.tsx","webpack://kafka-ui/./src/components/MASTable/MASTable.tsx","webpack://kafka-ui/./src/modules/ConsumerGroups/components/ConsumerGroupsPopover.tsx","webpack://kafka-ui/./src/modules/ConsumerGroups/components/ConsumerGroupDetail/ConsumerGroupDetail.tsx"],"sourcesContent":["/** Joins args into a className string\n *\n * @param {any} args list of objects, string, or arrays to reduce\n */\nexport function css(...args) {\n    // Adapted from https://github.com/JedWatson/classnames/blob/master/index.js\n    const classes = [];\n    const hasOwn = {}.hasOwnProperty;\n    args.filter(Boolean).forEach((arg) => {\n        const argType = typeof arg;\n        if (argType === 'string' || argType === 'number') {\n            classes.push(arg);\n        }\n        else if (Array.isArray(arg) && arg.length) {\n            const inner = css(...arg);\n            if (inner) {\n                classes.push(inner);\n            }\n        }\n        else if (argType === 'object') {\n            for (const key in arg) {\n                if (hasOwn.call(arg, key) && arg[key]) {\n                    classes.push(key);\n                }\n            }\n        }\n    });\n    return classes.join(' ');\n}\n//# sourceMappingURL=index.js.map","import React, { createContext, useContext } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport './CustomRowWrapper.css';\nimport { IRowData, RowWrapperProps } from '@patternfly/react-table';\n\nexport type CustomRowWrapperContextProps = {\n  activeRow?: string;\n  onRowClick?: (\n    event: React.MouseEvent<HTMLTableRowElement, MouseEvent>,\n    rowIndex?: number,\n    row?: IRowData\n  ) => void;\n  rowDataTestId?: string;\n  loggedInUser?: string;\n};\n\nconst CustomRowWrapperContext = createContext<CustomRowWrapperContextProps>({\n  activeRow: '',\n  onRowClick: () => '',\n  loggedInUser: '',\n});\n\nexport const CustomRowWrapperProvider = CustomRowWrapperContext.Provider;\n\nexport const CustomRowWrapper = (\n  rowWrapperProps: RowWrapperProps\n): JSX.Element => {\n  const { activeRow, onRowClick, rowDataTestId } = useContext(\n    CustomRowWrapperContext\n  );\n  const { trRef, className, rowProps, row, ...props } = rowWrapperProps || {};\n  const { rowIndex } = rowProps || {};\n  const { isExpanded, originalData } = row || {};\n\n  return (\n    <tr\n      data-testid={rowDataTestId}\n      tabIndex={0}\n      ref={typeof trRef === 'function' ? undefined : trRef}\n      className={css(\n        className,\n        'pf-c-table-row__item',\n        activeRow &&\n          activeRow === originalData?.rowId &&\n          'pf-m-selected pf-m-selectable'\n      )}\n      hidden={isExpanded !== undefined && !isExpanded}\n      onClick={(event) => onRowClick && onRowClick(event, rowIndex, row)}\n      {...props}\n    />\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport {\n  TableHeader,\n  Table as PFTable,\n  TableBody,\n  TableProps as PFTableProps,\n  HeaderProps,\n  TableBodyProps,\n} from '@patternfly/react-table';\nimport { css } from '@patternfly/react-styles';\nimport {\n  CustomRowWrapper,\n  CustomRowWrapperProvider,\n  CustomRowWrapperContextProps,\n} from './CustomRowWrapper';\n\nexport type MASTableProps = CustomRowWrapperContextProps & {\n  tableProps: Omit<PFTableProps, 'children'> & {\n    shouldDefaultCustomRowWrapper?: boolean;\n  };\n  tableHeaderProps?: Omit<HeaderProps, 'children'>;\n  tableBodyProps?: Omit<TableBodyProps, 'children'>;\n  children?: React.ReactNode;\n};\n\nconst MASTable: FunctionComponent<MASTableProps> = ({\n  tableProps,\n  tableHeaderProps,\n  tableBodyProps,\n  children,\n  activeRow,\n  onRowClick,\n  rowDataTestId,\n  loggedInUser,\n}) => {\n  const {\n    cells,\n    rows,\n    actionResolver,\n    onSort,\n    sortBy,\n    'aria-label': ariaLabel,\n    variant,\n    className,\n    shouldDefaultCustomRowWrapper = false,\n    ...restProps\n  } = tableProps;\n\n  /**\n   * Handle CustomRowWrapper\n   */\n  if (shouldDefaultCustomRowWrapper) {\n    restProps['rowWrapper'] = CustomRowWrapper;\n  }\n\n  return (\n    <CustomRowWrapperProvider\n      value={{\n        activeRow,\n        onRowClick,\n        rowDataTestId,\n        loggedInUser,\n      }}\n    >\n      <PFTable\n        className={css(\n          shouldDefaultCustomRowWrapper && 'mas--table-view__table',\n          className\n        )}\n        cells={cells}\n        variant={variant}\n        rows={rows}\n        aria-label={ariaLabel}\n        actionResolver={actionResolver}\n        onSort={onSort}\n        sortBy={sortBy}\n        {...restProps}\n      >\n        <TableHeader {...tableHeaderProps} />\n        <TableBody {...tableBodyProps} />\n        {children}\n      </PFTable>\n    </CustomRowWrapperProvider>\n  );\n};\n\nexport { MASTable };\n","import { Popover } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport React from 'react';\n\ntype ConsumerGroupPopoverProps = {\n  title: string;\n  description: string;\n};\n\nexport const ConsumerGroupPopover: React.FunctionComponent<\n  ConsumerGroupPopoverProps\n> = ({ title, description }) => {\n  return (\n    <Popover\n      aria-label='Consumer groups popover'\n      headerContent={<div>{title}</div>}\n      bodyContent={<div>{description}</div>}\n    >\n      <OutlinedQuestionCircleIcon />\n    </Popover>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Flex,\n  FlexItem,\n  TextContent,\n  Text,\n  TextVariants,\n  Stack,\n} from '@patternfly/react-core';\nimport { TableVariant, wrappable, cellWidth } from '@patternfly/react-table';\nimport { ConsumerGroup } from '@rhoas/kafka-instance-sdk';\nimport { MASTable } from '@app/components';\nimport { ConsumerGroupPopover } from '@app/modules/ConsumerGroups/components';\n\nexport type ConsumerGroupDetailProps = {\n  consumerGroupDetail: ConsumerGroup | undefined;\n  consumerGroupByTopic: boolean;\n};\n\nconst ConsumerGroupDetail: React.FunctionComponent<\n  ConsumerGroupDetailProps\n> = ({ consumerGroupDetail, consumerGroupByTopic }) => {\n  const { t } = useTranslation(['kafkaTemporaryFixMe']);\n\n  const columns = consumerGroupByTopic\n    ? [\n        {\n          title: t('consumerGroup.partition'),\n          transforms: [wrappable, cellWidth(20)],\n        },\n        {\n          title: t('consumerGroup.consumer_id'),\n          transforms: [wrappable, cellWidth(20)],\n        },\n        {\n          title: t('consumerGroup.current_offset'),\n          transforms: [wrappable, cellWidth(20)],\n        },\n        {\n          title: t('consumerGroup.log_end_offset'),\n          transforms: [wrappable, cellWidth(20)],\n        },\n        {\n          title: t('consumerGroup.offset_lag'),\n          transforms: [wrappable, cellWidth(20)],\n        },\n        {\n          title: '',\n          dataLabel: t('common.action'),\n        },\n      ]\n    : [\n        { title: t('topic.topic'), transforms: [wrappable, cellWidth(20)] },\n        {\n          title: t('consumerGroup.partition'),\n          transforms: [wrappable, cellWidth(20)],\n        },\n        {\n          title: t('consumerGroup.consumer_id'),\n          transforms: [wrappable, cellWidth(20)],\n        },\n        {\n          title: t('consumerGroup.current_offset'),\n          transforms: [wrappable, cellWidth(20)],\n        },\n        {\n          title: t('consumerGroup.log_end_offset'),\n          transforms: [wrappable, cellWidth(20)],\n        },\n        {\n          title: t('consumerGroup.offset_lag'),\n          transforms: [wrappable, cellWidth(20)],\n        },\n        {\n          title: '',\n          dataLabel: t('common.action'),\n        },\n      ];\n\n  const getRows = () => {\n    return (\n      (consumerGroupDetail &&\n        consumerGroupDetail.consumers.map((consumergroup) =>\n          consumerGroupByTopic\n            ? [\n                consumergroup.partition,\n                {\n                  title: consumergroup.memberId ? (\n                    consumergroup.groupId + '\\n' + consumergroup.memberId\n                  ) : (\n                    <i>{t('consumerGroup.unassigned')}</i>\n                  ),\n                },\n                consumergroup.offset,\n                consumergroup.logEndOffset,\n                consumergroup.lag,\n              ]\n            : [\n                consumergroup.topic,\n                consumergroup.partition,\n                {\n                  title: consumergroup.memberId ? (\n                    consumergroup.groupId + '\\n' + consumergroup.memberId\n                  ) : (\n                    <i>{t('consumerGroup.unassigned')}</i>\n                  ),\n                },\n                consumergroup.offset,\n                consumergroup.logEndOffset,\n                consumergroup.lag,\n              ]\n        )) ||\n      []\n    );\n  };\n\n  return (\n    <Stack hasGutter>\n      <TextContent>\n        <Flex>\n          <FlexItem>\n            <Text component={TextVariants.h4} size={50}>\n              {t('consumerGroup.active_members')}{' '}\n            </Text>\n            <Text component={TextVariants.p}>\n              <Text component={TextVariants.h2}>\n                {consumerGroupDetail &&\n                  consumerGroupDetail.consumers.reduce(function (prev, cur) {\n                    return prev + (cur.partition != -1 ? 1 : 0);\n                  }, 0)}\n              </Text>\n            </Text>\n          </FlexItem>\n          <FlexItem>\n            <Text component={TextVariants.h4}>\n              {t('consumerGroup.partitions_with_lag')}{' '}\n              <ConsumerGroupPopover\n                title={t('consumerGroup.partitions_with_lag_name')}\n                description={t('consumerGroup.partitions_with_lag_description')}\n              />\n            </Text>\n            <Text component={TextVariants.p}>\n              <Text component={TextVariants.h2}>\n                {consumerGroupDetail &&\n                  consumerGroupDetail.consumers.reduce(function (prev, cur) {\n                    return prev + (cur.lag > 0 ? 1 : 0);\n                  }, 0)}\n              </Text>\n            </Text>\n          </FlexItem>\n        </Flex>\n      </TextContent>\n      <MASTable\n        tableProps={{\n          cells: columns,\n          rows: getRows(),\n          'aria-label': t('consumerGroup.consumer_group_info_table_aria'),\n          variant: TableVariant.compact,\n        }}\n      />\n    </Stack>\n  );\n};\n\nexport { ConsumerGroupDetail };\nexport default ConsumerGroupDetail;\n"],"names":["css","args","classes","hasOwn","hasOwnProperty","filter","Boolean","forEach","arg","argType","push","Array","isArray","length","inner","key","call","join","CustomRowWrapperContext","createContext","activeRow","onRowClick","loggedInUser","CustomRowWrapperProvider","Provider","CustomRowWrapper","rowWrapperProps","useContext","rowDataTestId","trRef","className","rowProps","row","props","rowIndex","isExpanded","originalData","tabIndex","ref","undefined","rowId","hidden","onClick","event","MASTable","tableProps","tableHeaderProps","tableBodyProps","children","cells","rows","actionResolver","onSort","sortBy","ariaLabel","variant","shouldDefaultCustomRowWrapper","restProps","value","TableHeader","TableBody","ConsumerGroupPopover","title","description","Popover","headerContent","bodyContent","OutlinedQuestionCircleIcon","ConsumerGroupDetail","consumerGroupDetail","consumerGroupByTopic","t","useTranslation","columns","transforms","wrappable","cellWidth","dataLabel","Stack","hasGutter","TextContent","Flex","FlexItem","Text","component","TextVariants","size","consumers","reduce","prev","cur","partition","lag","map","consumergroup","memberId","groupId","offset","logEndOffset","topic","TableVariant"],"sourceRoot":""}