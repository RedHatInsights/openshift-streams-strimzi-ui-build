{"version":3,"sources":["webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/ellipsis-v-icon.js","webpack://kafka-ui/./node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/SearchTopics.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/EmptyTopics.tsx","webpack://kafka-ui/./src/Components/Loading/Loading.tsx","webpack://kafka-ui/./src/Modules/Topics/TopicList/Components/TopicsList.tsx","webpack://kafka-ui/./src/Hooks/useTimeOut.ts","webpack://kafka-ui/./src/Modules/ConsumerGroups/ConsumerGroupList/Components/ConsumerGroupData.ts","webpack://kafka-ui/./src/Modules/ConsumerGroups/ConsumerGroupList/Components/SearchConsumers.tsx","webpack://kafka-ui/./src/Modules/ConsumerGroups/ConsumerGroupList/Components/ConsumerGroupList.tsx","webpack://kafka-ui/./src/Modules/AppNavigation/AppNavigation.tsx","webpack://kafka-ui/./src/Panels/Topics/TopicView.tsx","webpack://kafka-ui/./src/Modules/Topics/UpdateTopic/Components/UpdateTopicView.tsx","webpack://kafka-ui/./src/Modules/Topics/UpdateTopic/UpdateTopicPage.tsx","webpack://kafka-ui/./src/Panels/ConsumerGroups/ConsumerGroupsView.tsx","webpack://kafka-ui/./src/Components/ErrorBoundary/UnexpectedError.tsx","webpack://kafka-ui/./src/Components/ErrorBoundary/ErrorBoundary.tsx","webpack://kafka-ui/./src/Modules/AppNavigation/AppMastHead.tsx","webpack://kafka-ui/./src/Bootstrap/bootstrap.tsx","webpack://kafka-ui/./src/Panels/MastHead/MastHead.tsx","webpack://kafka-ui/./src/Panels/Topics/DetailView.tsx","webpack://kafka-ui/./src/Panels/Topics/CreateView.tsx","webpack://kafka-ui/./src/Panels/Topics/UpdateView.tsx","webpack://kafka-ui/./src/Panels/ConsumerGroupsByTopic/ConsumerGroupsByTopic.tsx","webpack://kafka-ui/./src/Components/ServerAlertGroup/ServerAlertGroup.tsx","webpack://kafka-ui/./src/Contexts/Alert/Context.tsx"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","SearchTopics","search","setSearch","onClear","InputGroup","SearchInput","id","type","placeholder","value","onChange","EmptyTopics","onCreateTopic","EmptyState","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","Button","variant","className","onClick","Loading","Bullseye","Spinner","TopicsListComponent","callback","delay","savedCallback","getTopicDetailsPath","onClickTopic","onDeleteTopic","useState","loading","setLoading","page","setPage","perPage","setPerPage","offset","setOffset","topics","setTopics","filteredTopics","setFilteredTopics","deleteModal","setDeleteModal","topicName","setTopicName","addAlert","useContext","config","fetchTopic","topicsList","response","data","error","AlertVariant","useEffect","useRef","current","setTimeout","clearInterval","onSetPage","_event","pageNumber","onPerPageSelect","tableColumns","title","transforms","sortable","rowData","items","map","topic","byte","convertedByteValue","milliseconds","convertedValue","Link","to","e","preventDefault","partitions","length","Number","filter","element","key","Math","round","abs","trim","topicsFiltered","includes","prevState","undefined","actions","_","rowId","onDelete","onEdit","Card","Toolbar","ToolbarContent","ToolbarItem","Pagination","itemCount","widgetId","Table","TableVariant","cells","rows","slice","TableHeader","TableBody","Divider","EmptySearch","PaginationVariant","consumerGroupData","members","state","SearchConsumers","setTableData","filterSearch","consumersFiltered","console","log","row","toLowerCase","indexOf","ConsumerGroupsList","tableData","consumer","Label","color","AppNavigation","eventKey","instanceName","activeTabKey","setActiveTabKey","history","mainBreadcrumbs","Breadcrumb","BreadcrumbItem","isActive","PageSection","PageSectionVariants","Level","iconPosition","Tabs","activeKey","onSelect","event","tabIndex","Tab","TabTitleText","push","Topics","UpdateTopicView","onCancelUpdateTopic","onSaveTopic","store","updateBulkStore","setTopic","topicRes","saveToStore","advanceConfig","numPartitions","toString","forEach","configItem","TopicAdvanceConfig","isCreate","saveTopic","newConfig","previousTopic","v","patchConfig","topicSettings","handleCancel","UpdateTopicPage","getTopicListPath","onClickTopicList","TopicDetailHead","padding","default","isBox","UnexpectedError","updateState","t","useTranslation","EmptyStateVariant","TitleSizes","ButtonVariant","hasError","setState","getDerivedStateFromError","componentDidCatch","errorInfo","render","this","props","children","AppMastHead","isDropDownOpen","setIsDropDownOpen","userDropDownItems","DropdownItem","brandImgLogo","Brand","src","brandImg","alt","userDropDownToggle","DropdownToggle","onToggle","toggleIndicator","CaretDownIcon","userDropDown","Dropdown","toggle","isOpen","isPlain","dropdownItems","avatar","Avatar","HeaderTools","PageHeaderTools","PageHeader","logo","logoComponent","headerTools","I18nextProvider","i18n","basePath","getToken","Page","mainContainerId","header","ErrorBoundary","Switch","Route","path","component","exact","onUpdateTopic","useHistory","CreateTopicPage","setIsCreateTopic","goBack","document","getElementById","ServerAlertGroup","alerts","onCloseAlert","AlertGroup","isToast","message","Alert","isLiveRegion","variantLabel","actionClose","AlertActionCloseButton","onClose","AlertContext","createContext","AlertProvider","setAlerts","timers","setTimers","timersKeys","timer","timeOuts","alert","timeOut","hideAlert","clearTimeout","el","Provider","Date","getTime"],"mappings":"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","file":"862.c0f7ac82.bundle.js","sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.EllipsisVIconConfig = {\n  name: 'EllipsisVIcon',\n  height: 512,\n  width: 192,\n  svgPath: 'M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.EllipsisVIcon = require('../createIcon').createIcon(exports.EllipsisVIconConfig);\nexports[\"default\"] = exports.EllipsisVIcon;","\"use strict\"\nexports.__esModule = true;\nexports.PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PlusCircleIcon = require('../createIcon').createIcon(exports.PlusCircleIconConfig);\nexports[\"default\"] = exports.PlusCircleIcon;","import React from 'react';\nimport { InputGroup, SearchInput } from '@patternfly/react-core';\n\nexport interface ISearchTopicsProps {\n  setSearch: (value: string) => void;\n  search: string;\n  onClear: () => void;\n}\nconst SearchTopics: React.FunctionComponent<ISearchTopicsProps> = ({\n  search,\n  setSearch,\n  onClear,\n}) => {\n  const onChangeInput = (value: string) => {\n    setSearch(value);\n  };\n\n  const onClearHandler = () => {\n    onClear();\n    setSearch('');\n  };\n  return (\n    <InputGroup>\n      <SearchInput\n        name='searchName'\n        id='search-topics-input'\n        type='search'\n        aria-label='search input '\n        placeholder='Search'\n        value={search}\n        onChange={onChangeInput}\n        onClear={onClearHandler}\n      />\n    </InputGroup>\n  );\n};\nexport { SearchTopics };\n","import React from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Title,\n} from '@patternfly/react-core';\nimport PlusIcon from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\n\nexport interface IEmptyTopic {\n  onCreateTopic?: () => void;\n}\n\nexport const EmptyTopics: React.FunctionComponent<IEmptyTopic> = ({\n  onCreateTopic,\n}) => {\n  return (\n    <EmptyState>\n      <EmptyStateIcon icon={PlusIcon} />\n      <Title headingLevel='h5' size='lg'>\n        You don&apos;t have any topics yet\n      </Title>\n      <EmptyStateBody>\n        Create a topic by clicking the button below to get started\n      </EmptyStateBody>\n      <Button\n        variant='primary'\n        className='topics-empty-page'\n        onClick={onCreateTopic}\n      >\n        Create Topic\n      </Button>\n    </EmptyState>\n  );\n};\n","import React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nexport const Loading: React.FunctionComponent = () => (\n  <Bullseye>\n    <Spinner />\n  </Bullseye>\n);\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  AlertVariant,\n  Button,\n  Card,\n  Divider,\n  Pagination,\n  PaginationVariant,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  sortable,\n} from '@patternfly/react-table';\nimport { useTimeout } from '../../../../Hooks/useTimeOut';\nimport { SearchTopics } from './SearchTopics';\nimport { EmptyTopics } from './EmptyTopics';\nimport { EmptySearch } from './EmptySearch';\nimport { getTopics } from '../../../../Services';\nimport { DeleteTopics } from './DeleteTopicsModal';\nimport { ConfigContext } from '../../../../Contexts';\nimport { TopicsList } from '../../../../OpenApi';\nimport { Loading } from '../../../../Components/Loading/Loading';\nimport { AlertContext } from '../../../../Contexts/Alert';\nimport { Link } from 'react-router-dom';\n\nimport './TopicList.css';\n\nexport interface ITopic {\n  name: string;\n  replicas: number;\n  partitions: number;\n}\n\nexport interface ITopicProps {\n  rows: ITopic[];\n}\n\nexport interface ITopicList {\n  onCreateTopic: () => void;\n  onClickTopic: (topicName: string | undefined) => void;\n  getTopicDetailsPath: (topic: string | undefined) => string;\n  onDeleteTopic: () => void;\n}\n\nexport const TopicsListComponent: React.FunctionComponent<ITopicList> = ({\n  onCreateTopic,\n  getTopicDetailsPath,\n  onClickTopic,\n  onDeleteTopic,\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(10);\n  const [offset, setOffset] = useState<number>(0);\n  const [search, setSearch] = useState('');\n  const [topics, setTopics] = useState<TopicsList>();\n  const [filteredTopics, setFilteredTopics] = useState<TopicsList>();\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [topicName, setTopicName] = useState<string | undefined>();\n\n  const { addAlert } = useContext(AlertContext);\n\n  const config = useContext(ConfigContext);\n\n  const fetchTopic = async () => {\n    try {\n      const topicsList = await getTopics(config);\n      if (topicsList) {\n        setTopics(topicsList);\n        setFilteredTopics(topicsList);\n      }\n    } catch (err) {\n      addAlert(err.response.data.error, AlertVariant.danger);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetchTopic();\n  }, [deleteModal]);\n\n  useTimeout(() => fetchTopic(), 5000);\n\n  const onSetPage = (_event, pageNumber: number) => {\n    setPage(pageNumber);\n    setOffset(page * perPage);\n  };\n\n  const onPerPageSelect = (_event, perPage: number) => {\n    setPerPage(perPage);\n  };\n\n  const tableColumns = [\n    { title: 'Name' },\n    { title: 'Partitions', transforms: [sortable] },\n    { title: 'Retention Time', transforms: [sortable] },\n    { title: 'Retention Size', transforms: [sortable] },\n  ];\n  const convertRetentionTime = (milliseconds: number) => {\n    let convertedValue;\n    if (milliseconds < 60000) {\n      if (milliseconds === 1) return milliseconds + ' ' + 'millisecond';\n      else return milliseconds + ' ' + 'milliseconds';\n    } else if (milliseconds >= 60000 && milliseconds < 3.6e6) {\n      convertedValue = milliseconds / 60000;\n      convertedValue = Math.round(convertedValue * 100) / 100;\n      if (convertedValue === 1) return convertedValue + ' ' + 'minute';\n      else return convertedValue + ' ' + 'minutes';\n    } else if (milliseconds >= 3.6e6 && milliseconds < 1.728e8) {\n      convertedValue = milliseconds / 3.6e6;\n      convertedValue = Math.round(convertedValue * 100) / 100;\n      if (convertedValue === 1) return convertedValue + ' ' + 'hour';\n      else return convertedValue + ' ' + 'hours';\n    } else if (milliseconds >= 1.728e8) {\n      convertedValue = milliseconds / 8.64e7;\n      convertedValue = Math.round(convertedValue * 100) / 100;\n      return convertedValue + ' ' + 'days';\n    }\n  };\n\n  const convertRetentionSize = (byte: number) => {\n    let convertedByteValue;\n    if (Math.abs(byte) < 1000) {\n      if (byte === 1) return byte + ' ' + 'byte';\n      else return byte + ' ' + 'bytes';\n    } else if (Math.abs(byte) >= 1000 && Math.abs(byte) < 1000000) {\n      convertedByteValue = byte / 1000;\n      if (convertedByteValue === 1)\n        return convertedByteValue + ' ' + 'kilobyte';\n      else return convertedByteValue + ' ' + 'kilobytes';\n    } else if (Math.abs(byte) >= 1000000 && Math.abs(byte) < 1000000000) {\n      convertedByteValue = byte / 1000000;\n      if (convertedByteValue === 1)\n        return convertedByteValue + ' ' + 'megabyte';\n      else return convertedByteValue + ' ' + 'megabytes';\n    } else if (Math.abs(byte) >= 1000000000 && Math.abs(byte) < 1000000000000) {\n      convertedByteValue = byte / 1000000000;\n      if (convertedByteValue === 1)\n        return convertedByteValue + ' ' + 'gigaabyte';\n      else return convertedByteValue + ' ' + 'gigaabytes';\n    } else if (Math.abs(byte) >= 1000000000000) {\n      convertedByteValue = byte / 1000000000000;\n      if (convertedByteValue === 1)\n        return convertedByteValue + ' ' + 'terabyte';\n      else return convertedByteValue + ' ' + 'terabytes';\n    }\n  };\n  const rowData =\n    filteredTopics?.items?.map((topic) => [\n      {\n        title: (\n          <Link\n            to={getTopicDetailsPath(topic.name)}\n            onClick={(e) => {\n              e.preventDefault();\n              onClickTopic(topic.name);\n            }}\n          >\n            {topic?.name}\n          </Link>\n        ),\n      },\n      topic.partitions?.length,\n\n      convertRetentionTime(\n        Number(\n          topic.config?.filter((element) => element.key === 'retention.ms')[0]\n            ?.value || 0\n        )\n      ),\n\n      convertRetentionSize(\n        Number(\n          topic.config?.filter(\n            (element) => element.key === 'log.retention.bytes'\n          )[0]?.value || 0\n        )\n      ),\n    ]) || [];\n\n  useEffect(() => {\n    if (\n      search &&\n      search.trim() != '' &&\n      topics?.items &&\n      topics.items.length > 0\n    ) {\n      const filterSearch = topics?.items.filter(\n        (topicsFiltered) =>\n          topicsFiltered?.name && topicsFiltered.name.includes(search)\n      );\n      setFilteredTopics((prevState) =>\n        prevState\n          ? {\n              ...prevState,\n              items: filterSearch,\n            }\n          : undefined\n      );\n    } else {\n      setFilteredTopics(topics);\n    }\n  }, [search, topics]);\n\n  const onClear = () => {\n    setFilteredTopics(topics);\n  };\n  const onDelete = (rowId: any) => {\n    if (filteredTopics?.items) {\n      setTopicName(filteredTopics.items[rowId].name);\n    }\n    setDeleteModal(true);\n  };\n\n  const onEdit = (rowId: any) => {\n    if (filteredTopics?.items) {\n      onClickTopic(filteredTopics.items[rowId].name);\n    }\n  };\n\n  const actions = [\n    { title: 'Delete', onClick: (_, rowId) => onDelete(rowId) },\n    { title: 'Edit', onClick: (_, rowId) => onEdit(rowId) },\n  ];\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <>\n      {deleteModal && (\n        <DeleteTopics\n          topicName={topicName}\n          setDeleteModal={setDeleteModal}\n          deleteModal={deleteModal}\n          onDeleteTopic={onDeleteTopic}\n        />\n      )}\n      {rowData.length < 1 && search.length < 1 ? (\n        <EmptyTopics onCreateTopic={onCreateTopic} />\n      ) : (\n        <Card>\n          <Toolbar>\n            <ToolbarContent>\n              <ToolbarItem className='pf-c-toolbar-item--search'>\n                <SearchTopics\n                  onClear={onClear}\n                  search={search}\n                  setSearch={setSearch}\n                />\n              </ToolbarItem>\n              <ToolbarItem>\n                <Button\n                  id='topic-list-create-topic-button'\n                  className='topics-per-page'\n                  onClick={() => {\n                    onCreateTopic();\n                  }}\n                >\n                  Create topic\n                </Button>\n              </ToolbarItem>\n              <ToolbarItem variant='pagination'>\n                <Pagination\n                  itemCount={rowData.length}\n                  perPage={perPage}\n                  page={page}\n                  onSetPage={onSetPage}\n                  widgetId='topic-list-pagination-top'\n                  onPerPageSelect={onPerPageSelect}\n                />\n              </ToolbarItem>\n            </ToolbarContent>\n          </Toolbar>\n\n          <Table\n            aria-label='Compact Table'\n            variant={TableVariant.compact}\n            cells={tableColumns}\n            rows={\n              page != 1\n                ? rowData.slice(offset, offset + perPage)\n                : rowData.slice(0, perPage)\n            }\n            actions={actions}\n          >\n            <TableHeader />\n            <TableBody />\n          </Table>\n        </Card>\n      )}\n      <Divider />\n      {rowData.length < 1 && search.length > 1 && <EmptySearch />}\n      {rowData.length > 1 && (\n        <Card>\n          <Pagination\n            itemCount={rowData.length}\n            perPage={perPage}\n            page={page}\n            onSetPage={onSetPage}\n            widgetId='topic-list-pagination-bottom'\n            onPerPageSelect={onPerPageSelect}\n            offset={0}\n            variant={PaginationVariant.bottom}\n          />\n        </Card>\n      )}\n    </>\n  );\n};\n","import { useEffect, useRef } from 'react';\n\nexport const useTimeout: any = (callback: any, delay: number) => {\n  const savedCallback = useRef<any>();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setTimeout(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n    return;\n  }, [callback, delay]);\n};\n","export const consumerGroupData = [\n  {\n    id: 'Custom_0',\n    members: 2,\n    partitions: 2,\n    state: 'Stable',\n  },\n  {\n    id: 'Custom_1',\n    members: 1,\n    partitions: 1,\n    state: 'Empty',\n  },\n  {\n    id: 'Custom_2',\n    members: 0,\n    partitions: 0,\n    state: 'Stable',\n  },\n  {\n    id: 'Custom_3',\n    members: 2,\n    partitions: 2,\n    state: 'Stable',\n  },\n  {\n    id: 'Custom_4',\n    members: 1,\n    partitions: 0,\n    state: 'Stable',\n  },\n  {\n    id: 'Custom_5',\n    members: 0,\n    partitions: 0,\n    state: 'Empty',\n  },\n  {\n    id: 'Custom_6',\n    members: 2,\n    partitions: 1,\n    state: 'Stable',\n  },\n  {\n    id: 'Custom_7',\n    members: 2,\n    partitions: 2,\n    state: 'Stable',\n  },\n  {\n    id: 'Custom_8',\n    members: 2,\n    partitions: 1,\n    state: 'Stable',\n  },\n  {\n    id: 'Custom_9',\n    members: 1,\n    partitions: 2,\n    state: 'Stable',\n  },\n  {\n    id: 'Custom_10',\n    members: 2,\n    partitions: 1,\n    state: 'Stable',\n  },\n];\n","import React, { useState, useEffect } from 'react';\nimport { InputGroup, SearchInput } from '@patternfly/react-core';\nimport { consumerGroupData } from './ConsumerGroupData';\n\nexport interface IConsumerGroupData {\n  id: string;\n  members: number;\n  partitions: number;\n  state: number;\n}\n\nexport interface ISearchConsumerGroupProps {\n  setTableData: (IConsumerGroupData) => void;\n}\n\nconst SearchConsumers: React.FunctionComponent<ISearchConsumerGroupProps> = ({\n  setTableData,\n}) => {\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    if (search && search.trim() != '') {\n      const filterSearch = consumerGroupData.filter((consumersFiltered) =>\n        consumersFiltered?.id.includes(search)\n      );\n      setTableData(filterSearch);\n      console.log(filterSearch);\n    } else {\n      setTableData(consumerGroupData);\n    }\n  }, [search]);\n\n  const onChangeInput = (value: string) => {\n    setSearch(value);\n    setTableData(\n      consumerGroupData.filter(\n        (row) => row.id.toLowerCase().indexOf(search.toLowerCase()) > -1\n      )\n    );\n  };\n  const onClear = () => {\n    setSearch('');\n    setTableData(consumerGroupData);\n  };\n  return (\n    <InputGroup>\n      <SearchInput\n        name='searchName'\n        id='search-consumers-input'\n        type='search'\n        aria-label='search input '\n        placeholder='Search'\n        value={search}\n        onChange={onChangeInput}\n        onClear={onClear}\n      />\n    </InputGroup>\n  );\n};\nexport { SearchConsumers };\n","import React, { useState } from 'react';\nimport {\n  Card,\n  Divider,\n  Label,\n  Pagination,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableVariant,\n} from '@patternfly/react-table';\nimport { SearchConsumers } from './SearchConsumers';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons/dist/js/icons/exclamation-circle-icon';\nimport { CheckCircleIcon } from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport { consumerGroupData } from './ConsumerGroupData';\nimport { EmptySearch } from '../../../Topics/TopicList/Components/EmptySearch';\nexport const ConsumerGroupsList: React.FunctionComponent = () => {\n  const [page, setPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(10);\n  const [offset, setOffset] = useState(0);\n  const [tableData, setTableData] = useState(consumerGroupData);\n\n  const onSetPage = (_event, pageNumber: number) => {\n    setPage(pageNumber);\n    setOffset(page * perPage);\n  };\n\n  const onPerPageSelect = (_event, perPage: number) => {\n    setPerPage(perPage);\n  };\n\n  const tableColumns = [\n    { title: 'Consumer Group ID' },\n    { title: 'Active Members' },\n    { title: 'Unconsumed Partitions' },\n    { title: 'State' },\n  ];\n\n  //const rowData = model.consumersList.items.map((consumer) => [\n  const rowData = tableData.map((consumer) => [\n    consumer.id,\n    consumer.members,\n    consumer.partitions,\n    {\n      title: (\n        <Label\n          color={consumer.state === 'Stable' ? 'green' : 'red'}\n          icon={\n            consumer.state === 'Stable' ? (\n              <CheckCircleIcon />\n            ) : (\n              <ExclamationCircleIcon />\n            )\n          }\n        >\n          {consumer.state}\n        </Label>\n      ),\n    },\n  ]);\n\n  return (\n    <>\n      <Card>\n        <Toolbar>\n          <ToolbarContent>\n            <ToolbarItem>\n              <SearchConsumers setTableData={setTableData} />\n            </ToolbarItem>\n            <ToolbarItem variant='pagination'>\n              <Pagination\n                itemCount={rowData.length}\n                perPage={perPage}\n                page={page}\n                onSetPage={onSetPage}\n                widgetId='consumer-group-pagination-top'\n                onPerPageSelect={onPerPageSelect}\n              />\n            </ToolbarItem>\n          </ToolbarContent>\n        </Toolbar>\n        <Divider />\n        <Table\n          aria-label='Compact Table'\n          variant={TableVariant.compact}\n          cells={tableColumns}\n          rows={\n            page != 1\n              ? rowData.slice(offset, offset + perPage)\n              : rowData.slice(0, perPage)\n          }\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n        {rowData.length < 1 ? (\n          <EmptySearch />\n        ) : (\n          <Pagination\n            itemCount={rowData.length}\n            perPage={perPage}\n            page={page}\n            onSetPage={onSetPage}\n            widgetId='consumer-group-pagination-bottom'\n            onPerPageSelect={onPerPageSelect}\n            offset={0}\n          />\n        )}\n      </Card>\n      <Divider />\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  PageSection,\n  PageSectionVariants,\n  Title,\n  Tabs,\n  Level,\n  Tab,\n  TabTitleText,\n} from '@patternfly/react-core';\nimport { TopicsListComponent } from '../Topics/TopicList/Components/TopicsList';\nimport { ConsumerGroupsList } from '../ConsumerGroups/ConsumerGroupList/Components/ConsumerGroupList';\nimport { EllipsisVIcon } from '@patternfly/react-icons/dist/js/icons/ellipsis-v-icon';\nimport { useHistory } from 'react-router';\ninterface ITabHeaderProps {\n  eventKey: number;\n  instanceName?: string;\n}\nexport const AppNavigation: React.FunctionComponent<ITabHeaderProps> = ({\n  eventKey,\n  instanceName,\n}) => {\n  const [activeTabKey, setActiveTabKey] = useState(eventKey);\n  const handleTabClick = (event, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n  const history = useHistory();\n\n  const onCreateTopic = () => {\n    history.push('/topics/create');\n  };\n\n  const getTopicDetailsPath = (topic: string | undefined) => {\n    return `/topic/${topic}`;\n  };\n\n  const onClickTopic = (topic: string | undefined) => {\n    history.push(`/topic/${topic}`);\n  };\n\n  const onDeleteTopic = () => {\n    history.push('/topics');\n  };\n\n  const mainBreadcrumbs = (\n    <Breadcrumb>\n      <BreadcrumbItem to='#'>Kafka Instance</BreadcrumbItem>\n      <BreadcrumbItem to='#' isActive>\n        {instanceName ? instanceName : 'Kafka Instance Name'}\n      </BreadcrumbItem>\n    </Breadcrumb>\n  );\n\n  return (\n    <PageSection variant={PageSectionVariants.light}>\n      {mainBreadcrumbs}\n\n      <Level>\n        <Title headingLevel='h1'>\n          {instanceName ? instanceName : 'Kafka Instance Name'}\n        </Title>\n        <Button variant='plain' iconPosition='right'>\n          <EllipsisVIcon />\n        </Button>\n      </Level>\n\n      <Tabs activeKey={activeTabKey} onSelect={handleTabClick}>\n        <Tab\n          title={<TabTitleText>Topics</TabTitleText>}\n          eventKey={1}\n          id='topics-tab-section'\n          aria-label='Topics Tab'\n        >\n          <TopicsListComponent\n            onCreateTopic={onCreateTopic}\n            onClickTopic={onClickTopic}\n            getTopicDetailsPath={getTopicDetailsPath}\n            onDeleteTopic={onDeleteTopic}\n          />\n        </Tab>\n        <Tab\n          title={<TabTitleText>Consumer Groups</TabTitleText>}\n          eventKey={2}\n          id='consumer-groups-tab-section'\n          aria-label='Consumer Groups Tab'\n        >\n          <ConsumerGroupsList />\n        </Tab>\n      </Tabs>\n    </PageSection>\n  );\n};\n","import React, { FunctionComponent } from 'react';\n\nimport './style.scss';\nimport '@patternfly/react-core/dist/styles/base.css';\nimport { AppNavigation } from '../../Modules/AppNavigation/AppNavigation';\nconst Topics: FunctionComponent = () => {\n  return <AppNavigation eventKey={1} />;\n};\n\nexport { Topics };\n\nexport default Topics;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { AlertVariant } from '@patternfly/react-core';\nimport '../../CreateTopic/Components/CreateTopicWizard.css';\nimport { TopicAdvanceConfig } from '../../CreateTopic/Components/TopicAdvanceConfig';\nimport { getTopic, updateTopicModel } from '../../../../Services/index';\nimport { ConfigEntry, Topic, TopicSettings } from '../../../../OpenApi/api';\nimport { initialState, TopicContext } from '../../../../Contexts/Topic';\nimport { DeleteTopics } from '../../TopicList/Components/DeleteTopicsModal';\nimport { AlertContext } from '../../../../Contexts/Alert';\nimport { ConfigContext } from '../../../../Contexts';\n\nexport type UpdateTopicViewProps = {\n  topicName: string;\n  onCancelUpdateTopic: () => void;\n  onDeleteTopic: () => void;\n  onSaveTopic: () => void;\n};\nexport const UpdateTopicView: React.FunctionComponent<UpdateTopicViewProps> = ({\n  topicName,\n  onCancelUpdateTopic,\n  onDeleteTopic,\n  onSaveTopic,\n}) => {\n  const { store, updateBulkStore } = React.useContext(TopicContext);\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  const [topic, setTopic] = useState<Topic>();\n  const config = useContext(ConfigContext);\n  const { addAlert } = useContext(AlertContext);\n  const fetchTopic = async (topicName) => {\n    const topicRes = await getTopic(topicName, config);\n    setTopic(topicRes);\n    if (topicRes) saveToStore(topicRes);\n  };\n\n  useEffect(() => {\n    (async function () {\n      await updateBulkStore(initialState);\n      fetchTopic(topicName);\n    })();\n  }, []);\n\n  const saveToStore = (topic: Topic) => {\n    const advanceConfig = store;\n\n    advanceConfig.numPartitions = topic?.partitions?.length.toString() || '0';\n    advanceConfig.name = topic.name || '';\n    topic.config?.forEach((configItem) => {\n      advanceConfig[configItem.key || ''] = configItem.value || '';\n    });\n    updateBulkStore(advanceConfig);\n  };\n\n  const patchConfig = (\n    previousTopic: Topic | undefined\n  ): ConfigEntry[] | undefined => {\n    return previousTopic?.config\n      ?.map((v) => {\n        if (v.key) {\n          return {\n            key: v.key,\n            value: store[v.key],\n          };\n        }\n        return v;\n      })\n      .filter((v) => v.key !== 'replicationFactor');\n  };\n\n  const saveTopic = async () => {\n    const newConfig = patchConfig(topic);\n\n    const topicSettings: TopicSettings = {\n      // TODO Re-enable when the API supports setting the number of partition\n      // numPartitions: Number(store.numPartitions),\n      config: newConfig,\n    };\n\n    try {\n      const updateStatus = await updateTopicModel(\n        store.name,\n        topicSettings,\n        config\n      );\n\n      if (updateStatus === 200) {\n        addAlert(\n          'The topic was successfully updated in the Kafka instance',\n          AlertVariant.success\n        );\n        onSaveTopic();\n      }\n    } catch (err) {\n      addAlert(err.response.data.error, AlertVariant.danger);\n    }\n    updateBulkStore(initialState);\n  };\n\n  return (\n    <>\n      <TopicAdvanceConfig\n        isCreate={false}\n        saveTopic={saveTopic}\n        handleCancel={onCancelUpdateTopic}\n      />\n      <br />\n      <br />\n      {deleteModal && (\n        <DeleteTopics\n          deleteModal={deleteModal}\n          setDeleteModal={setDeleteModal}\n          topicName={topicName}\n          onDeleteTopic={onDeleteTopic}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  Tabs,\n  Tab,\n  TabTitleText,\n  PageSection,\n  PageSectionVariants,\n} from '@patternfly/react-core';\nimport { ConsumerGroupByTopicList } from '../TopicDetails/Components/ConsumerGroupsByTopic/ConsumerGroupsListByTopic.patternfly';\nimport { UpdateTopicView } from './Components/UpdateTopicView';\nimport { TopicDetailHead } from '../TopicDetails/Components/TopicDetailHead';\n\nexport interface UpdateTopicPageProps {\n  topicName: string;\n  getTopicListPath: () => string;\n  onClickTopicList: () => void;\n  onCancelUpdateTopic: () => void;\n  onDeleteTopic: () => void;\n  onSaveTopic: () => void;\n}\n\nexport const UpdateTopicPage: React.FunctionComponent<UpdateTopicPageProps> = ({\n  topicName,\n  getTopicListPath,\n  onClickTopicList,\n  onCancelUpdateTopic,\n  onDeleteTopic,\n  onSaveTopic,\n}) => {\n  return (\n    <>\n      <TopicDetailHead\n        topicName={topicName}\n        getTopicListPath={getTopicListPath}\n        onClickTopicList={onClickTopicList}\n      />\n      <PageSection\n        variant={PageSectionVariants.light}\n        padding={{ default: 'noPadding' }}\n      >\n        {/* <div> */}\n        <Tabs\n          activeKey={1}\n          onSelect={() => {\n            return;\n          }}\n          isBox={false}\n          className='tab-padding'\n        >\n          <Tab\n            eventKey={0}\n            title={<TabTitleText>Consumer Groups</TabTitleText>}\n          >\n            <ConsumerGroupByTopicList />\n          </Tab>\n          <Tab eventKey={1} title={<TabTitleText>Properties</TabTitleText>}>\n            <PageSection variant='light'>\n              <UpdateTopicView\n                topicName={topicName}\n                onCancelUpdateTopic={onCancelUpdateTopic}\n                onDeleteTopic={onDeleteTopic}\n                onSaveTopic={onSaveTopic}\n              />\n            </PageSection>\n          </Tab>\n        </Tabs>\n      </PageSection>\n    </>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport '@patternfly/react-core/dist/styles/base.css';\nimport { ConsumerGroupsList } from '../../Modules/ConsumerGroups/ConsumerGroupList/Components/ConsumerGroupList';\n\nexport const ConsumerGroupsView: FunctionComponent = () => {\n  return <ConsumerGroupsList />;\n};\n\nexport default ConsumerGroupsView;\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-circle-icon';\nimport {\n  Button,\n  ButtonVariant,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  PageSection,\n  Title,\n  TitleSizes,\n} from '@patternfly/react-core';\nimport { useTranslation } from 'react-i18next';\n\ntype IUnexpectedErrorProps = {\n  updateState: (hasError: boolean) => void;\n};\n\nexport const UnexpectedError: React.FC<IUnexpectedErrorProps> = ({\n  updateState,\n}) => {\n  const { t } = useTranslation();\n  const history = useHistory();\n\n  const navigateToHome = () => {\n    updateState(false);\n    history.push('/');\n  };\n\n  return (\n    <PageSection padding={{ default: 'noPadding' }}>\n      <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={ExclamationCircleIcon} />\n        <Title headingLevel='h1' size={TitleSizes.lg}>\n          {t('common.errorBoundaryTitle')}\n        </Title>\n        <EmptyStateBody>{t('common.unexpectedError')}</EmptyStateBody>\n        <Button variant={ButtonVariant.primary} onClick={navigateToHome}>\n          {t('common.returnToHome')}\n        </Button>\n      </EmptyState>\n    </PageSection>\n  );\n};\n","import React, { ErrorInfo } from 'react';\nimport { UnexpectedError } from './UnexpectedError';\n\ntype IErrorBoundaryProps = {\n  children: React.ReactNode;\n};\n\ntype IErrorBoundary = {\n  hasError: boolean;\n};\n\nexport class ErrorBoundary extends React.Component<\n  IErrorBoundaryProps,\n  IErrorBoundary\n> {\n  state: IErrorBoundary = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(error: Error): IErrorBoundary {\n    console.error(error);\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    console.error('error:', error, errorInfo);\n  }\n\n  updateState = (hasError: boolean): void => {\n    this.setState({ hasError });\n  };\n\n  render(): React.ReactNode {\n    if (this.state.hasError) {\n      return <UnexpectedError updateState={this.updateState} />;\n    }\n    return this.props.children;\n  }\n}\n","import {\n  Avatar,\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n  PageHeader,\n  Brand,\n  PageHeaderTools,\n} from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { CaretDownIcon } from '@patternfly/react-icons';\nimport avatarImg from '../../Images/img_avatar.svg';\nimport brandImg from '../../Images/brandImg.png';\n\nexport const AppMastHead: React.FC = () => {\n  const [isDropDownOpen, setIsDropDownOpen] = useState<boolean>(false);\n  const handleUserDropDownSelect = () => {\n    setIsDropDownOpen(!isDropDownOpen);\n  };\n\n  const handleUserDropDownToggle = () => {\n    setIsDropDownOpen(!isDropDownOpen);\n  };\n\n  const userDropDownItems = [<DropdownItem key='logout'>Logout</DropdownItem>];\n  const brandImgLogo = <Brand src={brandImg} alt={'Red Hat logo'} />;\n\n  const userDropDownToggle = (\n    <DropdownToggle\n      id='user-dropdown-toggle'\n      onToggle={handleUserDropDownToggle}\n      toggleIndicator={CaretDownIcon}\n    >\n      Ned Username\n    </DropdownToggle>\n  );\n\n  const userDropDown = (\n    <Dropdown\n      onSelect={handleUserDropDownSelect}\n      toggle={userDropDownToggle}\n      isOpen={isDropDownOpen}\n      isPlain\n      dropdownItems={userDropDownItems}\n    />\n  );\n\n  const avatar = (\n    <React.Fragment>\n      <Avatar src={avatarImg} className='app-masthead-avatar' alt='avatar' />\n    </React.Fragment>\n  );\n\n  const HeaderTools = (\n    <PageHeaderTools>\n      {userDropDown}\n      {avatar}\n    </PageHeaderTools>\n  );\n\n  return (\n    <PageHeader\n      logo={brandImgLogo}\n      logoComponent='h1'\n      headerTools={HeaderTools}\n    />\n  );\n};\n","import kafkai18n from '../i18n';\nimport { I18nextProvider } from 'react-i18next';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport { ConfigContext } from '../Contexts';\nimport { Topics } from '../Panels/Topics';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport CreateTopic from '../Panels/Topics/CreateView';\nimport TopicDetail from '../Panels/Topics/DetailView';\nimport UpdateTopicView from '../Panels/Topics/UpdateView';\nimport { TopicContextProvider } from '../Contexts/Topic';\nimport { ConsumerGroupsView } from '../Panels/ConsumerGroups/ConsumerGroupsView';\nimport { ConsumerGroupsTopicsView } from '../Panels/ConsumerGroupsByTopic/ConsumerGroupsByTopic';\nimport { ErrorBoundary } from '../Components/ErrorBoundary/ErrorBoundary';\nimport { AlertProvider } from '../Contexts/Alert/Context';\nimport { MastHead } from '../Panels/MastHead/MastHead';\n\n//Bootstrap i18next support\nReactDOM.render(\n  <I18nextProvider i18n={kafkai18n}>\n    <ConfigContext.Provider\n      value={{\n        basePath:\n          'http://localhost:8000/api/managed-services-strimzi-ui/v1/api',\n        getToken: async () => '',\n      }}\n    >\n      <TopicContextProvider>\n        <MastHead>\n          <Router>\n            <AlertProvider>\n              <ErrorBoundary>\n                <Switch>\n                  <Route path='/' component={Topics} exact />\n                  <Route path='/topics' component={Topics} exact />\n                  <Route\n                    path='/topic/:topicName'\n                    component={TopicDetail}\n                    exact\n                  />\n                  <Route path='/topics/create' component={CreateTopic} exact />\n                  <Route\n                    path='/topics/update/:topicName'\n                    component={UpdateTopicView}\n                    exact\n                  />\n                  <Route\n                    path='/consumerGroups'\n                    component={ConsumerGroupsView}\n                    exact\n                  />\n                  <Route\n                    path='/topics/consumerGroups/:topicName'\n                    component={ConsumerGroupsTopicsView}\n                    exact\n                  />\n                </Switch>\n              </ErrorBoundary>\n            </AlertProvider>\n          </Router>\n        </MastHead>\n      </TopicContextProvider>\n    </ConfigContext.Provider>\n  </I18nextProvider>,\n  document.getElementById('root')\n);\n","import React from 'react';\nimport { Page } from '@patternfly/react-core';\nimport { AppMastHead } from '../../Modules/AppNavigation/AppMastHead';\n\nexport type MastHeadProps = {\n  children: React.ReactNode;\n};\n\nexport const MastHead: React.FC<MastHeadProps> = ({ children }) => {\n  return (\n    <Page mainContainerId='main-container' header={<AppMastHead />}>\n      {children}\n    </Page>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { TopicDetailGroup } from '../../Modules/Topics/TopicDetails/TopicDetailPage';\n\ntype TopicUseParams = {\n  topicName: string;\n};\n\ntype TopicDetailParams = {\n  onDeleteTopic: () => void;\n};\n\nconst TopicDetail: FunctionComponent<TopicDetailParams> = ({\n  onDeleteTopic,\n}) => {\n  const { topicName } = useParams<TopicUseParams>();\n  const history = useHistory();\n\n  const useUpdateTopic = () => {\n    history.push(`/topics/update/${topicName}`);\n  };\n\n  return (\n    <TopicDetailGroup\n      topicName={topicName}\n      onUpdateTopic={useUpdateTopic}\n      getTopicListPath={() => '/topics'}\n      onClickTopicList={() => history.push('/topics')}\n      onDeleteTopic={onDeleteTopic}\n    />\n  );\n};\n\nexport { TopicDetail };\n\nexport default TopicDetail;\n","import React, { FunctionComponent } from 'react';\nimport './style.scss';\nimport '@patternfly/react-core/dist/styles/base.css';\nimport { useHistory } from 'react-router-dom';\nimport { CreateTopicPage } from 'src/Modules/Topics/CreateTopic/CreateTopicPage';\n\nconst CreateTopic: FunctionComponent = () => {\n  const history = useHistory();\n\n  return (\n    <CreateTopicPage\n      setIsCreateTopic={(value) => {\n        if (!value) {\n          history.goBack();\n        }\n      }}\n    />\n  );\n};\n\nexport { CreateTopic };\n\nexport default CreateTopic;\n","import React, { FunctionComponent } from 'react';\nimport './style.scss';\nimport { useHistory, useParams } from 'react-router';\nimport '@patternfly/react-core/dist/styles/base.css';\nimport { UpdateTopicPage } from 'src/Modules/Topics/UpdateTopic/UpdateTopicPage';\n\ntype TopicUseParams = {\n  topicName: string;\n};\n\nconst UpdateTopic: FunctionComponent<TopicUseParams> = () => {\n  const { topicName } = useParams<TopicUseParams>();\n  const history = useHistory();\n  return (\n    <UpdateTopicPage\n      topicName={topicName}\n      getTopicListPath={() => '/topics'}\n      onClickTopicList={() => history.push('/topics')}\n      onCancelUpdateTopic={() => history.push('/topics')}\n      onDeleteTopic={() => {\n        return;\n      }}\n      onSaveTopic={() => {\n        return;\n      }}\n    />\n  );\n};\n\nexport { UpdateTopic };\n\nexport default UpdateTopic;\n","import React, { FunctionComponent } from 'react';\nimport '@patternfly/react-core/dist/styles/base.css';\nimport { ConsumerGroupByTopicList } from '../../Modules/Topics/TopicDetails/Components/ConsumerGroupsByTopic/ConsumerGroupsListByTopic.patternfly';\n\nexport const ConsumerGroupsTopicsView: FunctionComponent = () => {\n  return <ConsumerGroupByTopicList />;\n};\n\nexport default ConsumerGroupsTopicsView;\n","import React from 'react';\nimport {\n  Alert,\n  AlertActionCloseButton,\n  AlertGroup,\n  AlertVariant,\n} from '@patternfly/react-core';\nimport { AlertType } from '../../Contexts/Alert';\n\ntype AlertToastGroupProps = {\n  alerts: AlertType[];\n  onCloseAlert: (key: number) => void;\n};\n\nexport const ServerAlertGroup: React.FC<AlertToastGroupProps> = ({\n  alerts,\n  onCloseAlert,\n}) => {\n  return (\n    <AlertGroup isToast>\n      {alerts.map(({ key, variant, message }) => (\n        <Alert\n          key={key}\n          isLiveRegion\n          variant={AlertVariant[variant]}\n          variantLabel=''\n          title={message}\n          actionClose={\n            <AlertActionCloseButton\n              title={message}\n              onClose={() => onCloseAlert(key)}\n            />\n          }\n        />\n      ))}\n    </AlertGroup>\n  );\n};\n","import React, { createContext, useEffect, useState } from 'react';\nimport { AlertVariant } from '@patternfly/react-core';\nimport { ServerAlertGroup } from '../../Components/ServerAlertGroup/ServerAlertGroup';\nimport { AlertType, AlertContextProps, TimeOut } from './Alert.types';\n\nexport const AlertContext = createContext<AlertContextProps>(\n  {} as AlertContextProps\n);\n\nexport const AlertProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [alerts, setAlerts] = useState<AlertType[]>([]);\n  const [timers, setTimers] = useState<TimeOut[]>([]);\n\n  useEffect(() => {\n    const timersKeys = timers.map((timer) => timer?.key);\n    const timeOuts = alerts\n      .filter((alert) => !timersKeys.includes(alert.key))\n      .map((alert) => {\n        const timeOut = setTimeout(() => hideAlert(alert.key), 8000);\n        return { key: alert.key, timeOut };\n      });\n    setTimers([...timers, ...timeOuts]);\n    return () => timers.forEach((timer) => clearTimeout(timer.timeOut));\n  }, [alerts]);\n\n  const hideAlert = (key: number) => {\n    setAlerts((alerts) => [...alerts.filter((el) => el.key !== key)]);\n    setTimers((timers) => [...timers.filter((timer) => timer.key === key)]);\n  };\n\n  const createId = () => new Date().getTime();\n\n  const addAlert = (\n    message: string,\n    variant: AlertVariant = AlertVariant.default\n  ) => {\n    setAlerts([...alerts, { key: createId(), message, variant }]);\n  };\n\n  return (\n    <AlertContext.Provider value={{ addAlert }}>\n      <ServerAlertGroup alerts={alerts} onCloseAlert={hideAlert} />\n      {children}\n    </AlertContext.Provider>\n  );\n};\n"],"sourceRoot":""}