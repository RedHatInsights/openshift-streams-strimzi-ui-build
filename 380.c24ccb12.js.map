{"version":3,"file":"380.c24ccb12.js","mappings":"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","sources":["webpack://kafka-ui/./src/modules/Topics/components/TopicsTable/TopicsToolbar.tsx","webpack://kafka-ui/./src/modules/Topics/components/TopicsTable/TopicsTable.tsx","webpack://kafka-ui/./src/modules/Topics/Topics.tsx","webpack://kafka-ui/./src/utils/common.ts"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Button,\n  ButtonVariant,\n  InputGroup,\n  TextInput,\n  ToolbarFilter,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { MASToolbar, ToolbarItemProps, MASPagination } from '@app/components';\n\nexport type TopicsToolbarProps = {\n  total: number;\n  page: number;\n  perPage: number;\n  setFilteredValue: (value: string) => void;\n  filteredValue: string;\n  onCreateTopic?: () => void;\n};\n\nconst TopicsToolbar: React.FC<TopicsToolbarProps> = ({\n  total = 0,\n  page,\n  perPage,\n  setFilteredValue,\n  filteredValue = '',\n  onCreateTopic,\n}) => {\n  const { t } = useTranslation();\n  const [topicInputValue, setTopicInputValue] = useState<string>('');\n\n  const onClear = () => {\n    setFilteredValue('');\n  };\n\n  const onChangeInput = (value: string) => {\n    setTopicInputValue(value);\n  };\n\n  const onSearch = () => {\n    setFilteredValue(topicInputValue);\n    setTopicInputValue('');\n  };\n\n  const onDeleteChip = () => {\n    setFilteredValue('');\n  };\n\n  const toggleGroupItems = (\n    <>\n      <ToolbarFilter\n        chips={filteredValue ? [filteredValue] : []}\n        deleteChip={onDeleteChip}\n        categoryName={''}\n      >\n        <InputGroup>\n          <TextInput\n            name='searchName'\n            id='search-topics-input'\n            type='search'\n            aria-label={t('topic.topic_search_input')}\n            placeholder={t('common.search')}\n            value={topicInputValue}\n            onChange={onChangeInput}\n          />\n          <Button\n            variant={ButtonVariant.control}\n            isDisabled={topicInputValue.length ? false : true}\n            onClick={onSearch}\n            aria-label={t('topic.topic_search')}\n          >\n            <SearchIcon />\n          </Button>\n        </InputGroup>\n      </ToolbarFilter>\n    </>\n  );\n  const toolbarItems: ToolbarItemProps[] = [\n    {\n      item: (\n        <Button\n          id='topic-list-create-topic-button'\n          className='topics-per-page'\n          data-testid='actionCreateTopic'\n          onClick={onCreateTopic}\n        >\n          {t('topic.create_topic')}\n        </Button>\n      ),\n    },\n  ];\n\n  if (total > 0) {\n    toolbarItems.push({\n      item: (\n        <MASPagination\n          widgetId='consumer-group-pagination-options-menu-top'\n          itemCount={total}\n          page={page}\n          perPage={perPage}\n          titles={{\n            paginationTitle: t('common.minimal_pagination'),\n            perPageSuffix: t('common.per_page_suffix'),\n            toFirstPage: t('common.to_first_page'),\n            toPreviousPage: t('common.to_previous_page'),\n            toLastPage: t('common.to_last_page'),\n            toNextPage: t('common.to_next_page'),\n            optionsToggle: t('common.options_toggle'),\n            currPage: t('common.curr_page'),\n          }}\n        />\n      ),\n      variant: 'pagination',\n      alignment: { default: 'alignRight' },\n    });\n  }\n\n  return (\n    <MASToolbar\n      toolbarProps={{\n        id: 'instance-toolbar',\n        clearAllFilters: onClear,\n        collapseListedFiltersBreakpoint: 'md',\n        inset: { xl: 'insetLg' },\n      }}\n      toggleGroupProps={{ toggleIcon: '', breakpoint: 'md' }}\n      toggleGroupItems={toggleGroupItems}\n      toolbarItems={toolbarItems}\n    />\n  );\n};\n\nexport { TopicsToolbar };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { PaginationVariant } from '@patternfly/react-core';\nimport {\n  TableVariant,\n  sortable,\n  IRowData,\n  OnSort,\n  ISortBy,\n} from '@patternfly/react-table';\nimport { useBasename } from '@bf2/ui-shared';\nimport {\n  MASTable,\n  MASPagination,\n  EmptyState,\n  MASEmptyStateVariant,\n} from '@app/components';\nimport { Topic } from '@rhoas/kafka-instance-sdk';\nimport { TopicsToolbar, TopicsToolbarProps } from './TopicsToolbar';\nimport { convertRetentionSize, convertRetentionTime } from '@app/utils';\nimport { useModal, ModalType } from '@app/components';\n\nexport type TopicsTableProps = TopicsToolbarProps & {\n  topicItems: Topic[];\n  rowDataTestId?: string;\n  filteredValue: string;\n  onEdit?: (topicName?: string | undefined) => void;\n  onDeleteTopic?: () => void;\n  refreshTopics: () => void;\n  onSort: OnSort;\n  sortBy: ISortBy;\n};\n\nconst TopicsTable: React.FC<TopicsTableProps> = ({\n  total,\n  page,\n  perPage,\n  setFilteredValue,\n  filteredValue,\n  onCreateTopic,\n  topicItems,\n  rowDataTestId,\n  onEdit,\n  onDeleteTopic,\n  refreshTopics,\n  onSort,\n  sortBy,\n}) => {\n  const { t } = useTranslation();\n  const { showModal } = useModal<ModalType.DeleteTopic>();\n  const { getBasename } = useBasename() || { getBasename: () => '' };\n  const basename = getBasename();\n\n  const tableColumns = [\n    { title: t('common.name') },\n    { title: t('common.partitions'), transforms: [sortable] },\n    { title: t('topic.retention_time'), transforms: [sortable] },\n    { title: t('topic.retention_size'), transforms: [sortable] },\n  ];\n\n  const onDelete = (topicName: string) => {\n    showModal(ModalType.DeleteTopic, {\n      topicName,\n      onDeleteTopic,\n      refreshTopics,\n    });\n  };\n\n  const onSelectKebabDropdownOption = (\n    //event: React.MouseEvent<HTMLElement>,\n    originalData: Topic,\n    action: string\n  ) => {\n    const { name = '' } = originalData;\n    if (action === 'delete') {\n      onDelete(name);\n    } else if (action === 'edit') {\n      onEdit && onEdit(name);\n    }\n    // Set focus back on previous selected element i.e. kebab button\n    //event?.target?.parentElement?.parentElement?.previousSibling?.focus();\n  };\n\n  const actionResolver = (rowData: IRowData) => {\n    const originalData: Topic = rowData.originalData;\n    const resolver = [\n      {\n        title: t('common.delete'),\n        ['data-testid']: 'tableTopics-actionDelete',\n        onClick: () => onSelectKebabDropdownOption(originalData, 'delete'),\n      },\n      {\n        title: t('common.edit'),\n        ['data-testid']: 'tableTopics-actionEdit',\n        onClick: () => onSelectKebabDropdownOption(originalData, 'edit'),\n      },\n    ];\n    return resolver;\n  };\n\n  const preparedTableCells = () => {\n    const tableRow: (IRowData | string[])[] | undefined = [];\n    topicItems?.map((row: IRowData) => {\n      const { name, partitions, config } = row;\n\n      tableRow.push({\n        cells: [\n          {\n            title: (\n              <Link\n                data-testid='tableTopics-linkTopic'\n                to={`${basename}/topics/${name}`}\n              >\n                {name}\n              </Link>\n            ),\n          },\n          partitions?.length,\n          convertRetentionTime(\n            Number(\n              config?.filter((element) => element.key === 'retention.ms')[0]\n                ?.value || 0\n            )\n          ),\n          convertRetentionSize(\n            Number(\n              config?.filter((element) => element.key === 'retention.bytes')[0]\n                ?.value || 0\n            )\n          ),\n        ],\n        originalData: row,\n      });\n    });\n    return tableRow;\n  };\n\n  const rows = preparedTableCells();\n\n  return (\n    <>\n      <TopicsToolbar\n        total={total}\n        page={page}\n        perPage={perPage}\n        onCreateTopic={onCreateTopic}\n        setFilteredValue={setFilteredValue}\n        filteredValue={filteredValue}\n      />\n      <MASTable\n        tableProps={{\n          cells: tableColumns,\n          rows,\n          'aria-label': t('topic.topic_list_table'),\n          actionResolver: actionResolver,\n          shouldDefaultCustomRowWrapper: true,\n          variant: TableVariant.compact,\n          onSort,\n          sortBy,\n        }}\n        rowDataTestId={rowDataTestId || 'tableTopics-row'}\n      />\n      {topicItems?.length < 1 && filteredValue.length > 0 && (\n        <EmptyState\n          emptyStateProps={{\n            variant: MASEmptyStateVariant.NoResult,\n          }}\n          titleProps={{\n            title: t('common.no_results_title'),\n          }}\n          emptyStateBodyProps={{\n            body: t('common.no_results_body'),\n          }}\n        />\n      )}\n      {total > 0 && (\n        <MASPagination\n          widgetId='consumer-group-pagination-options-menu-bottom'\n          itemCount={total}\n          variant={PaginationVariant.bottom}\n          page={page}\n          perPage={perPage}\n          titles={{\n            paginationTitle: t('common.full_pagination'),\n            perPageSuffix: t('common.per_page_suffix'),\n            toFirstPage: t('common.to_first_page'),\n            toPreviousPage: t('common.to_previous_page'),\n            toLastPage: t('common.to_last_page'),\n            toNextPage: t('common.to_next_page'),\n            optionsToggle: t('common.options_toggle'),\n            currPage: t('common.curr_page'),\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport { TopicsTable };\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport {\n  AlertVariant,\n  Card,\n  PageSection,\n  PageSectionVariants,\n} from '@patternfly/react-core';\nimport { useTimeout } from '@app/hooks/useTimeOut';\nimport { TopicsTable } from './components';\nimport {\n  EmptyState,\n  MASEmptyStateVariant,\n  MASLoading,\n  usePaginationParams,\n} from '@app/components';\nimport { getTopics, OrderKey } from '@app/services';\nimport { ConfigContext, useFederated } from '@app/contexts';\nimport { Topic } from '@rhoas/kafka-instance-sdk';\nimport { useAlert, useBasename } from '@bf2/ui-shared';\nimport './Topics.css';\nimport { ISortBy, OnSort, SortByDirection } from '@patternfly/react-table';\n\nexport type ITopic = {\n  name: string;\n  replicas: number;\n  partitions: number;\n};\n\nexport type ITopicProps = {\n  rows: ITopic[];\n};\n\nconst Topics: React.FC = () => {\n  const { onError } = useFederated() || {};\n  const { t } = useTranslation();\n  const { addAlert } = useAlert() || {\n    addAlert: () => {\n      // No-op\n    },\n  };\n  const config = useContext(ConfigContext);\n  const { page = 1, perPage = 10 } = usePaginationParams() || {};\n  const history = useHistory();\n  const { getBasename } = useBasename() || { getBasename: () => '' };\n  const basename = getBasename();\n\n  const [topicItems, setTopicItems] = useState<Topic[]>();\n  const [searchTopicName, setSearchTopicName] = useState<string>('');\n  const [offset, setOffset] = useState<number>(0);\n  const [order, setOrder] = useState<SortByDirection>();\n  const [orderKey, setOrderKey] = useState<OrderKey>();\n  const [sortBy, setSortBy] = useState<ISortBy>({ index: 0, direction: 'asc' });\n\n  useEffect(() => {\n    fetchTopic();\n  }, [searchTopicName, order, orderKey]);\n\n  useTimeout(() => fetchTopic(), 5000);\n\n  useEffect(() => {\n    const offset = perPage * (page - 1);\n    setOffset(offset);\n  }, [page, perPage]);\n\n  const onClickCreateTopic = () => {\n    history.push(`${basename}/topic/create`);\n  };\n\n  const onEditTopic = (topicName: string | undefined) => {\n    history.push(`${basename}/topic/update/${topicName}`);\n  };\n\n  const onEdit = (topicName: string | undefined) => {\n    onEditTopic && onEditTopic(topicName);\n  };\n\n  const onSort: OnSort = (_event, index, direction) => {\n    const sortableCols = {\n      '0': 'name',\n      '1': 'partitions',\n      '2': 'retention.ms',\n      '3': 'retention.bytes',\n    };\n\n    setOrderKey(sortableCols[index]);\n    setOrder(direction);\n    setSortBy({ index, direction });\n  };\n\n  const fetchTopic = async () => {\n    try {\n      await getTopics(\n        config,\n        100,\n        perPage,\n        searchTopicName,\n        offset,\n        order,\n        orderKey\n      ).then((response) => {\n        setTopicItems(response?.items);\n      });\n    } catch (err) {\n      //TODO: Update the api to allow suppress alerts if the application does not want to show them as well.\n      if (onError && err.response.data.code === 401) {\n        onError(err.response.data.code, err.response.data.error_message);\n      } else {\n        addAlert({\n          title: err.response.data.error_message,\n          variant: AlertVariant.danger,\n        });\n      }\n    }\n  };\n\n  const renderTopicsTable = () => {\n    if (topicItems === undefined) {\n      return (\n        <PageSection\n          className='kafka-ui-m-full-height'\n          variant={PageSectionVariants.light}\n          padding={{ default: 'noPadding' }}\n        >\n          <MASLoading />\n        </PageSection>\n      );\n    } else if (topicItems.length < 1 && searchTopicName.length < 1) {\n      return (\n        <EmptyState\n          emptyStateProps={{\n            variant: MASEmptyStateVariant.NoItems,\n            'data-ouia-page-id': 'emptyStateTopics',\n          }}\n          titleProps={{\n            title: t('topic.empty_topics_title'),\n          }}\n          emptyStateBodyProps={{\n            body: t('topic.empty_topics_body'),\n          }}\n          buttonProps={{\n            title: t('topic.create_topic'),\n            onClick: onClickCreateTopic,\n            'data-testid': 'actionCreateTopic',\n          }}\n        />\n      );\n    } else if (topicItems) {\n      return (\n        <TopicsTable\n          total={topicItems.length || 0}\n          page={page}\n          perPage={perPage}\n          onCreateTopic={onClickCreateTopic}\n          topicItems={\n            searchTopicName\n              ? topicItems?.slice(0, perPage)\n              : topicItems?.slice(offset, offset + perPage)\n          }\n          filteredValue={searchTopicName}\n          setFilteredValue={setSearchTopicName}\n          refreshTopics={fetchTopic}\n          onEdit={onEdit}\n          onSort={onSort}\n          sortBy={sortBy}\n        />\n      );\n    }\n    return <></>;\n  };\n\n  return (\n    <>\n      <Card className='kafka-ui-m-full-height' data-ouia-page-id='tableTopics'>\n        {renderTopicsTable()}\n      </Card>\n    </>\n  );\n};\n\nexport { Topics };\nexport default Topics;\n","export interface FederatedProps {\n  onError: (errorCode: number, message: string) => void;\n}\n\nexport const convertRetentionTime = (milliseconds: number): string => {\n  let convertedValue;\n  if (milliseconds === -1) {\n    return 'Unlimited';\n  } else if (milliseconds < 60000) {\n    if (milliseconds === 1) return milliseconds + ' ' + 'millisecond';\n    else return milliseconds + ' ' + 'milliseconds';\n  } else if (milliseconds >= 60000 && milliseconds < 3.6e6) {\n    convertedValue = milliseconds / 60000;\n    convertedValue = Math.round(convertedValue * 100) / 100;\n    if (convertedValue === 1) return convertedValue + ' ' + 'minute';\n    else return convertedValue + ' ' + 'minutes';\n  } else if (milliseconds >= 3.6e6 && milliseconds < 1.728e8) {\n    convertedValue = milliseconds / 3.6e6;\n    convertedValue = Math.round(convertedValue * 100) / 100;\n    if (convertedValue === 1) return convertedValue + ' ' + 'hour';\n    else return convertedValue + ' ' + 'hours';\n  } else if (milliseconds >= 1.728e8) {\n    convertedValue = milliseconds / 8.64e7;\n    convertedValue = Math.round(convertedValue * 100) / 100;\n    return convertedValue + ' ' + 'days';\n  }\n  return milliseconds.toString();\n};\n\nexport const convertRetentionSize = (byte: number): string => {\n  let convertedByteValue;\n  if (byte === -1) {\n    return 'Unlimited';\n  } else if (Math.abs(byte) < 1024) {\n    if (byte === 1) return byte + ' ' + 'byte';\n    else return byte + ' ' + 'bytes';\n  } else if (Math.abs(byte) >= 1024 && Math.abs(byte) < 1048576) {\n    convertedByteValue = byte / 1024;\n    if (convertedByteValue === 1) return convertedByteValue + ' ' + 'kibibyte';\n    else return convertedByteValue + ' ' + 'kibibytes';\n  } else if (Math.abs(byte) >= 1048576 && Math.abs(byte) < 1073741824) {\n    convertedByteValue = byte / 1048576;\n    if (convertedByteValue === 1) return convertedByteValue + ' ' + 'mebibyte';\n    else return convertedByteValue + ' ' + 'mebibytes';\n  } else if (Math.abs(byte) >= 1073741824 && Math.abs(byte) < 1.0995116e12) {\n    convertedByteValue = byte / 1073741824;\n    if (convertedByteValue === 1) return convertedByteValue + ' ' + 'gibibyte';\n    else return convertedByteValue + ' ' + 'gibibytes';\n  } else if (Math.abs(byte) >= 1.0995116e12) {\n    convertedByteValue = byte / 1.0995116e12;\n    if (convertedByteValue === 1) return convertedByteValue + ' ' + 'tebibyte';\n    else return convertedByteValue + ' ' + 'tebibytes';\n  }\n  return byte.toString();\n};\n"],"names":["TopicsToolbar","total","page","perPage","setFilteredValue","filteredValue","onCreateTopic","t","useTranslation","useState","topicInputValue","setTopicInputValue","toggleGroupItems","ToolbarFilter","chips","deleteChip","categoryName","InputGroup","TextInput","name","id","type","placeholder","value","onChange","Button","variant","ButtonVariant","isDisabled","length","onClick","SearchIcon","toolbarItems","item","className","push","MASPagination","widgetId","itemCount","titles","paginationTitle","perPageSuffix","toFirstPage","toPreviousPage","toLastPage","toNextPage","optionsToggle","currPage","alignment","default","MASToolbar","toolbarProps","clearAllFilters","collapseListedFiltersBreakpoint","inset","xl","toggleGroupProps","toggleIcon","breakpoint","TopicsTable","tableRow","topicItems","rowDataTestId","onEdit","onDeleteTopic","refreshTopics","onSort","sortBy","showModal","basename","getBasename","useBasename","tableColumns","title","transforms","sortable","onSelectKebabDropdownOption","originalData","action","topicName","rows","map","row","partitions","config","cells","Link","to","Number","filter","element","key","MASTable","tableProps","actionResolver","rowData","shouldDefaultCustomRowWrapper","TableVariant","EmptyState","emptyStateProps","titleProps","emptyStateBodyProps","body","PaginationVariant","Topics","onError","addAlert","useAlert","useContext","history","useHistory","setTopicItems","searchTopicName","setSearchTopicName","offset","setOffset","order","setOrder","orderKey","setOrderKey","index","direction","setSortBy","useEffect","fetchTopic","onClickCreateTopic","onEditTopic","_event","then","response","items","data","code","error_message","AlertVariant","Card","undefined","PageSection","PageSectionVariants","padding","MASLoading","buttonProps","slice","convertRetentionTime","milliseconds","convertedValue","Math","round","toString","convertRetentionSize","byte","convertedByteValue","abs"],"sourceRoot":""}